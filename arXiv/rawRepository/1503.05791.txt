arXiv:1503.05791v1 [q-bio.PE] 19 Mar 2015

Asymptotic properties of the number of matching coalescent histories for
caterpillar-like families of species trees
Filippo Disanto∗
Noah A. Rosenberg
Department of Biology, Stanford University, Stanford, CA 94305 USA

March 20, 2015

Abstract
Coalescent histories provide lists of species tree branches on which gene tree coalescences can take place,
and their enumerative properties assist in understanding the computational complexity of calculations central
in the study of gene trees and species trees. Here, we solve an enumerative problem left open by Rosenberg
(IEEE/ACM Transactions on Computational Biology and Bioinformatics 10: 1253-1262, 2013) concerning the
number of coalescent histories for gene trees and species trees with a matching labeled topology that belongs to
a generic caterpillar-like family. By bringing a generating function approach to the study of coalescent histories,
we prove that for any caterpillar-like family with seed tree t, the sequence (hn )n≥0 describing the number of
matching coalescent histories of the nth tree of the family grows asymptotically as a constant multiple of the
Catalan numbers. Thus, hn ∼ βt cn , where the asymptotic constant βt > 0 depends on the shape of the seed
tree t. The result extends a claim demonstrated only for seed trees with at most 8 taxa to arbitrary seed trees,
expanding the set of cases for which detailed enumerative properties of coalescent histories can be determined.
We introduce a procedure that computes from t the constant βt as well as the algebraic expression for the
generating function of the sequence (hn )n≥0 .

1

Introduction

Coalescent histories, mathematical structures representing combinatorially distinct ways in which a given gene
tree can coalesce along the branches of a given species tree, are important in a variety of phylogenetic problems [5,
13, 14]. They arise most prominently in characterizing the set of objects over which a sum is performed in a
fundamental calculation for inference of species trees from information on multiple genetic loci, the evaluation
of gene tree probabilities conditional on species trees [4].
Because of the appearance of coalescent histories in sets over which sums are computed, as well as in state
spaces of certain phylogenetic Markov chains [6, 9, 10], solutions to enumerative problems involving coalescent
histories contribute to an understanding of the computational complexity of phylogenetic calculations. A recursion for the number of coalescent histories for a given gene tree and species tree has been established [12], and
several studies have reported exact numerical results and closed-form expressions for the number of coalescent
histories for small trees and for specific types of trees of arbitrarily large size [3, 4, 5, 12, 13, 14, 16]. The latter
computations have proceeded both by solving or deploying the recursion in specific cases [12, 13, 14, 16], as
well as by identifying correspondences between coalescent histories and other combinatorial structures for which
enumerative results have already been established [3, 4, 5].
∗

Corresponding author. Email: fdisanto@stanford.edu.

1

t (n) =
seed
tree

t

Figure 1: A caterpillar-like family of species trees (t

n

(n)

)n≥0 . For a seed tree t, by adding n ≥ 0 branches each with 1 leaf,
we obtain the nth tree of the family, t(n) . If t has 2 taxa, then (t(n) )n≥0 is simply the caterpillar family.

One class of gene trees and species trees of particular interest for enumeration of coalescent histories is the
caterpillar-like families, trees that have a caterpillar shape, except that the caterpillar subtree with r taxa is
replaced by a subtree of size r that is not necessarily a caterpillar subtree (Fig. 1). For the simplest caterpillar-like
family, the set of caterpillar trees themselves, if the gene tree and species tree have the same caterpillar labeled
topology with n taxa, then the number of coalescent histories is a Catalan number,


1 2n − 2
.
(1)
cn−1 =
n n−1
For Tr -caterpillar-like families, in which the r-taxon subtree of an n-taxon caterpillar species tree is replaced
by an r-taxon subtree Tr (Fig. 1), by employing the recursion method, Rosenberg [13] obtained the exact number
of coalescent histories for all n, for each Tr with r ≤ 8, in the case that the gene tree and species tree have the
same labeled topology. Rosenberg [13] argued that in each of these cases, as n → ∞, the number of coalescent
histories is asymptotic to a constant multiple of the Catalan numbers. A proof of this result has been presented
in full for each case with r ≤ 5 [3, 12, 13], and by computer algebra for cases with r = 6, 7, and 8 [13].
Here, using a substantially different approach that brings to studies of coalescent histories the methods of
analytic combinatorics, we produce an enumeration result that covers caterpillar-like families in general. We
show that the result of [13] applies to all caterpillar-like families, not only those for which Tr has r ≤ 8. That is,
we demonstrate that for any Tr , as n → ∞, the number of coalescent histories in the Tr -caterpillar-like family is
asymptotic to a constant multiple of the Catalan numbers. We describe a method for computing the constant
and provide a symbolic tool for performing the computation. Finally, we discuss the results in terms of their
impact in mathematical phylogenetics.

2
2.1

Preliminaries
Species trees and coalescent histories

We consider binary rooted leaf-labeled species trees, taking a single arbitrary labeling (without loss of generality)
to represent a given unlabeled species tree topology. We consider an arbitrarily labeled species tree and its
unlabeled tree interchangeably, treating the labeling as implicit.
We examine coalescent histories for the case in which gene trees and species trees have the same labeled
topology t, terming a coalescent history in this case a matching coalescent history. To be a matching coalescent
history, a mapping h from the internal nodes of t (viewed as the gene tree) to the branches of t (viewed as
the species tree) must satisfy two conditions: (a) for each leaf x in t, if x descends from node k in t, then x
descends from branch h(k) in t; (b) for each pair of internal nodes k1 and k2 in t, if k2 descends from k1 in t, then
branch h(k2 ) descends from or coincides with branch h(k1 ) in t. The definition of matching coalescent histories
is illustrated in Figure 2. We henceforth consider only matching coalescent histories, treating “matching” as
implicit in references to coalescent histories; we also refer simply to histories for short.
2

B

A

h( k2 )

C

h ( k1 )
k1
h( k)
k2

k
A B C

D

E

A B C

D

E

A B C

D

E

A B C

D

E

A B C

D

E

A B C

D

E

Figure 2: Matching coalescent histories. (A) A matching coalescent history. (B) A mapping from the internal nodes of a
tree to its branches that does not satisfy condition (a). Leaf B is descended from node k but does not descend from branch
h(k). (C) A mapping from the internal nodes of a tree to its internal branches that does not satisfy condition (b). Node k2
is descended from node k1 , but branch h(k2 ) is strictly ancestral to branch h(k1 ).

2.2

Caterpillar-like families of species trees

For a binary species tree t with at least 2 taxa, we denote by (t(n) )n≥0 the caterpillar-like family generated by
the seed tree t. This family is recursively defined by taking t(0) = t and letting t(n+1) be the tree obtained by
appending t(n) and a single leaf to a same root (Fig. 1).
Our interest is in the number of matching coalescent histories of t(n) for n ≥ 0, a quantity we denote by hn (t)
or simply hn . We note that whereas [13] indexed trees by their numbers of taxa, here n represents the number
of taxa appended above the root of the seed tree, so that if seed tree t has |t| taxa, then |t| + n gives the number
of taxa in t(n) .

2.3

Principles of analytic combinatorics

We rely on techniques of analytic combinatorics [7] to obtain our enumerative results, and recall P
several key
n
points. In general, an integer sequence (an )n≥0 can be associated with a formal power series A(z) = ∞
n=0 an z ,
also termed the generating function of the integers an . Considering z as a complex variable, typically in a
neighborhood of 0, features of the function A(z) are related to the growth of the coefficients an .
More precisely, generating functions, considered as complex functions, enable analyses of the asymptotic
growth of the associated integer sequences through the analysis of their singularities in the complex plane. In
particular, under suitable conditions, there exists a general correspondence between the singular expansion of a
generating function A(z) near its dominant singularities—those nearest the origin—and the asymptotic behavior
of the associated coefficients an (Chapter VI of [7]). We make use of generating functions that near their unique
dominant singularity can be described by means of the square root function, and for which theorems on singularity
analysis of generating functions [7] consequently apply.

2.4

Catalan numbers

The Catalan sequence appears often in combinatorics [7, 8, 15] and features prominently in our analysis. Rewriting eq. (1) with index n rather than n − 1,
 
2n
1
.
(2)
cn =
n+1 n
The associated generating function is
C(z) =

∞
X

n

cn z =

n=0

1−

√

1 − 4z
.
2z

(3)

By definition, if [z n ]f (z) denotes the nth term in the power series expansion of f (z) at z = 0, we have
√
√
1
1
cn = [z n ]C(z) = [z n+1 ](1 − 1 − 4z) = [z n+1 ](− 1 − 4z).
2
2
3

(4)

Asymptotically, applying Stirling’s approximation n! ∼
cn ∼

3

√

2πn(n/e)n to eq. (2), the Catalan sequence satisfies

4n
√ .
n3/2 π

(5)

The number of matching coalescent histories for caterpillar-like families

Our goal is to produce a procedure that evaluates the number of coalescent histories hn (t) for matching gene
trees and species trees in the caterpillar-like family that begins with seed tree t, and moreover, to show that
hn (t) ∼ βt cn ,

(6)

where the multiplier βt > 0 for the Catalan sequence is a constant depending on t. In other words, we wish to
demonstrate that as n → ∞, the ratio hn /cn converges to a constant βt > 0 that depends on the seed tree t.
First, in Section 3.1, we determine a lower bound for the number of matching coalescent histories of the nth
tree t(n) of the caterpillar-like family with seed tree t. Next, in Section 3.2, we introduce a concept of m-rooted
histories of a species tree t(n) . The section provides an iterative construction of the rooted histories of t(n+1) from
those of t(n) , describing the construction by means of a convenient labeling scheme. We follow a commonly used
combinatorial enumeration strategy [1, 2] that determines a recursive succession rule for successive collections
of objects in a sequence and then uses this rule to compute a generating function. In Section 3.3, we use the
iterative construction to produce a bivariate generating function whose coefficients hn,m are the numbers of mrooted histories for trees t(n) . We next obtain the generating function for the integer sequence (hn )n≥0 describing
the number of matching coalescent histories for the t(n) . Finally, using the lower bound from Section 3.1, in
Section 3.4, we apply methods of analytic combinatorics to study the asymptotic behavior of hn .

3.1

Lower bound for hn

To produce a lower bound for hn , we first define V as the tree with 2 taxa. Recalling that we index trees so that
the number of taxa in a tree is n more than the number of taxa in the seed tree, we have [3, 12, 13]
hn (V) = cn+1 .
A constructive procedure, illustrated in Figure 3, shows that for any seed tree t with |t| ≥ 2,
hn (t) ≥ hn (V) = cn+1 .

(7)

For a seed tree t, we can superimpose V on t so that the root rV of V matches the root rt of t (Fig. 3B). The two
leaves of V are identified with two of the leaves of t, one on each side of the root of t. Generating caterpillar-like
families by adding n single branches separately to V and to t, the superposition of V on t extends, so that V(n)
is superimposed on t(n) (Fig. 3C). The n caterpillar branches of t(n) and V(n) then correspond.
Each matching coalescent history h of t(n) determines a corresponding matching coalescent history h′ of V(n)
by considering the restriction of the history h to the set of internal nodes of t(n) that correspond to internal
nodes of V(n) (Fig. 3D). Thus, for any given seed tree t, the number of matching coalescent histories of t(n) is
greater than or equal to the number of matching coalescent histories of V(n) . In symbols, we have eq. (7).

3.2

Iterative generation of rooted histories

This section describes the iterative procedure that for a seed tree t eventually enables us to determine a formula
for hn . First, in Section 3.2.1, we discuss m-rooted histories, which extend the concept of matching coalescent
histories, introducing an additional parameter m. Next, in Section 3.2.2, we examine the relationship between
4

A

rt

t =
A

B

rV

rt = rV

V=
BC

D

E

F

V over t =

X

Y

A=X

C

BC

D

E

F=Y

D

rt = rV

rt = rV

rt = rV
(2)

V over t (2) =

A=X B C

D

E

F=Y

n=2

A=X B C

D

E

F=Y

n=2

A=X B C

D

E

F=Y

n= 2

Figure 3: Superposition of the caterpillar tree family on a caterpillar-like tree family with arbitrary seed tree of size |t| ≥ 2.

(A) A seed tree t and the seed tree V for the caterpillar family. (B) Superposition of V on t, so that the roots rV and rt
overlap. (C) Superposition of V(2) (shaded internal nodes) on t(2) (shaded and unshaded nodes). The n = 2 caterpillar
branches in V(2) and t(2) overlap, and rV still matches rt . (D) A matching coalescent history of t(2) (dashed and dotted
arrows) determines a matching coalescent history of V(2) (dashed arrows) by ignoring arrows from the unshaded nodes.

rooted histories and the extended coalescent histories of [12], importing results on extended coalescent histories
into the more convenient framework of rooted histories. We expand our goal of enumerating matching coalescent
histories for t(n) , considering a more general problem of enumerating for m ≥ 1 the m-rooted histories of t(n) .
In Section 3.2.3, we define an operator Ω for constructing the rooted histories of t(n+1) from the rooted
histories of t(n) . Next, in Section 3.2.4, we introduce a labeling scheme that in Section 3.2.5 enables us to switch
from counting rooted histories to counting multisets of labels. At the end of Section 3.2, we will have converted
our enumeration problem into an enumeration that is more convenient for constructing a generating function.
3.2.1

m-rooted histories

Consider a tree t with |t| ≥ 2, and suppose that the branch above the root of t (the root-branch) is divided into
infinitely many components. A matching coalescent history mapping the internal nodes of t onto the branches
of t is said to be m-rooted for m ≥ 1 if the root of t is mapped exactly onto the mth component of the root
(Fig. 4). It is said to be rooted if it is m-rooted for some m. Branches are numbered so that branch m = 1 is
immediately above the root node, and m is greater for components that are farther from the root.
For a rooted history h of a tree t, m = m(h) denotes the component of the root-branchSof t that receives the
image of the root of t. Hn,m (t) denotes the set of m-rooted histories of t(n) , and Hn (t) = ∞
m=1 Hn,m (t) denotes
(n)
the set of its rooted histories. The number of m-rooted histories of t
is hn,m = |Hn,m |, and the number of
1-rooted histories hn = hn,1 is also the number of matching coalescent histories. Enumeration of the matching
coalescent histories of t(n) is equivalent to enumeration of the 1-rooted histories of t(n) .
3.2.2

Rooted histories and extended histories

Rooted histories are closely related to extended coalescent histories, as defined by [12]. We use this relationship
to study properties of rooted histories. Rosenberg [12] defined the set of k-extended coalescent histories of a tree

5

A

B
m= 3
m= 1

A

B

C D

E

A

B

C D

E

A

B

C D

E

A

B

C D

E

Figure 4: Rooted histories of a tree. (A) A 3-rooted history. The root-branch is divided into infinitely many components.
The third component receives the image of the root. (B) A 1-rooted history. The number of 1-rooted histories corresponds
to the number of matching coalescent histories of the tree.
t with |t| ≥ 1 for integers k ≥ 1; we also consider k = 0 by setting the number of 0-extended histories to 0.
A k-extended history is defined as a coalescent history for a species tree whose root-branch is divided into
exactly k ≥ 0 parts. In other words, the root-branch has exactly k ≥ 0 possible components onto which a
k-extended history can map the gene tree root. Here we consider matching k-extended histories, so that the
internal nodes of a tree t are mapped to the branches of t and its k components above the root. For convenience,
we refer to extended histories by the index k, reserving the index m for rooted histories.
By the definitions of k-extended and m-rooted histories, for each k ≥ 0, the set of k-extended histories of a
tree is exactly the set of all m-rooted histories with 1 ≤ m ≤ k. Therefore, for a tree t with at least 2 leaves, if
we label by et,k its number of k-extended histories, then for each m ≥ 1 the number of m-rooted histories of t is
h0,m = et,m − et,m−1 .

(8)

Note that for m = 1, we explicitly use in eq. (8) the fact that et,0 is defined and equal to 0. In addition to setting
et,0 = 0 for any tree t, as in [12] we also set et,k = 1 for all k ≥ 1 in the case that t has exactly 1 leaf.
Suppose |t| ≥ 1 and k ≥ 0. Denote by tL and tR the left and right subtrees of the root of t. We can compute
et,k recursively as in Theorem 3.1 of [12]:

if |t| ≥ 1 and k = 0
 0
1
if
|t| = 1 and k ≥ 1
et,k =
(9)
 Pk
e
e
if
|t|
≥
2
and
k
≥
1.
t
,i+1
t
,i+1
R
i=1 L
As was already observed in the remarks following Corollary 3.2 of [12], by eq. (9), for any tree t with |t| ≥ 1,
for positive integers k ≥ 1, the function f (k) = et,k is a polynomial in k. With our extension to permit k = 0,
we can extend this fact to k ≥ 0 for |t| ≥ 2: for any tree t with |t| ≥ 2, and for k ≥ 0, we claim that the function
f (k) = et,k is a polynomial in k. Note that in allowing k = 0, we claim et,k is a polynomial in k only for |t| ≥ 2;
for |t| = 1, et,k is not a polynomial in k because et,0 = 0 and et,k = 1 for k ≥ 1.
To prove the claim, fix t with |t| ≥ 2 and consider the variable k over domain [1, ∞). We demonstrate that
f (k) is a polynomial in k for domain [0, ∞) by showing that the closed-form polynomial for f (k) has a factor of
k, so that our choice et,0 = 0 in eq. (9) is compatible with the polynomial expression valid for k ≥ 1.
Observe that for i ≥ 1, etL ,i and etR ,i are polynomials in i, say PtL (i) and PtR (i). Replacing the terms etL ,i+1
and etR ,i+1 that appear in the recursion in eq. (9) by the two polynomials PtL (i + 1) and PtR (i + 1), we obtain
k
X
i=1

etL ,i+1 etR ,i+1 =

k
X

PtL (i + 1) PtR (i + 1) =

k
X

P ′ (i),

(10)

i=1

i=1

where P ′ (i) denotes a polynomial in i that results from the product
Pk of Pp tL (i + 1) and PtR (i + 1). By Faulhaber’s
formula for sums of powers of integers, symbolic sums of the form i=1 i for a fixed integer p ≥ 0 are polynomials
6

P
containing a factor of k in their closed forms (Section 6.5 of [8])—for example, ki=1 i3 = k2 (k + 1)2 /4. Thus,
′
p
because
Pk the ′polynomial P (i) is a linear combination of terms of the form i , the closed-form expression for the
sum i=1 P (i) appearing in eq. (10) also has a factor of k. It therefore has a value of 0 at k = 0.
Functions et,k for trees t with 1 ≤ |t| ≤ 9 and k ≥ 1 appear in Tables 1-4 of [12]. For |t| ≥ 2, as we have
shown, these example polynomials are divisible by the variable representing the number of components of the
root-branch. By eq. (8), we immediately obtain the following result.
Proposition 1 For any tree t with |t| ≥ 2 and for m ≥ 1, the number h0,m of m-rooted histories of t is a
polynomial in m that can be computed by the difference in eq. (8) using et,k as in eq. (9).
As an example of Proposition 1, consider the tree t = ((A, B), (C, D)), identifying this arbitrary labeling with
the unlabeled tree (()()). By applying the recursive procedure in eq. (9), we find that for k ≥ 0, the number of
k-extended coalescent histories for t is et,k = 16 k(2k2 + 9k + 13) [12]. The difference eq. (8) yields that for m ≥ 1
the number of m-rooted histories of t is h0,m = et,m − et,m−1 = m2 + 2m + 1.
3.2.3

Generating rooted histories of t(n+1) from rooted histories of t(n)

This section introduces an operator Ω that generates the rooted histories of t(n+1) from those of t(n) . For each
rooted history h′ of t(n+1) , there exists exactly one rooted history h of t(n) with h′ ∈ Ω(h). Recalling the
definitions of the sets Hn,m(t) and Hn (t) of m-rooted and rooted histories of t(n) , we define Ω as follows.
Definition. Let P(X) = {x : x ⊆ X} denote the power set of set X, and fix tree t. The operator Ω is a function
Ω : Hn (t) → P(Hn+1 (t)),
where for a given rooted history h ∈ Hn (t), Ω(h) is the set of rooted histories h′ ∈ Hn+1 (t) for which the
restriction of h′ to t(n+1) excluding its most basal caterpillar branch coincides with the rooted history h of t(n) .
Denote by b1 , b2 , . . . , bn+1 the caterpillar branches in t(n+1) , from the least basal b1 to the most basal bn+1
(Fig. 5). Upon removal of the most basal caterpillar branch bn+1 from t(n+1) , the root of t(n+1) —to which branch
bn+1 is attached—is replaced by a demarcation between the first and second components of the root-branch of
t(n) . For instance, in Fig. 5A, starting from tree t = ((A, B), (C, D)), we consider h′′′ , a 3-rooted history of t(3) .
By removing the most basal caterpillar branch b3 of t(3) , we reduce to the 1-rooted history h′′ of t(2) (Fig. 5B).
Next, by removing the caterpillar branch b2 of t(2) , we reduce to the 2-rooted history h′ of t(1) (Fig. 5C). By
removing the remaining caterpillar branch b1 from t(1) , we reduce to the 2-rooted history h of t = t(0) (Fig. 5D).
Therefore, by the definition of Ω, we have h′ ∈ Ω(h), h′′ ∈ Ω(h′ ), and h′′′ ∈ Ω(h′′ ).
By definition, Ω has the property that for each rooted history h′ ∈ Hn+1 (t), with n ≥ 0, there exists exactly
one rooted history h ∈ Hn (t) such that h′ ∈ Ω(h). In other words, for each n ≥ 0, the set of rooted histories
Hn+1 (t) can be partitioned as a disjoint union,
G
Hn+1 (t) =
Ω(h).
(11)
h∈Hn (t)

The set Hn+1 (t) is therefore generated without double occurrences of any rooted history by applying Ω to the
rooted histories in Hn (t). It follows immediately that in performing n iterations of Ω to obtain Ω[. . . [Ω[Ω(H0 )]] . . .]
from the set H0 of rooted histories of t(0) , all the rooted histories of t(n) are generated exactly once.
3.2.4

Labels for rooted histories

The operator Ω, starting from the rooted histories of t(n) , generates the rooted histories of t(n+1) . In this section,
we introduce a labeling scheme, giving each m-rooted history h of t(n) a label L(h) = (n, m). We then describe
7

A

B

m=3

m=1
remove b3

h

h
A B C D b1 b2 b3 A B C D b1 b2 b3

A B C D b1 b2

C

A B C D b1 b2

D
remove b2
m=2

m=2
remove b1

h
A B C D b1

A B C D b1

h
A B C D

A B C D

Figure 5: The relationships among rooted histories for sequential members of caterpillar-like families. For a rooted history
h′′′ of t(3) , with t = ((A, B), (C, D)), the figure sequentially removes caterpillar branches. By definition, a rooted history
h′ of t(n+1) belongs to the set Ω(h) if, by removing the most basal caterpillar branch bn+1 in t(n+1) , we recover the rooted
history h of t(n) . Note that when we remove the basal caterpillar branch bn+1 from t(n+1) , the root of t(n+1) —to which the
branch bn+1 is attached—becomes the boundary between the first and second components of the root-branch of t(n) , and
is depicted as a horizontal segment. (A) h′′′ ∈ Ω(h′′ ). (B) h′′ ∈ Ω(h′ ). (C) h′ ∈ Ω(h). (D) h. For each rooted history, the
value of the parameter m, representing the component of the root-branch that receives the image of the root, is shown.

how Ω acts on the labels of the rooted histories, characterizing the set of labels L[Ω(h)] = {L(h′ ) : h′ ∈ Ω(h)}. Our
goal is to represent each set Hn of rooted histories of t(n) by the multiset of its labels, reducing the enumeration
of |Hn,m | to the problem of counting certain ordered pairs (n, m) iteratively generated by simple rules that reflect
how the rooted histories in Hn+1 are generated according to rule Ω from the rooted histories in Hn by eq. (11).
In our labeling scheme, each rooted history h ∈ Hn (t) that maps the root of t(n) onto the mth component
of the root-branch of t(n) receives label L(h) = (n, m). The enumeration of hn = |Hn,1 | then reduces to the
enumeration of those rooted histories labeled by (n, 1).
Note that a label (n, m) does not uniquely specify an m-rooted history of t(n) : a tree t(n) has in general many
m-rooted histories, each receiving the label (n, m). In other words, if h, h ∈ Hn (t) and L(h) = L(h), then h and
h are not necessarily the same rooted history of t(n) . We will, however, consider for n ≥ 0 multisets of labels in
which we find a copy of the label (n, m) for each m-rooted history of t(n) .
To characterize how the operator Ω acts on the labels for rooted histories, consider an m-rooted history
h ∈ Hn (t), so that h maps the root of t(n) onto the mth component of the root-branch of t(n) . This history is
labeled L(h) = (n, m). For instance, taking the seed tree t = ((A, B), (C, D)), the history h of t = t(0) depicted
in Figure 6A is labeled L(h) = (0, 3), whereas the history h of t(1) in Figure 6C is labeled L(h) = (1, 1).
By applying Ω to a history h of t(n) with L(h) = (n, m), we produce a set of rooted histories Ω(h) ⊆ Hn+1 (t).
The set of labels for Ω(h),
L[Ω(h)] = {L(h′ ) : h′ ∈ Ω(h)},

is determined according to the rule:

L[Ω(h)] =



{(n + 1, m′ ) : m′ ≥ m}
if m = 1
′
′
{(n + 1, m ) : m ≥ m − 1} if m ≥ 2,
8

(12)

rooted histories of t

(n)

rooted histories of t

(n +1)

B

A

m = 2

(1,2)
A

Ω

B

C

D

A

B

C

D

m = 3
m =3

Ω

A

B

C

D

A

B

C

(1,3)

D

A

B

C

D

(0,3)

A

B

C

D

m = 4
Ω

(1,4)
A

C

B

C

D

A

B

C

D

D
m = 1

m =1
(2,1)
Ω
A

B

C

D

A

B

C

D

m = 2
A

B

C

D

A

B

C

D

(1,1)
Ω
(2,2)
A

B

C

D

A

B

C

D

Figure 6: Generation of rooted histories of t(n+1) from rooted histories of t(n) , as given by rule Ω applied to seed tree
t = ((A, B), (C, D)). To obtain rooted histories of t(n+1) (right) from rooted histories of t(n) (left), we choose the component
m′ of the root-branch of t(n+1) onto which the root of t(n+1) is mapped (solid arrows). The smallest among infinitely many
possible choices are depicted. For all nodes of t(n+1) except the root, the rooted history generated for t(n+1) coincides with
the generating rooted history of t(n) (dashed arrows). (A) A case with m ≥ 2. A 2-rooted history h of t(0) , labeled (0, 3),
is shown. (B) Ω(h) for h in (A). 2-, 3-, and 4-rooted histories of t(1) belonging to Ω(h) are shown and are labeled (1, 2),
(1, 3), and (1, 4), respectively. Because m ≥ 2, m′ ≥ m − 1 as in eq. (12). (C) A case with m = 1. A 1-rooted history h of
t(1) , labeled (1, 1), is shown. (D) Ω(h) for h in (C). 1- and 2-rooted histories of t(2) belonging to Ω(h) are shown and are
labeled (2, 1) and (2, 2), respectively. Because m = 1, m′ ≥ m.

9

Ω
Ω

L0
Ω[ L0 ]

(0,1) . . . (0,1)

(0,2)

...
Ω((0,1))
...

. . . (0,2)

(0,3)

...
Ω((0,1))
...

Ω((0,2))
...

. . . (0,3)
...

Ω((0,2))
...

Ω((0,3))
...

Ω((0,3))
...

Ω[Ω[ L0 ] ]

Figure 7: Iterative application of a rule for generating the multiset of the labels of the rooted histories of a tree t(n) . The
iterative procedure starts with the multiset L0 that contains those labels of the form {(0, m) : m ≥ 1} associated with the
rooted histories of a seed tree t = t(0) . In the first step of the iteration, we apply Ω (eq. (13)) to each label of L0 . In the
second step, we apply Ω to each label resulting from the first step, and so on. The number of m-rooted histories of t(n)
corresponds to the number of labels (n, m), considered with their multiplicity, generated after the nth step of the iteration.

where m′ denotes the value of the parameter m—the component of the root-branch of t(n+1) to which the root
is mapped—for the rooted histories h′ ∈ Ω(h) of t(n+1) .
The rule in eq. (12) distinguishes between two cases depending on whether the value of the parameter
m = m(h) of the generating rooted history h is equal to or exceeds 1. In both cases, the set L[Ω(h)] contains
infinitely many labels, each with its first component equal to n + 1, as the labels refer to rooted histories of
t(n+1) . The value of the second component m′ ranges in [m − 1, ∞) if m ≥ 2, and in [1, ∞) if m = 1.
Recall that according to the definition of Ω, from an m-rooted history h of t(n) (Fig. 6A and 6C), we generate
an m′ -rooted history h′ ∈ Ω(h) of t(n+1) (Fig. 6B and 6D) by (i) choosing the component m′ of the root-branch
of t(n+1) onto which h′ maps the root of t(n+1) , and (ii) letting h′ coincide with h on all nodes of t(n+1) except
the root. The rooted history h′ coincides with h once we remove the most basal caterpillar branch of t(n+1) .
Figure 6 illustrates both cases of eq. (12). In step (i), infinitely many choices of m′ are possible, because
the root-branch of t(n+1) is divided into infinitely many parts. The most basal caterpillar branch in t(n+1) is
attached at the border between the first and second components of the root-branch of t(n) . Thus, the addition of
the (n + 1)st caterpillar branch eliminates a component of the root-branch, so that if the starting rooted history
h has m ≥ 2 (Fig. 6A), then the root of t(n) maps to component m − 1 of the root-branch of t(n+1) . The root of
t(n+1) can map to this same branch, or to any branch m′ with m′ ≥ m − 1. For instance, in Figure 6B, one of
the rooted histories h′ generated by a rooted history h with m = 3 has m′ = m − 1 = 2.
If h has m = 1, however, then production of h′ is slightly different (Fig. 6C). By definition, the parameter
m for a rooted history cannot be smaller than 1. The value m′ = m − 1 is not permitted in this case, and m′
remains greater than or equal to m = 1 (Fig. 6D).
3.2.5

From counting rooted histories to counting their labels

The labeling scheme in Section 3.2.4 encodes the application of the operator Ω to the rooted histories of t(n) .
Now that we have described the set of labels L[Ω(h)] arising from the label L(h) according to the rule in eq. (12),
the problem of counting a set of rooted histories becomes a problem of counting the set of the associated labels
along with their multiplicities—or the multiset
of the labels.

For n ≥ 0 and m ≥ 1, we use Ω (n, m) to denote, with an abuse of notation, the set of labels L[Ω(h)] when
L(h) = (n, m). Recalling that iterative application of Ω to the rooted histories H0 of tree t0) generates the rooted
histories Hn of t(n) , the enumeration of |Hn,m | for tree t = t(0) becomes a problem of counting those labels of the
form (n, m) that are generated when we iteratively apply the operator Ω as Ω[. . . [Ω[Ω(L0 )]] . . .] starting from
the multiset of labels L0 = {L(h) : h ∈ H0 (t)} (Fig. 7).
Eq. (12) characterizes the set of labels L[Ω(h)] of the rooted histories in Ω(h) in terms of the label L(h)
of rooted history h. If L(h) = (n, m), then Ω (n, m) denotes the set of labels L[Ω(h)]. Thus, converting the
10

notation from histories to labels, eq. (12) becomes


{(n + 1, m′ ) : m′ ≥ m}
if m = 1
Ω (n, m) =
′
′
{(n + 1, m ) : m ≥ m − 1} if m ≥ 2.

(13)

For the seed tree t, we count hn,m = |Hn,m | by evaluating the number of occurrences of the ordered pair (n, m)
in the multiset Ln defined as
Ln = L[Hn (t)] = {L(h) : h ∈ Hn (t)}.
(14)
In symbols, we have

hn,m = |{ℓ ∈ Ln : ℓ = (n, m)}|.

(15)

L0 = {L(h) : h ∈ H0 (t)}.

(16)

By eq. (11), each multiset Ln is generated iteratively (Fig. 7). We start with the multiset of labels

For each n ≥ 0, the multiset Ln+1 is obtained as the union
]

Ω (n, m) ,
Ln+1 =

(17)

(n,m)∈Ln

U
U
where the symbol denotes the union operator for multisets. Thus, in M = M1 M2 , if an element x appears n1
times in M1 and n2 times in M2 , then it appears n1 + n2 times in M . Eq. (17) provides an iterative generation of
the labels for the rooted histories of Hn+1 (t) from the labels of the rooted histories of Hn (t), retaining information
about the multiplicity of occurrences of each label.

3.3

Counting rooted histories with generating functions

We have now obtained eq. (15), which gives an equivalence between the number of m-rooted histories of t(n) and
the number of labels (n, m) in the multiset Ln , and eqs. (16) and (17), which give through Ω (eq. (13)) an iterative
procedure that generates the family of multisets (Ln )n≥0 . In this section, we translate the iterative procedure
into algebraic terms, determining the generating function associated with the integer sequence (hn )n≥0 .
First, in Section 3.3.1, we characterize a generating function g(y) for the sequence (h0,m )m≥1 . Next, in Section
3.3.2, we deduce an equation satisfied by the bivariate generating function F (y, z) for (hn,m )n≥0,m≥1 . In Section
3.3.3, we solve the equation, obtaining the desired generating function f (z) for the sequence (hn,1 )n≥0 . This
generating function can be written in turn as a function of g(y).
3.3.1

Generating function for the sequence (h0,m )m≥1

In this section, we characterize the generating function g(y) that counts for a given seed tree t the labels in the
multiset L0 describing the labels of the rooted histories of t.
Fix the seed tree t. Recalling the equivalence in eq. (15), define the generating function
g(y) =

X

y

m

=

∞
X

h0,m y m ,

(18)

m=1

(0,m)∈L0

the mth coefficient of whose power series expansion provides the number h0,m of labels (0, m) appearing in L0 .
By Proposition 1, h0,m can be expressed as a polynomial in the variable m and can thus be decomposed as a
finite linear combination of terms of the form mk , where k is a non-negative integer. That is, for a certain finite
set of non-negative integers with largest element K,
h0,m =

K
X
k=0

11

wk mk ,

(19)

where the wk are constants.
We introduce generating functions gmk , one for each k from 0 to K, in which the mth coefficient is mk :
∞
X

gmk (y) =

mk y m .

(20)

m=1

Because K is finite, the desired generating function g(y) can be written as a finite linear combination of this
new collection of generating functions gm0 (y), gm1 (y), . . . , gmK (y). More precisely, by substituting in eq. (18) the
polynomial in eq. (19) and switching the order of summation, we obtain
g(y) =

K
X

wk gmk (y).

(21)

k=0

We now state a lemma that characterizes the generating functions gmk (y).
Lemma 1 For each non-negative integer k from 0 to K, the generating function gmk (y) in eq. (20) is rational
with denominator (1 − y)k+1 . That is, gmk (y) has the form
gmk (y) =

P(y)
,
(1 − y)k+1

where P (y) is a polynomial in y.
Proof. We proceed by induction on k. If k = 0, then by eq. (20), gm0 (y) = 1/(1 − y) − 1 = y/(1 − y). Assume
the inductive hypothesis for gmk (y). Applying eq. (20) to gmk+1 (y), we can recover gmk+1 (y) as
gmk+1 (y) = y

∂gmk (y)
,
∂y

(22)

which by the quotient rule for derivatives is a rational function with denominator (1 − y)k+2 . 

The proof of the lemma gives a recursive procedure in eq. (22) to compute the functions gmk (y). By eq. (21),
we immediately obtain from the lemma a result about the generating function g(y).

Proposition 2 The generating function g(y) whose mth coefficient [y m ]g(y) is the number of m-rooted histories
h0,m of a seed tree t can be written as a finite linear combination
g(y) =

J
X

qj

j=1

y aj
,
(1 − y)b

(23)

where b ≥ 1 and J ≥ 1 are positive integers, each aj is a non-negative integer, and the qj are constants.
As an example, we show how the procedure in Proposition 2 can be applied to determine the generating
function g(y) for t = ((A, B), (C, D)), the same example seed tree for which we computed the polynomial h0,m
via Proposition 1. Recall from Section 3.2.2 that h0,m = m2 + 2m + 1. To obtain the generating function g(y)
that has coefficients [y m ]g(y) = m2 + 2m + 1, we sum generating functions for the monomials m2 , 2m, and 1.
We already know gm0 (y), and by applying eq. (22), we have
y
gm0 (y) =
1−y
y
∂g 0 (y)
=
gm1 (y) = y m
∂y
(1 − y)2
∂g 1 (y)
y(y + 1)
gm2 (y) = y m
=
.
∂y
(1 − y)3
12

Thus,
g(y) = gm0 (y) + 2gm1 (y) + gm2 (y) =

y 3 − 3y 2 + 4y
.
(1 − y)3

(24)

In eq. (24), g(y) is written as in eq. (23), taking b = 3, J = 3, (a1 , a2 , a3 ) = (1, 2, 3), and (q1 , q2 , q3 ) = (4, −3, 1).
3.3.2

Bivariate generating function for the integers (hn,m )n≥0,m≥1

Given t, the polynomial nature of h0,m in m enabled us to obtain a generating function for h0,m . We now use
the iterative procedure in eq. (17) to determine an equation that characterizes the bivariate generating function
with coefficients hn,m . We represent each label of the form (n, m) by a symbolic algebraic expression in the
variables y and z, so that (n, m) is replaced by z n y m . Let L = ∪∞
n=0 Ln be the multiset of all m-rooted histories
(n)
for all trees t . Considering y and z as complex variables in two sufficiently small neighborhoods of 0, we aim
to characterize the bivariate function F (y, z) that admits the expansion
X
F (y, z) =
zn ym,
(n,m)∈L

where the sum is over all labels in the multiset L and thus has a term for each m-rooted history of each t(n) . In
particular, the function F (y, z) is the bivariate generating function of the integers hn,m , and its Taylor expansion
can be written as
∞ X
∞
X
hn,m z n y m ,
(25)
F (y, z) =
m=1 n=0

where the coefficients hn,m appear explicitly.
By differentiating F (y, z) with respect to y and then taking y = 0, we obtain
∞

X
∂F
hn,1 z n .
(0, z) =
∂y

(26)

n=0

Thus, for each n ≥ 0, we have
hn = hn,1



∂F
= [z ]
(0, z) .
∂y
n

By representing each label of the form (n, m) by the symbolic expression z n y m and assuming the complex variables y and z are sufficiently close to 0, the recursive generation in eq. (17) of the multisets of labels L0 , L1 , L2 , . . .
determines an equation for F (y, z), demonstrated in Appendix 1:


∂F
z
(0, z).
(27)
= g(y) − z
F (y, z) 1 −
y(1 − y)
∂y
Eq. (27) holds if the complex variables y and z are in two sufficiently small neighborhoods of 0, and it characterizes
the generating function F (y, z).
3.3.3

Generating function for the sequence (hn,1 )n≥0

We now have an equation satisfied by the bivariate generating function F (y, z). Further, we have eq. (26),
which demonstrates that the desired generating function for the sequence (hn )n≥0 is obtained from ∂F
∂y (0, z). By
∂F
applying the kernel method [1, 11], we can determine the power series ∂y (0, z) from eq. (27).
The idea of the method consists of coupling the two variables (z, y) as (z, y(z)) in such a way that two
conditions hold. First, (i) substituting y = y(z) cancels the kernel of the equation, that is, the factor 1−z/[y(1−y)]
13

on the left-hand side of eq. (27). Second, (ii) for z near 0, the value of y(z) remains in a sufficiently small
neighborhood of y = 0, so that eq. (27) still holds near z = 0 after substituting y = y(z). This condition is
required, as the power series expansion in eq. (25) for F (y, z) has been assumed to be valid in a neighborhood
of (y, z) = (0, 0), and the derivation of eq. (27) relies on the fact that y and z are sufficiently close to 0. If the
two conditions hold, then
∂F
(0, z) = g(y(z)),
z
∂y
so that g(y(z)) must be a power series for z = 0, because so must be z ∂F
∂y (0, z).
The
required
substitution
couples
y
and
z
in
such
a
way
that
1
−
z/[y(1 − y)] = 0, so that y(z) = (1 ±
√
1 − 4z)/2. To determine whether to take the negative root y1 (z) or the positive root y2 (z), we note that if z
is near 0, then y1 (z) approaches 0, so that y1 (z) lies in a neighborhood of y = 0 and g(y1 (z)) admits a power
series expansion for z near 0. For y2 (z), however, if z is near 0, then y2 (z) approaches 1, and thus, g(y2 (z)) is
not a power series for z near 0 due to the pole of the function g(y) at y = 1 (Proposition 2). The only solution
satisfying both (i) and (ii) is consequently
√
1 − 1 − 4z
,
(28)
Y (z) = y1 (z) =
2
which, with the generating function C(z) of the Catalan numbers as in eq. (3), satisfies Y (z) = zC(z). Substituting y = Y (z) in eq. (27), we have ∂F
∂y (0, z) = g(Y (z))/z, yielding the following result.
Proposition 3 Fix tree t. Let g(y) be the generating function associated
with the polynomial h0,m (eq. (18)).
P
n is given by
Let Y (z) be as in eq. (28). Then the generating function f (z) = ∞
h
z
n=0 n
g
∂F
g(Y (z))
f (z) =
(0, z) =
=
∂y
z

√

1− 1−4z
2

z

.

(29)

The proposition thus determines the generating function f (z) = g(Y (z))/z for the integer sequence describing
the number of matching coalescent histories of the species trees in the caterpillar-like family (t(n) )n≥0 . The
function g depends on the seed tree t, whereas the function Y (z) is fixed in eq. (28) and does not depend on t.
As an example, recall that for t = ((A, B), (C, D)), in eq. (24), we have computed the generating function g
for the number h0,m of m-rooted histories of t = t(0) . By Proposition 3, the generating function for the number
hn of matching coalescent histories of t(n) is
f (z) =

∞
X

n=0

n

hn z =

g

√

1− 1−4z
2

z

=

4(1 −

√

√
1 − 4z)(3 − z + 1 − 4z)
√
.
z(1 + 1 − 4z)3

Taking the Taylor expansion of f , we obtain
f (z) = 4 + 13z + 42z 2 + 138z 3 + 462z 4 + 1573z 5 + 5434z 6 + 19006z 7 + 67184z 8 + . . .

(30)

The coefficients hn accord with the enumeration of matching coalescent histories reported in Corollary 3.9 of
[12] and Table 3 of [13] for caterpillar-like families with seed tree t = ((A, B), (C, D)), except that those results
tabulated numbers of coalescent histories by the number of taxa, whereas here, we use the index of the caterpillarlike family. Thus, in this example, the coefficient of z n gives the number of matching coalescent histories for
a tree with n + 4 taxa, as |t| = 4. Shifting the index in the formula from [12, 13] to agree with our indexing
scheme, we obtain [(5(n + 4) − 12)/(4(n + 4) − 6)]c(n+4)−1 = [(5n + 8)/(4n + 10)]cn+3 for the number of matching
coalescent histories of t(n) . This formula gives precisely the coefficients in the Taylor expansion in eq. (30).

14

3.4

Asymptotic behavior of hn

From Proposition 3, we have the generating function f that counts the number of matching histories of t(n) for
a given fixed seed tree t. Applying techniques of analytic combinatorics as introduced in Section 2.3, we can
determine the asymptotic behavior of the coefficients of the generating function
f˜(z) =

∞
X

hn−1 z n = zf (z) = g(Y (z)),

(31)

n=1

with Y (z) as in eq. (28). To simplify notation, we work with f˜ instead of f .
First, in Section 3.4.1, we obtain an asymptotic equivalence between hn and βt cn , where βt is a constant
depending on the seed tree t, and the cn are the Catalan numbers (eq. (1)). Next, in Section 3.4.2, we produce
a general procedure to determine the constants βt , employing this procedure to obtain the values of βt for all
seed trees t with |t| ≤ 9. We demonstrate that our values of βt accord with constant multiples of the Catalan
numbers previously obtained according to a different method [13] for seed trees with |t| ≤ 8.
3.4.1

A general asymptotic result

Recall that given t, Proposition 2 gives a procedure to determine the rational function g in eq. (31). Writing g as
the finite linear combination in eq. (23), the values of b, J, and the (aj )1≤j≤J and (qj )1≤j≤J can all be computed.
As noted in Section 2.3, the expansion of f˜ at its dominant singularity characterizes the asymptotic behavior
of the coefficients hn−1 . In Appendix 2, we obtain the expansion of f˜ at the dominant singularity z = 41 ,


√


1 − 4z
−
± O(1 − 4z)
2

 √
1 − 4z
,
∼ αt + βt −
2

f˜(z) = αt + βt

(32)
(33)

with
αt =

J
X

2b−aj qj

(34)

J
X

2b+1−aj (aj + b)qj .

(35)

j=1

βt =

j=1

Note that in eq. (32), the seed tree affects only the constants αt and βt computed in eqs. (34) and (35)
from g, as written in the linear combination in eq. (23). Excluding the constant αt that does not influence the
˜
asymptotic behavior of the coefficients, the
√ main term of the expansion of f (z) (eq. (33)) is the product of the
constant βt and the generating function − 1 − 4z/2, whose nth coefficient is the Catalan number cn−1 (eq. (4)).
Theorem VI.4 of [7] indicates that under conditions satisfied by f˜, the asymptotic coefficients of a generating
function as n → ∞ are obtained from the expansion of the function at the dominant singularity; moreover, the
error term in the asymptotic coefficients can be computed from the error term in the singular expansion. Applying
the theorem to the expansion in eq. (32), we obtain the asymptotic behavior of the coefficients [z n ]f˜(z) = hn−1 .
Proposition 4 For any seed tree t, when n → ∞, the number hn of matching coalescent histories for t(n) satisfies
 n
 √

 n
1 − 4z
4
4
n ˜
n
(36)
hn−1 = [z ]f (z) ∼ βt [z ] −
± O 2 = βt cn−1 ± O 2 ,
2
n
n
where βt is a constant that depends on t. The constant βt is computed in eq. (35) once the function g, which is
defined in eq. (18), has been written as the linear combination in eq. (23).
15

We immediately obtain the following corollary, corresponding to our initial claim in eq. (6).
Corollary 1 For any seed tree t, there exists a constant βt > 0 (eq. (35)) such that when n → ∞,
hn ∼ βt cn .

(37)

Proof. The result follows from Proposition 4 by noting that if βt > 0, then
O(4n /n2 )
hn−1
= 1 ± lim
= 1.
n→∞ βt cn−1
n→∞ βt cn−1
lim

Note that we are claiming βt > 0. From the definition of βt as the sum in eq. (35), because the qj are
permitted to be negative, it is not immediately clear that βt > 0. Proposition 4 eliminates the possibility that
βt is negative, as hn−1 is necessarily positive. To show that βt 6= 0, we note that by eq. (36), βt = 0 would give
 n
4
hn−1 = O 2 ,
(38)
n
so that hn−1 /(4n /n2 ) would remain bounded by a constant as n → ∞.
We now apply the lower bound hn ≥ cn+1 from eq. (7). By eq. (7), we have
√
cn
cn
n
hn−1
≥ n 2 =√ n
√ .
n
2
4 /n
4 /n
π 4 /(n3/2 π)
√ √
√
As n → ∞, n/ π diverges to ∞, while cn /[4n /(n3/2 π)] converges to 1 by eq. (5). Therefore, the sequence
hn−1 /(4n /n2 ) must diverge and eq. (38) cannot hold. Thus, βt 6= 0. 
As an example of Corollary 1, consider t = ((A, B), (C, D)). By decomposing the function g expressed in
eq. (24) as in eq. (23), we have already obtained the parameters b, J, (aj )1≤j≤J , and (qj )1≤j≤J in Section 3.3.1.
Therefore, computing βt as in eq. (35), we obtain
βt = 21+3−1 (1 + 3)(4) + 21+3−2 (2 + 3)(−3) + 21+3−3 (3 + 3)(1) = 80.
Eq. (37) then produces hn ∼ 80cn . Note that the limit hn ∼ 54 cn+3 produced for this tree from hn = [(5n +
8)/(4n + 10)]cn+3 in Section 3.3.3 agrees with the limiting result hn ∼ 80cn . Recalling eq. (2),

2n+6
5
hn
5n + 8 cn+3
5 n+3 /(n + 3)

∼ 43 = 80.
=
∼
2n
cn
4n + 10 cn
4 n /(n + 1)
4
3.4.2

Determining βt from the seed tree t

We have shown in Corollary 1 that the number of matching coalescent histories hn for the caterpillar-like family
t(n) is, for a constant βt , asymptotic to βt cn . We can now assemble our results to describe a procedure that given
a seed tree t with |t| ≥ 2 determines both the generating function with coefficients hn and the constant βt .
(i) Determine by eq. (9) the polynomial et,k in k ≥ 0 that counts the number of k-extended histories of t.
(ii) Compute from eq. (8) the polynomial in m that counts for m ≥ 1 the number of m-rooted histories of t.
P
m
(iii) Obtain the generating function g(y) = ∞
m=1 h0,m y with coefficients h0,m by using Proposition 2.
P
n
(iv) Determine the generating function f (z) = ∞
n=0 hn z with coefficients hn by applying Proposition 3.
16

(v) Write g(y) as a linear combination according to eq. (23), determining the values of b, J, and the aj and qj .
(vi) Compute the asymptotic constant βt from eq. (35).
We have programmed this procedure in Mathematica; starting from a given seed tree t, our program
CatFamily.nb can automatically compute for the caterpillar-like family t(n) the generating function with coefficients hn and the asymptotic constant βt . Using this program, we have determined the value of βt for each
seed tree with 9 taxa, collecting the results in Table 1.
Recall that Rosenberg [13] reported the asymptotic constant multiples of the Catalan numbers, βt∗ , which
represent the asymptotic numbers of coalescent histories for seed trees with up to 8 taxa, indexing the results by
the number of taxa m rather than by the index n of the caterpillar-like family. Also recall that for seed tree t,
tree t(n) has m = |t| + n taxa (Fig. 1). In the notation of [13], writing Atm ,1 as the number of matching coalescent
histories in the caterpillar-like tree with seed tree t and m ≥ |t| taxa, we have hn = Atm ,1 .
By eq. (5), we have the asymptotic equivalence cn ∼ cn+k /4k for each positive integer k. Therefore,
Atm ,1 = hn ∼ βt cn ∼

βt
cn+|t|−1
|t|−1
4

= βt∗ cm−1 ,

(39)

where the asymptotic constant βt of Corollary 1 is normalized to obtain
βt∗ =

βt
.
|t|−1
4

(40)

This computation converts the asymptotic constant multiple βt of cn into a corresponding multiple βt∗ of cm−1 ,
as reported in [13] for small trees. Comparing Table 1 with Table 3 of [13], we see that for the cases examined
by [13], the values of βt∗ we compute from the associated βt agree with the values that were previously reported.

4

Conclusions

In this paper, we have solved a problem left open by [13] on determining the number of coalescent histories for
gene trees and species trees that have a matching labeled topology and that belong to a generic caterpillar-like
family. We have proven that for any seed tree t, the integer sequence (hn )n≥0 , whose nth element represents
the number of matching coalescent histories of the caterpillar-like tree t(n) , grows asymptotically as a constant
multiple of the Catalan numbers, that is, hn ∼ βt cn , where the constant term βt > 0 depends on the shape of the
seed tree t. Rosenberg [13] had previously obtained this result for seed trees with at most 8 taxa; here, by using
a succession rule for recursive enumeration and then applying techniques of analytic combinatorics, we have not
only proven the existence of the constant βt for seed trees of any size, we have also produced a procedure that
computes the constant βt , as well as the expression for the generating function of the integers (hn )n≥0 .
The numerical results on the constants βt extend the empirical observation of [13] that the caterpillar-like
families that produce the largest numbers of matching coalescent histories are those whose seed tree has a
high level of balance. By extending from seed trees with |t| ≤ 8 taxa to those with |t| = 9, we observe that
the constants βt for the caterpillar-like families with the largest and smallest numbers of matching coalescent
histories become further separated, so that for n large, many more coalescent histories exist by which a gene tree
can match the species tree for some species trees than for others. For the 9-taxon seed tree with the largest βt∗ ,
βt∗ ≈ 8.12 compared to βt = 1 for the seed tree with the smallest βt∗ . Our procedure for evaluating βt and βt∗ as
a function of the seed tree can now enable further systematic analyses of the correlates of the constants βt and
βt∗ , to facilitate additional explorations of determinants of the numbers of matching coalescent histories.
Nevertheless, although the constants βt and βt∗ do depend on the seed tree, we have shown that all caterpillarlike families are asymptotically equivalent in their numbers of matching coalescent histories up to a constant
factor. Thus, in considering large trees, the many caterpillar branches contribute to the asymptotic growth
17

Table 1: Asymptotic constants βt with hn ∼ βt cn , for seed trees t with 9 taxa.
Seed tree t

βt

βt∗

65,536

Seed tree t

βt

βt∗

1

128,864

4,027/2,048

81,920

5/4

166,624

5,207/2,048

94,208

23/16

197,296

12,331/4,096

104,448

51/32

224,704

3,511/1,024

138,240

135/64

308,576

9,643/2,048

118,784

29/16

262,000

16,375/4,096

113,408

443/256

250,272

7,821/2,048

148,480

145/64

339,504

21,219/4,096

177,664

347/128

417,632

13,051/2,048

141,312

69/32

326,240

10,195/2,048

193,536

189/64

464,128

1,813/256

121,472

949/512

182,912

1,429/512

157,888

2,467/1,024

243,904

3,811/1,024

187,776

1,467/512

296,064

2,313/512

214,720

3,355/1,024

344,512

5,383/1,024

296,192

1,157/256

487,808

3,811/512

251,136

981/256

410,112

801/128

162,560

635/256

214,016

209/64

219,136

107/32

306,112

4,783/1,024

268,288

131/32

294,784

2,303/512

177,664

347/128

425,216

1,661/256

249,344

487/128

366,720

2,865/512

353,536

1,381/256

532,224

2,079/256

Values of βt appear for each of the 46 unlabeled species trees with 9 taxa. For each species tree t, we also provide the
constant βt∗ = βt /48 (eq. (40)). Trees are listed in increasing order by rank as defined in Section 2 of [13]. In the left
column, each seed tree t belongs to a caterpillar-like family (t̃(n) )n , with |t̃| < 9. In these cases, we recover the values of βt∗
as determined in Table 3 of [13].

18

behavior of the number of matching coalescent histories—which follows a multiple of the Catalan numbers—and
the seed tree contributes only to the constant by which the Catalan numbers are multiplied. From the viewpoint
of computational complexity in evaluating gene tree probabilities according to formulas that sum over matching
coalescent histories [4], all caterpillar-like families have the same growth pattern up to a constant.
The extent to which other tree families follow the Catalan sequence in their numbers of matching coalescent
histories remains unknown, though we have recently found a family, the lodgepole family, for which the number
of matching coalescent histories grows faster than with a constant multiple of the Catalan numbers [5]. The
use of our substantially different approach employing analytic combinatorics opens new methods for theoretical
analysis of coalescent histories and can potentially assist in understanding when Catalan-like growth, the rapid
growth of the lodgepole family, and intermediate or perhaps still faster growth patterns will apply.

Appendix 1. The equation satisfied by F (y, z)
In this appendix, we complete the derivation of eq. (27) satisfied by F (y, z). In the generating function F (y, z)
(eq. (25)), each monomial z n y m corresponds to a label (n, m) ∈ Ln that in turn represents an m-rooted history
of t(n) . Recall that the multisets of labels L0 , L1 , L2 , . . . (eq. (14)) can be iteratively generated according to
eq. (17) through the operator Ω defined in eq. (13), starting from
L0 . Also recall that by considering
P the multiset
n y m . We use the iterative generation of
L
,
we
can
write
F
(y,
z)
=
z
the multiset of labels L = ∪∞
n
n=0
(n,m)∈L
the family of multisets (Ln )n≥0 to obtain an equation for F .
By eq. (13), for n ≥ 0 and m ≥ 2, for each occurrence in Ln of a label (n, m), a copy of each label in set

Ω (n, m) = {(n + 1, m + j) : j ≥ −1}

belongs to the multiset Ln+1 . Thus, in algebraic terms, each time that an expression z n y m with
m≥2
Pn ≥ 0 and
j appear
is counted in the generating function F —written z n y m ∈ F in what follows—the terms z n+1 ∞
y
j=m−1
in F as well. Summing over all possible z n y m ∈ F with n ≥ 0 and m ≥ 2, we obtain
X

z n y m ∈F : n≥0,m≥2



∞
X
j
n+1
y
z
=
j=m−1

z
y

X

z n y m ∈F : n≥0,m≥2



n m

z y

∞
X
j=0

y

j



.

(41)

Similarly,
for n ≥ 0 and m = 1, for each occurrence in Ln of a label (n, 1), a copy of each label in set

Ω (n, 1) =P
{(n + 1, j) : j ≥ 1} appears in the multiset Ln+1 . Thus, for each term z n y ∈ F , with n ≥ 0, the
j
n
terms z n+1 ∞
j=1 y are counted in F as well. Summing these terms for all z y ∈ F with n ≥ 0, we obtain
X

z n y∈F

: n≥0



∞
X
j
n+1
y = zy
z
j=1

X

z n y∈F

: n≥0



z

n

∞
X
j=0


y .
j

(42)

Notice that the sum of the expressions in eqs. (41) and (42) is the algebraic representation of the multiset
of labels L \ L0 . More precisely, each term z n y m ∈ F associated with a label (n, m) ∈ Ln , with n ≥ 1, is
counted—and counted exactly once—in the sum of eqs. (41) and (42). Therefore, to complete the description of
F , we require only those terms z 0 y m associated with labels (0, m) ∈ L0 . These terms are represented by
X

(0,m)∈L0

0 m

z y

=

∞
X

h0,m y m = g(y),

(43)

m=1

considering that h0,m = |{ℓ ∈ L0 : ℓ = (0, m)} (eq. (15)) and that by definition, g(y) =

19

P∞

m=1 h0,m y

m

(eq. (18)).

We can now equate the full generating function F (y, z) to the sum of eqs. (43), (41), and (42), obtaining


 X

∞
∞
X
X
X
z
j
j
n
n m
y .
y + zy
(44)
z
z y
F (y, z) = g(y) +
y n m
n
j=0

z y ∈F : n≥0,m≥2

Applying the fact that

P∞

j=0

z y∈F : n≥0

yj

= 1/(1 − y) for y near 0 in the complex plane, we then have




X
X
z
zy
n m
n
F (y, z) = g(y) +
z y
z .
+
y(1 − y) n m
1−y n
j=0

z y ∈F : n≥0,m≥2

(45)

z y∈F : n≥0

By eq. (25) and the fact that the multisets Ln of labels (n, m) for m-rooted histories of t(n) have hn,m elements,
X
∂F
(0, z)
zn =
∂y
z n y∈F : n≥0


 
X
X
X
∂F
n m
n
n m
(0, z).
z y
z y = F (y, z) − y
z y
=
−
∂y
n m
n
n m
z y ∈F : n≥0,m≥2

z y ∈F : n≥0,m≥1

z y∈F : n≥0

Substituting in eq. (45), the last two expressions yield


z
zy ∂F
∂F
F (y, z) = g(y) +
(0, z) +
(0, z),
F (y, z) − y
y(1 − y)
∂y
1 − y ∂y

(46)

which can be rewritten as in eq. (27).

Appendix 2. The dominant singularity and singular expansion of f˜(z)
This appendix obtains the singular expansion of f˜(z) described in eq. (32). In eq. (31), we have defined f˜(z)
as a composition f˜(z) = g(Y (z)), with the internal function Y (z) as in eq. (28) and the external function g(y)
as in eq. (23). Owing to the presence of the square root in the expression for Y (z), the dominant singularity of
the internal function Y (z)—the singularity nearest the origin of the complex plane—is at z = 14 . Computing the
value of Y (z) at its dominant singularity, we obtain Y ( 41 ) = 12 . In particular, we have Y ( 14 ) < 1, where 1 is the
radius of convergence of the finite series corresponding to the external function g in f˜. Indeed, it immediately
follows from Proposition 2 that y = 1 is the dominant singularity of g(y).
As detailed in Section VI.9 of [7], on dominant singularities of compositions, we are in the setting of the
subcritical case, in which the inequality Y ( 41 ) < 1 implies that the dominant singularity of g(Y (z)) coincides
with the dominant singularity z = 41 of the internal function Y (z) rather than the dominant singularity y = 1 of
the external function g(y). The desired singular expansion of f˜(z) = g(Y (z)) at the dominant singularity z = 14
can be obtained by inserting y = Y (z) in the regular (non-singular) expansion of g(y) at y = Y ( 14 ) = 21 .
To recover the expansion of g(y) at y = 21 , we expand and then sum each term qj [y aj /(1 − y)b ] of the finite
linear combination in eq. (23). At y = 12 , each of these terms is an analytic function, and we can thus use Taylor’s
formula to produce the desired expansion. We obtain at y = 21




y aj
1 2
1
b−aj
b+1−aj
qj
=2
qj + 2
(aj + b)qj y −
±O y−
.
(1 − y)b
2
2
By summing over the indices 1 ≤ j ≤ J of eq. (23), the expansion of g(y) at y =




1 2
1
g(y) = αt + βt y −
±O y−
,
2
2

1
2

is
(47)

with the constants αt and βt defined as in eqs. (34) and (35). Plugging y = Y (z) from eq. (28) into eq. (47), we
finally obtain the singular expansion of f˜(z) at z = 41 as in eq. (32).
20

Acknowledgments
We acknowledge grant support from the National Science Foundation (DBI-1146722). A Mathematica notebook
CatFamily.nb implementing the procedure in Section 3.4.2 for obtaining from a seed tree t the generating
function f (z), the coefficients hn , and the constant βt is available from the authors.

References
[1] Banderier, C., Bousquet-Mélou, M., Denise, A., Flajolet, P., Gardy, D., and Gouyou-Beauchamps,
D. Generating functions for generating trees. Discr. Math. 246 (2002), 29–55.
[2] Barcucci, E., Del Lungo, A., Perogola, E., and Pinzani, R. ECO: a methodology for the enumeration of
combinatorial objects. J. Differ. Equ. Appl. 5 (1999), 435–490.
[3] Degnan, J. H. Gene tree distributions under the coalescent process. PhD thesis, University of New Mexico, Albuquerque, 2005.
[4] Degnan, J. H., and Salter, L. A. Gene tree distributions under the coalescent process. Evolution 59 (2005),
24–37.
[5] Disanto, F., and Rosenberg, N. A. Coalescent histories for lodgepole species trees. Submitted (2015), xx–xx.
[6] Dutheil, J. Y., Ganapathy, G., Hobolth, A., Mailund, T., Uyenoyama, M. K., and Schierup, M. H.
Ancestral population genomics: the coalescent hidden Markov model approach. Genetics 183 (2009), 259–274.
[7] Flajolet, P., and Sedgewick, R. Analytic Combinatorics. Cambridge University Press, Cambridge, 2009.
[8] Graham, R. L., Knuth, D. E., and Patashnik, O. Concrete Mathematics, 2nd ed. Addison-Wesley, Boston, 2008.
[9] Hobolth, A., Christensen, O. F., Mailund, T., and Schierup, M. H. Genomic relationships and speciation
times of human, chimpanzee, and gorilla inferred from a coalescent hidden Markov model. PLoS Genet. 3 (2007),
294–304.
[10] Hobolth, A., Dutheil, J. Y., Hawks, J., Schierup, M. H., and Mailund, T. Incomplete lineage sorting
patterns among human, chimpanzee, and orangutan suggest recent orangutan speciation and widepsread selection.
Genome Res. 21 (2011), 349–356.
[11] Prodinger, H. The kernel method: a collection of examples. Sém. Lothar. Combin. 50 (2004), B50f.
[12] Rosenberg, N. A. Counting coalescent histories. J. Comput. Biol. 14 (2007), 360–377.
[13] Rosenberg, N. A. Coalescent histories for caterpillar-like families. IEEE/ACM Trans. Comp. Biol. Bioinf. 10 (2013),
1253–1262.
[14] Rosenberg, N. A., and Degnan, J. H. Coalescent histories for discordant gene trees and species trees. Theor.
Pop. Biol. 77 (2010), 145–151.
[15] Stanley, R. P. Enumerative Combinatorics Volume 2. Cambridge University Press, New York, 1999.
[16] Than, C., Ruths, D., Innan, H., and Nakhleh, L. Confounding factors in HGT detection: statistical error,
coalescent effects, and multiple solutions. J. Comput. Biol. 14 (2007), 517–535.

21

