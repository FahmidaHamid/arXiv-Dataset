FORENSIC IDENTIFICATION: DATABASE LIKELIHOOD
RATIOS AND FAMILIAL DNA SEARCHING

arXiv:1201.4261v3 [stat.AP] 21 Oct 2012

KLAAS SLOOTEN AND RONALD MEESTER

Abstract. Familial Searching is the process of searching in a DNA database
for relatives of a certain individual. It is well known that in order to evaluate
the genetic evidence in favour of a certain given form of relatedness between
two individuals, one needs to calculate the appropriate likelihood ratio, which
is in this context called a Kinship Index. Suppose that the database contains,
for a given type of relative, at most one related individual. Given prior probabilities for being the relative for all persons in the database, we derive the
likelihood ratio for each database member in favour of being that relative. This
likelihood ratio takes all the Kinship Indices between the target individual and
the members of the database into account. We also compute the corresponding
posterior probabilities. We then discuss two methods to select a subset from
the database that contains the relative with a known probability, or at least a
useful lower bound thereof. One method needs prior probabilities and yields
posterior probabilities, the other does not. We discuss the relation between
the approaches, and illustrate the methods with familial searching carried out
in the Dutch National DNA Database.

1. Introduction
Many countries maintain databases that contain forensic DNA profiles of traces
and of certain known individuals, e.g. convicted offenders or suspects of certain
crimes. These databases were originally set up to directly identify an unknown
offender by looking for matching DNA profiles. However, since DNA is inhereted
from parent to child, it is also possible to use them to look for the offender’s relatives,
rather than the offender himself, if the offender’s DNA profile turns out not to be
in the database. This last process is called familial (DNA) searching, and is carried
out in several jurisdictions (e.g. the UK, some US states and New Zealand). As a
result there have been some high profile successes (see e.g. [9] for the Grim Sleeper
case). The Netherlands have recently adopted a law that allows familial searching
in some cases.
Previous studies on familial DNA searching have mostly concentrated on empirical determination of the rank that a relative (of some target profile) in the database
occupies, when the database is ordered according to decreasing likelihood ratio with
the target, or according to decreasing number of shared alleles with the target. See
e.g. [1] for simulations that also includes a geographical component (based on US
states), or [6], [10] and [8]. In [7], false exclusion rates and false inclusion rates
for various thresholds on the likelihood ratio and/or number of shared alleles are
estimated by simulation. These rates are averages over different target profiles.
Date: October 23, 2012.
Key words and phrases. Familial Searching, Kinship Analysis, DNA-Databases, Bayesian Inference, Weight of Evidence.
1

2

KLAAS SLOOTEN AND RONALD MEESTER

The contributions of this paper to the research on familial searching are as follows. In part, we rediscover and collect several different statistical aspects of familial searching that are currently scattered in the literature. But moreover, we
present and extend these results in a unified mathematical framework that allows
for a comparison of the different approaches to familial searching. In particular we
extensively discuss the different frequentist meaning of the probabilities involved.
In this paper, more specifically, we define various search strategies that allow
one to determine or control the probability with which the relative can be found,
if indeed it is in the database. We also explain how these search strategies can
deal with heterogeneous databases in which the amount of information stored for
its members may differ between members (e.g., different sets of autosomal loci).
It turns out that there are different strategies that are equally effective, and we
discuss their different probabilistic interpretations.
The first method, which we call the conditional method, gives a probabilistic
model that allows one to obtain posterior probabilities for relatedness that take all
the database information (and the prior probabilities) into account. Focus on the
posterior can also be found in [2], but indirectly as the result of Bayesian network
computation, whereas we derive these probabilities without needing such a tool.
Our second method, which we call the target-centered method, selects a subset
from the database that contains a relative with a certain probability. It essentially
weighs false-negative (not selecting a true relative) probabilities against false positive (selecting an unrelated individual). The literature contains accounts of such
approaches (e.g. [7]) but these studies focus on the average over all target profiles,
whereas we focus on what happens in a particular case by taking the target profile
as starting point.
We investigate the effectiveness of a familial search for a specific DNA target
profile, rather than the average over all profiles. As is to be expected, if the target profile has more rare alleles, its relatives are easier to find then if it has more
common alleles. This effect has been already noted (quantitavely) in [5] and (heuristically) in [8]. We illustrate the results by a comprehensive simulation study using
artificial targets in the actual Dutch National DNA database. Finally, we look at
how hard half-sibling would be to find either with the appropriate index (the halfsibling index) or with the sibling index. It turns ou that half-siblings are, of course,
quite hard to find but that a search with sibling index does not perform very much
worse than one with the half-sibling index.
In a familial search setting, we have a target item that we compare with database
items among which, we suppose, at most one ‘related’ item is present. If so, we
wish to find it, and we do so by computing likelihood ratios in favour of being
a special item between the target and every database member. From these, we
compute (given prior probabilities) posterior probabilities for relatedness between
the target and a database member that take all the computed one-to-one likelihood
ratios into account.
What distinguishes a familial search from an ordinary kinship computation is of
course the fact that we compute likelihood ratios with a whole database. Databases
are bound to yield chance matches, meaning in this case a strong indication for a
non-existing relationship. This is reminiscent of the classical database controversy,
and some elements of that discussion reappear in the familial searching context.
For example, an attempt to take into account the fact that a database search has

FAMILIAL DNA DATABASE SEARCHING

3

been done is described in [11] where the SWGDAM Ad Hoc Committee on Partial
Matches recommends that the kinship index between a database member and the
target be divided by N , the size of the database, and to only further investigate
this possible lead if that quotient is sufficiently large. As we shall see, this number
does not represent the likelihood ratio in favour of relatedness.
In our opinion familial searching has the potential to lead to the same kind of
debate as the classical database controversy. As we will point out in the text, such
a classical database search can in fact be viewed as a special case in the model that
we present.
Finally, let us mention that this paper can be viewed as a sequel to [13], in which
we have discussed the effectiveness of database searches where one is looking for
a perfect match. In that case, only two likelihood ratios arise as the result of the
comparison of the target’s profile to a database profile: zero (in case of exclusion) or
1/p (in case of a match, and p is the profile frequency). In this article we generalize
this to the search for a database member that has a certain family relation to the
target (including the possibility of identity).
2. Database likelihood ratios
We consider a database of DNA profiles, and we suppose at most one of these
profiles comes from a person that is related to the offender, whose DNA profile
we call the target profile. The form of relatedness is fixed: we are looking for a
specific relative (e.g., the offender’s father, the offender’s brother, or simply the
offender himself), not for any relative. We also assume that the database members
are unrelated to each other. In reality, the database may of course contain several
related individuals. We expect this to have a negligible influence when these people
are only related to each other and not to the target. In the case however where
the database contains more than one relative of the target, the situation becomes
more complex. Nonetheless it is clear that the target becomes easier to identify in
that case. Exactly how much easier will depend on the number and type of these
relatives and warrants a separate publication. In this article we restrict ourselves to
the case where at most one relative may be present in the database, and we believe
that the results are indicative of those to be obtained in the more general setting.
Let P1 , . . . , PN represent the DNA profiles in database D, by letting them be
random variables that are all distributed as either S (“special”) or G (“generic”),
such that at most one of the Pi (the “special” member) is distributed as S. For
example, if we are looking for brothers then S selects a DNA profile from a brother
of the target, according to the probability distribution for DNA profiles of brothers
of the target. By R = i we mean that Pi is distributed according to S, for 1 ≤ i ≤ N .
By R ∈
/ D we mean that all Pi for 1 ≤ i ≤ N are distributed according to G, i.e., the
database does not contain a special item. Then R ∈ D has the obvious meaning.
We assume that we know the “prior” probabilities
πi = P (R = i)
PN

for all i. Further, let πD = i=1 πi and π0 = 1 − πD .
We also suppose that all Pi are conditionally independent given which of them
(if any) is distributed as S. This reflects that all population members are unrelated
to each other and to the offender, except for the relative.

4

KLAAS SLOOTEN AND RONALD MEESTER

In our DNA context, the Pi take values in the set of DNA profiles. The distribution of S will depend on the relation between the offender and the special member.
If we are looking for the offender himself, then S will have a point distribution: it is
equal to the DNA profile of the offender. If we are looking for the offender’s father,
then S will be equal to DNA profile g with probability equal to the probability that
the offender’s father has DNA profile g. On the other hand, the random variable
G always represents a DNA profile of a random population member, and therefore
the probability that G = g is equal to the expected population frequency of DNA
profile g, irrespective of the type of search we are performing (looking for a direct
match, a parent or child, sibling, et cetera.)
The likelihood ratio LRS,G (Pi ) expresses the support in favour of R = i: it says
how many times more likely it is that database member i has the observed DNA
profile if it is equal to the desired relative, than if it is unrelated to the offender.
Such a likelihood ratio is often called PI (Paternity Index) when looking for a parent
or child, and SI (Sibling Index) when looking for a sibling.
If every database member is subjected to such a likelihood ratio calculation, we
obtain a vector of likelihood ratios, that we denote by
LRD = (r1 , . . . , rN ) = r.
We also define
r0 = 1,
which will be useful below.
We will use these likelihood ratios from the database to make probabilistic statements concerning the identity of R. In the next chapter we will use those results to
define search strategies for R in the database. One strategy relies on the following
result, whose proof we defer to the Appendix.
Proposition 2.1. For i = 1, . . . , N , we have
(2.1)

ri πi
P (R = i | LRD = r) = PN
k=0 rk πk

and
(2.2)

ri πi
.
P (R = i | LRD = r, R ∈ D) = PN
k=1 rk πk

Remark 2.2. A version of the above formula (2.1) has, in the context of DNA mixtures, also been obtained in [3] (see also [4]). Their formulation uses probabilities
rather than likelihood ratios in numerator and denominator.
Remark 2.3. Note that the conditional probabilities in (2.1) and (2.2) do not
depend on the distribution of S and G.
It follows from Proposition 2.1 that, for any subset D0 ⊂ D
P
i∈D 0 ri πi
0
.
(2.3)
P (R ∈ D | LRD = r) = PN
k=0 rk πk
In particular, with D0 = D we obtain
P (R ∈ D | LRD = r)
=
P (R ∈
/ D | LRD = r)

PN

i=1 ri πi

π0

,

FAMILIAL DNA DATABASE SEARCHING

5

and the likelihood ratio in favour of R ∈ D is given by
PN
ri πi
P (LRD = r | R ∈ D)
(2.4)
= i=1
.
P (LRD = r | R ∈
/ D)
πD
Note that the likelihood ratio depends on the prior probabilities.
Corollary 2.4. In odds form, we obtain
P (R = i | LRD = r)
ri πi
= PN
,
P (R 6= i | LRD = r)
k=0,k6=i rk πk
and the likelihood ratio in favour of R = i is given by
(2.5)

P (LRD = r | R = i)
ri (1 − πi )
.
= PN
P (LRD = r | R 6= i)
k=1,k6=i rk πk + π0

In the case where the prior distribution of R on D is uniform, the above derived
formulas simplify, and for convenience we include them here. With P (R = i) =
πD /N for all 1 ≤ i ≤ N we obtain, as special case of (2.4),
(2.6)

N
P (LRD = r | R ∈ D)
1 X
=
ri ,
P (LRD = r | R ∈
/ D)
N i=1

which is independent of the prior πD , contrary to the general case. In this uniform
case, we see that the results LRD = r favour R ∈ D if and only if the average
likelihood ratio on D is greater than one.
The posterior probability that R = i is now equal to
ri
,
P (R = i | LRD = r) = PN
1−πD
k=1 rk + N πD
with corresponding likelihood ratio
(2.7)

P (LRD = r | R = i)
=
P (LRD = r | R 6= i)

ri
PN
πD
k=1,k6=i rk )
N −πD (

+

N (1−πD )
N −πD

.

In the even more specific case that πD = 1, i.e., the database surely contains a
relative and any of the members can be the relative with equal a priori probability,
we simply get
ri
P (R = i | LRD = r) = PN
k=1 rk
and
P (LRD = r | R = i)
=
P (LRD = r | R 6= i)

1
N −1

ri
P

k6=i rk

.

Example 2.5. We can view the process of searching for a match with a DNA
profile as a special case. In that case R corresponds to the trace donor, and S can
only take value e0 , the DNA profile in question. On the other hand G can take
more values with probabilities given by the profile population frequencies. Let p
denote P (G = e0 ), the random match probability of the profile e0 . In this situation,
LR(Pi ) can take value 0 or 1/p. The variables P1 , . . . , PN correspond to the members
of a database in which we look for the profile e0 . Suppose that the ith database

6

KLAAS SLOOTEN AND RONALD MEESTER

member is the only one that matches. Then LR(Pi ) = 1/p and all other LR(Pk ) = 0
(for 1 ≤ k ≤ N, k 6= i), so the likelihood ratio (2.7) in favour of R = i becomes
P (LRD = r | R = i)
1 N − πD
=
.
P (LRD = r | R 6= i)
p N (1 − πD )
If πD = N/n (the population fraction in the database), then this reduces to (n −
1)/(p(n − N )), and the likelihood ratio in favour of R ∈ D is given by (cf. (2.4))
1
P (R = i)
=
.
pP (R ∈ D)
Np
These results are well known; see e.g. [13] and the references therein.
3. Search strategies
We will now use these results to define strategies to choose a subset of D as small
as possible, and which contains R with a given minimal probability α.
3.1. The conditional method. Let Dk be the subset of D that corresponds to
the k largest products ri πi (with some arbitrary rule in case of ties). Furthermore,
we let, for 0 ≤ α ≤ 1, kα be the minimal k for which
X
rj πj ≥ α(r1 π1 + · · · + rN πN ),
j∈D k

that is, kα is the smallest k for which the corresponding sum of the likelihood ratios
weighted with the prior probabilities is at least a fraction α of the total weighted
sum. Finally, we write Dα for Dkα . Note that in order to determine whether or
not i ∈ Dα , one needs the full vector r. Note also that P (R ∈ Dα ) depends on the
distribution of S and G, but P (R ∈ Dα | LRD = r) does not (cf. Remark 2.3). The
distribution of the cardinality of Dα also depends on the distribution of S and G
(and on N ).
We now make two observations about the probability that the index R is contained in Dα . First, in case P (R ∈ D) = 1 it follows from (2.1) that for the
unconditional probability P (R ∈ Dα ) we have
P (R ∈ Dα ) ≥ α.

(3.1)

Secondly, if we do not have P (R ∈ D) = 1, then from (2.2) we have (for i = 1, . . . , N )
that
X
P (R = i | R ∈ D) =
P (LRD = r | R ∈ D)P (R = i | R ∈ D, LRD = r)
r

=

X
r

ri πi
P (LRD = r | R ∈ D) PN
.
k=1 rk πk

Hence
P (R ∈ Dα | R ∈ D)

=

X

=

X

P (LRD = r | R ∈ D)P (R ∈ Dα | R ∈ D, LRD = r)

r

P (LRD = r | R ∈ D)

i∈D α

r

≥ α

X

X
r

ri πi
PN
k=1 rk πk

P (LRD = r | R ∈ D) = α,

FAMILIAL DNA DATABASE SEARCHING

7

where the inequality follows from the definition of Dα . The quantity
P (R ∈ Dα |R ∈ D)
is called the efficiency of Dα , the ability to select R given that R is in the database.
We just showed that the efficiency of Dα is at least α.
3.2. The target-centered method. Recall that we have described S as the random variable that selects DNA profiles of relatives, and G as the random variable
that selects DNA profiles of unrelated individuals. These being random variables,
the likelihood ratios in favour of relatedness for related individuals (drawn from S)
and for unrelated individuals (drawn from G) also become random variables. By
P (LR(S) ≥ t) we mean the probability that the likelihood ratio for a related individual is at least t. For example, when looking for a sibling, this would correspond
to the probability that the sibling index with a random sibling of the offender is at
least t. Similarly, it also makes sense to write LR(Pi ): this is the likelihood ratio
obtained from population member i.
For 0 ≤ α ≤ 1, let tα ≥ 0 be the largest t for which
(3.2)

P (LR(S) ≥ t) ≥ α.

We use these thresholds tα to define
(3.3)

Dα = {i ∈ D | LR(Pi ) ≥ tα }.

In order to decide whether or not i ∈ Dα , one only needs to know ri , and not the
full vector r as in the case of Dα . It follows that
P (R ∈ Dα | R ∈ D) = P (LR(S) ≥ tα ) ≥ α,
so also the efficiency of Dα is at least α. In fact, for every 0 ≤ α ≤ 1,
(3.4)

P (R ∈ Dα ) ≥ αP (R ∈ D).

Thus, we simply choose a threshold that is met by the real relative with probability α, and admit anyone into Dα when the likelihood ratio is sufficiently big.
Remark 3.1. Conversely, one could also select all database members whose likelihood ratio is unusually big if they would be unrelated. This criterion has been
proposed in [12], in the context of deciding whether or not to further investigate the
possibility that the suspect’s relative matches a crime stain. In our terminology,
they propose a threshold sβ such that
β = P (LR(G) ≥ sβ ).
If N is large then (since all but at most one of the database members are distributed
as G) one expects a fraction β of the database to be selected into {i ∈ D | LR(Pi ) ≥
sβ }. The relation with Dα is as follows. We have

8

KLAAS SLOOTEN AND RONALD MEESTER

α

≤
=

P (LR(S) ≥ tα )
X
P (LR(S) = x)
x≥tα

=

X

xP (LR(G) = x)

x≥tα

=

X

xP (LR(G) = x | LR(G) ≥ tα )P (LR(G) ≥ tα )

x≥0

= E(LR(G) | LR(G) ≥ tα )P (LR(G) ≥ tα ).
Now, let β be such that tα = sβ , then
α ≤ β · E(LR(G) | LR(G) ≥ sβ ).
Clearly, α cannot be expressed in β alone but depends also on the target that we
are dealing with. It follows that when selecting a database subset according to the
threshold sβ , the probability that R is selected depends on the specific aspects of
the case, whereas for Dα (and Dα ) it has a uniform lower bound α.
Remark 3.2. Notice that this approach essentially compares false-negative probabilities (1−α) with false-positive probabilities (P (LR(G) ≥ tα )). This is also done in
[7], but without focussing on a specific target profile. The results are therefore informative about the average performance with likelihood ratio thresholds, not about
results in a particular case. Moreover, various studies (cf. [7],[5]) employ thresholds that are a combination of a threshold on the number of shared alleles (denoted
IBS, identity by state) and a likelihood ratio threshold t. Suppose we define Dn,t as
those database profiles that share at least n alleles with the target profile and for
which the kinship index with the target profile is at least t. For a given target, Dn,t
will contain a true relative with a certain probability, and will contain unrelated
individuals with another probability. However, the Neyman-Pearson lemma implies
that of all tests with the same false-negative rate, the likelihood ratio test has the
smallest false-positive rate. In other words, the pair (n, t) will correspond to a
false-negative rate 1 − α, and then Dα which has this same false-negative rate, will
have a better (more precisely, not a worse) false-positive rate than Dn,t . Therefore, even though it can be computationally attractive to work with a threshold
(n, t), conceptually these thresholds are outperformed by putting a threshold on
the likelihood ratio alone.
3.3. Comparison and interpretation. We have defined two subsets Dα and
Dα , both with efficiency at least α. Nevertheless, there are important differences
between these approaches that we wish to discuss here.
First of all, Dα makes use of the prior probabilities πi = P (R = i), while Dα
does not. For example, in case of familial searching, geographical information or
age could play a role in the definition of prior probabilities P (R = i). Thus, Dα
uses more information than Dα , which seems to give Dα an advantage over Dα .
There is, however, a reason why the use of Dα could be more appropriate in
concrete cases. This reason has to do with the interpretation of the probabilities
involved, and we explain this next. We can see Dα as a random subset of D which
contains all database members that have yielded likelihood ratios greater than or
equal to a random threshold. The distribution of this threshold depends on the

FAMILIAL DNA DATABASE SEARCHING

9

distributions of both S and G (and on N , the size of the database). Therefore, a
frequentist interpretation requires re-sampling of the database. Indeed, we have
defined a subset in such a way that, if we would construct it for many realizations
of one copy of S among N − 1 copies of G, a fraction P (R ∈ Dα | R ∈ D) of the time
we would have included the copy of S.
The interpretation of the probability P (R ∈ Dα ), on the other hand, is easier.
Indeed, Dα is a random subset of D as well, containing all database members that
have yielded likelihood ratios above some threshold, but this time the threshold depends on the distribution of S only (through LR(S)). This allows us to make another
frequentist interpretation: we choose a realisation of the database (according to G),
and then, keeping the database fixed, repeatedly add one copy of a realisation of
S. We can think of P (R ∈ Dα |R ∈ D) as the relative frequency of times we would
find the special member in Dα . This interpretation corresponds well with what one
would intuitively understand by the probability of finding the relative since in the
forensic practice, the database is (more or less) fixed. From this point of view it is
more appropriate to use Dα rather than Dα and, importantly, it is also easier to
explain to legal representatives what the probabilistic statement really means.
The frequentist considerations above apply to the general framework we have
discussed in this paper. In the special case of familial searching however, the drawback of using Dα may not be that serious, for the following reason. We explained
that for a full frequentist interpretation of Dα , one would need to resample the
database many times, and that this does not correspond well to legal practice.
However, what matters is not so much that we can interpret the full profiles in the
database as being resampled, but that we can interpret the observed likelihood ratios as being resampled. Suppose that we treat various different familial searching
cases (i.e., try to find relatives from various targets) with the same database. Then,
when we compute likelihood ratios between the database and a new target, these
likelihood ratios depend on the newly sampled target profile, and it is to be expected that for an independent sequence of target profiles, the observed likelihood
ratios corresponding to the fixed profiles in the database are more or less independent. To test this, in the next section we investigate using computer simulation to
what extent the frequentist interpretation that we have for Dα is valid for Dα as
well. That is, we draw many targets independently according to G (i.e., at random
using population allele frequencies), and add their simulated relatives to the same
database. We see how many of these relatives are found in Dα , on average over
all targets. This we will compare to adding many relatives of the same target to
resampled databases.
Finally, we mention the fact that when the database is large and uniform priors
are used, the sets Dα and Dα will be very similar. This is due to the fact that the
law of large numbers implies that the sum of the likelihoods above tα divided by
N will be close to α. Hence the random threshold associated with Dα (discussed
above) will with very high probability be very close to tα . This argument can be
made precise in the form of a limit statement in probability or almost surely.
3.4. Heterogeneous databases. A forensic DNA database may consist of profiles
that have different sets of loci typed. As a result, not all profiles stored in the
database are equally informative. Mathematically this means that instead of one
pair (S, G), we have several such pairs. We now sketch how the search strategies
deal with such a situation. For ease of exposition, we consider only the situation

10

KLAAS SLOOTEN AND RONALD MEESTER

where there are two such pairs, the generalization to a larger number being obvious.
In the DNA context, this corresponds to a database that contains DNA profiles for
two different sets of loci. We write the database D as a disjoint union D = D1 ∪ D2 ,
where Di corresponds to the hypothesis random variables Si and Gi .
3.4.1. Conditional method. Going through the proof of Proposition 2.1, one checks
that this expression also holds in this heterogeneous situation, with the understanding that if Pi ∈ Dj then Pi is distributed either as Sj (if R = Pi ) or as Gj (if R 6= Pi ).
The search strategy therefore need not be modified but its efficiency may change.
For example, as the amount of genetic information in D1 increases, S1 approaches a
point distribution at infinity. In the limit, if R ∈ D1 then R ∈ Dα for all α > 0 and
hence the efficiency of Dα is at least P (R ∈ D1 | R ∈ D). Thus, the heterogeneity
of D has an effect on the efficiency and cardinality of Dα .
Another possibility is to perform the conditional method on each database part
separately with its own efficiency parameter αi ; we may denote the resulting subset
of D by Dα1 ,α2 = D1α1 ∪ D2α2 . In that case,
P (R ∈ Dα1 ,α2 | R ∈ D) ≥ α1 P (R ∈ D1 | R ∈ D) + α2 P (R ∈ D2 | R ∈ D).
In particular, choosing α1 = α2 leads to an efficiency of (at least) α for Dα,α . Other
choices of α1 , α2 may lead to the same efficiency. If, for example, D1 contains more
genetic information than D2 , then one may take advantage of this fact by letting
α1 > α2 . This means that the efficiency is greater in D1 than it is in D2 , while the
overall efficiency of Dα1 ,α2 is equal to α = (α1 − α2 )P (R ∈ D1 | R ∈ D) + α2 . For
these choices Dα,α and Dα1 ,α2 have the same efficiency, but the expected cardinality
of Dα1 ,α2 can be smaller than that of Dα,α .
3.4.2. Target-centered method. In this case as well, we can make use of the database’s heterogeneity to define various search strategies with the same efficiency.
Let, as in (3.2), ti,α ≥ 0 be the largest t for which P (LR(Si ) ≥ t) ≥ α (where
LR = LRSi ,Gi ), i.e., we define the appropriate thresholds on the likelihood ratio for
every type of database entry. Then we let
Dα1 ,α2 = {i ∈ D1 | LR(Pi ) ≥ t1,α } ∪ {i ∈ D2 | LR(Pi ) ≥ t2,α },
containing a database member if, considering the amount of information stored for
this database member, the obtained likelihood ratio is sufficiently big. Then the
efficiency of this strategy is simply, as it was for Dα1 ,α2 ,
P (R ∈ Dα1 ,α2 | R ∈ D) ≥ α1 P (R ∈ D1 | R ∈ D) + α2 P (R ∈ D2 | R ∈ D).
Using the same limit as for the conditional method, as D1 contains more information, an efficiency of α1 = 1 can be obtained in the limit using t1,1 = ∞, in which
case the efficiency of Dα1 ,α2 will be at least P (R ∈ D1 | R ∈ D), the same as for the
conditional method.
4. Familial Searching in the Dutch National dna Database
4.1. Methods and notation. We have carried out simulation experiments using
the Dutch DNA database, where we have carried out familial searches with artificial
targets, looking for parent-child, sibling, and half-sibling relations. We will restrict
ourselves mostly to the results of the sibling and half-sibling searches here, parents
and children being relatively easy to find owing to the fact that they always share

FAMILIAL DNA DATABASE SEARCHING

11

an allele on each locus (barring mutations, but these are rare) whereas siblings (and
of course half siblings too) need not share any alleles with each other.
All our simulations were programmed in-house with Mathematica software. We
let DN L be the Dutch National DNA Database (as per mid 2010, all duplicate
profiles removed and only considering the N = 99, 979 profiles for which all ten
SGMPlus loci were typed). Allelic ladders and allele frequencies were taken from
DN L .
According to these allele frequencies, target profiles C1 , . . . , C100 were sampled
(pseudo)randomly to serve as the targets whose relatives we want to find using
familial searching. For each of these target profiles we sampled 50,000 children
and 50,000 siblings. Then we computed the likelihood ratios in favour of paternity
(the Paternity Index P I) between the Ci and their children, and those in favour of
siblingship (the Sibling Index SI) between the Ci and their siblings. These allow
us to estimate the thresholds tα (cf. (3.2)) for the paternity and sibling cases.
We will sometimes write KI, for Kinship Index, when we mean that the discussion holds for any type of relative, in particular KI can stand for P I or SI.
The DNA profiles in DN L are labeled d1 , . . . , dN ; they can be viewed as a sample of independent copies of G that is fixed throughout. By KI(Ci , dj ) we mean
the kinship index between the target profile Ci and database profile dj . Thus,
KI(Ci , dj ) can, for each target separately, be interpreted as a realization rj of the
random variables LR(G) in the preceding sections.
We have also computed the random match probability (RMP) of each target
profile. On a locus with alleles (a, b), the RMP is equal to pa pb (2 − δa,b ) where pi
is the allele frequency of allele i and δa,b = 0 if a 6= b and δa,a = 1. The RMP of a
DNA profile is then the product over all involved loci, since we assume all loci to
be independent. This is reasonable, since all loci are on different chromosomes.
4.2. Total likelihood ratio with the database. For all 100 targets Ci , we comPN
puted the sums |KI(Ci , DN L )| = k=1 KI(Ci , dk ). The mean |P I(Ci , DN L )| was
102,200 (with sample standard deviation 94,500), the mean |SI(Ci , DN L )| was
93,500 (with sample standard deviation 42,200). These results seem consistent
with what we expect, cf. Proposition A.2. Indeed, since all target profiles were
randomly generated, they do not have a true relative in the database, and hence
E(|KI(Ci , DN L )|) = N according to Proposition A.2.
4.3. Conditional method. First, we have compared the results of the conditional
method when each familial search is performed in the same database (i.e., the Dutch
National DNA database), with results obtained when each familial search is carried
out in a new database.
4.3.1. The conditional method in the Dutch National DNA Database. We have investigated (by simulation) what the probability is that a relative of a fixed target is
α
found in D̃N
L , where D̃N L is the extension of DN L with a relative of the considered
target. We take a uniform prior distribution of R on D̃N L .
To do so, we have simulated relatives Ri,j (i = 1, . . . , 100; j = 1, . . . , 500) of each
type (children and siblings), where Ri,j is a relative of target profile Ci . For each
relative Ri,j , define its rank to be equal to k if and only if there are exactly k − 1
database members that have a greater kinship index with Ci than Ri,j . We also

12

KLAAS SLOOTEN AND RONALD MEESTER

define

P
ti,j =

x:KI(Ci ,dx )>KI(Ci ,Ri,j )

KI(Ci , dx )

KI(Ci , d1 ) + · · · + KI(Ci , dN ) + KI(Ci , Ri,j )

.

Assuming a uniform prior of R on D̃N L , ti,j is the greatest t ≥ 0 such that Ri,j ∈
/
t
α
D̃N
.
Thus,
R
∈
D̃
if
and
only
if
α
>
t
.
i,j
i,j
L
NL
For each Ci and for α ∈ {0.01, . . . , 0.99, 1}, we have compared α to the fraction
βi,α of ti,j that are smaller than α; this fraction βi,α is the observed probability
α
for relatives of Ci to be in D̃N
L . Finally, we have also computed βα as the average
over all βi,α . Thus, βα estimates the probability that if one adds a relative R of a
α
random target profile to this database DN L , that R is in D̃N
L.
α
The probability that the relative of a target C is in D̃N L is called the probability
of detection (POD) for C in the Dutch National Database DN L . The number βα
therefore gives an estimate of the average (over all targets) probabilities of detection
POD. Note that a POD is only defined in connection to a fixed database, in this
case DN L .
For siblings, the result of our simulations is displayed in Figure 1.
Figure 1. The average POD as a function of α, average over 100
target profiles, Sibling Index.

PoD
100
80
60
40

ææ
ææ
ææ
ææ
ææ
æ
æ
ææ
ææ
ææ
ææ
ææ
æ
æ
ææ
ææ
ææ
ææ
ææ
æ
ææ
ææ
ææ
ææ
ææ
ææ
æ
ææ
ææ
ææ
æææ
ææ
ææ
æ
ææ
ææ
ææ
ææ
æææ
æææ
æ
ææ
ææ
æææ
ææææ
ææ
ææææææææææ

20

0.2

0.4

0.6

0.8

1.0

Α

α
For all α the average POD of D̃N
L is at least α. For small α, it exceeds α
α
substantially and as α increases, the average POD of D̃N
L approaches α. This is a
α
consequence of the definition of D̃N L as being a subset that contains the k greatest
α
P I for some k. As α increases and D̃N
L becomes larger, we add individuals with
smaller SI, and we expect βα to become closer to α. However, the variation between
target profiles was substantial. We highlight three very different results in Figure
2. This difference is created by the presence (or absence) of database members that
have a large sibling index with the target, thus obscuring (or revealing more easily)
the real sibling, especially for low probabilities of detection.

4.3.2. The conditional method in resampled databases. In this section we compare
the above estimates of the probabilities of detection with estimates of the efficiency

FAMILIAL DNA DATABASE SEARCHING

13

Figure 2. The POD as a function of α, for three target profiles.
100

100

100

80

80

80

60

60

60

40

40

40

20

20

20

20

40

60

80

100

20

40

60

80

100

20

40

60

80

100

of the conditional method in resampled databases of roughly the same size as DN L .
0
To do so we have, for each target profile Ci as above, simulated 100 relatives Ri,j
and
databases Di,j with N = 100, 000. As in the previous section, we have determined
0
α
ti,j as the largest α such that Ri,j
∈
/ D̃i,j
, and used these numbers to determine
0
0
βi,α and βα whose definitions are analogous to their earlier counterparts.
The observed overall efficiency βα0 is extremely close to the observed probabilities
of detection βα displayed in Figure 1. In fact, the difference between the βα0 of
this section (the average efficiency) and the βα in Figure 1 (average probability of
detection) is on average over α ∈ {0.01, . . . , 0.99, 1} equal to −0.0022 and never
greater (in absolute value) than 0.0084.
We have also, for each Ri,j , computed its rank ki,j (defined in Section 4.3.1).
A summary of the results is presented in Figure 3, where we plot for each α ∈
{0, 0.01, . . . , 0.99}, the average rank of relatives for which ti,j is nearest to α. This
gives the average rank of a relative that would be found in Dα , but not in Dβ for
β < α.

Mean Log10Hki, jL

Figure 3. Observed pairs (ti,j , Log10 (Mean ki,j ))
æ

4

æ
æ
æ
æ
ææ
æ
ææ
æ
ææ
ææ
æ
æ
ææ
æææ
ææ
æ
æææ
æææ
æ
ææ æææ
ææ
ææææææ

3
2

æ ææ
æ
æ æ
æææææ
æææ
æ
æ ææ
ææ æ
ææ ææ
æ
æ æ æ æ
æ ææ æ
æ æ
ææ
æ
æææ
æ ææ
æææææ ææ

1
æ

20

40

60

80

100

ti, j

4.3.3. Comparison of simulations. The simulations indicate that, even though there
is a conceptual difference between probability of detection and efficiency, the average
probability of detection in the Dutch National DNA Database coincides with the
average efficiency of Dα for databases of the same size. In other words, the average
probability of detection in DN L , averaged over all targets, is the same as the average

14

KLAAS SLOOTEN AND RONALD MEESTER

efficiency of Dα (averaged over all targets) for a database D of the same size as
DN L . Therefore, even if we (as we do in practice) do not resample the database
but look for relatives in the same database for all targets, then the probability of
finding a relative in Dα when database and relative are resampled is the same as
the long term success rate of finding the relative of varying targets in Dα while the
database is kept constant. On the other hand, for Dα , the interpretation of the
efficiency P (R ∈ Dα | R ∈ D) does not require resampling of the database, hence
also holds in a fixed one. This makes the Dα method easier to interpret.
4.4. Target-centered method. Recall that we have, for each of the target profiles
Ci , simulated 50,000 siblings, in order to estimate the profile-dependent thresholds
tα needed for Dα . Some resulting sizes of DN L,α , for α = 0.70, 0.80, 0.90 are plotted
in Figure 4 where each dot represents a target profile. The horizontal axis contains
−Log10 (RM P ) with RM P the random match probability (cf. end of 4.1). The
mean sizes of Dα are 85, 258, 1038 respectively, and we notice a tendency for Dα
to be smaller for profiles with a smaller random match probability (i.e. for which
−Log10 (RM P ) is larger). This is to be expected: for such profiles tα will be greater
and it will be more unlikely for an unrelated person to have a sibling index with
the target exceeding that threshold. The observed mean sizes of DN L,α are similar
to what has been obtained in resampled databases with the conditional method (cf.
Figure 3).
Figure 4. Size of DN L,α for α=0.70, 0.80 and 0.90, Sibling Index
120
400
100

1500
300

80
60

1000

200

40
500

100
20
12

13

14

15

16

17

12

13

14

15

16

17

12

13

14

15

16

17

4.5. Rank in Dutch database. Another possibility for a forensic lab is to fix in
advance the number of individuals that are additionally tested. Especially when
doing so, it is interesting to know how high one expects the relative to rank when
the database is sorted according to decreasing kinship index. For each of the target
profiles Ci , we have generated 1000 siblings and investigated what their rank would
be if it would have been added to the Dutch National DNA database. The result,
averaged over all targets, is displayed in Figure 5. This graph should be compared
to Figure 3.
In particular, the true sibling was ranked first in 31% of the cases, in the top 10
in about 52% of the cases, in the top 100 in about 73% of the cases, and in the top
200 in about 79% of the cases.
Of course, substantial differences were observed between the target profiles. For
two target profiles with very different results, we have generated 10.000 siblings for
each of them. The results are visualized in Figure 6. These profiles are the same
ones that give rise to the first two figures of Figure 2. The profile corresponding
to the upper graph in Figure 6 is, for a SGMPlus profile, rare (its random match
probability being 10−17.8 ) whereas the other profile is quite common (its random
match probability being equal to 10−11.4 ).

FAMILIAL DNA DATABASE SEARCHING

15

Figure 5. Probability for a sibling to obtain SI-rank at most n,
in Dutch database

Fraction of sibs in top-n H%L

æææ
ææææææææææææææææææææææææ
ææææææææææææææææææææ
æææææææææææææææææææææ
æææææææææææææææææææ
æææææææææææææææææ
æææææææææææææææ
æ
æ
æ
æ
æ
æ
æ
æ
æ
æ
æ
æ
æ
æææææææææææææ
ææææææææææææ
æææææææææææ
ææææææææææ
ææææææææ
ææææææææ
ææææææææ
æ
æ
æ
æ
æ
æ
ææææ
ææææææ
ææææææ
ææææææ
ææææææ
æææææ
æææææ
æ
æ
æ
ææææ
ææææ
æææ
æææ
æææ
æææ
æ
æ
æ
æææ
ææ
ææ
ææ
ææ
æ
æ
æ
æ
æ
æ
æ
æ

80
70
60
50
40

æ
æ
æ
æ
æ
æ
æ
æ

æ

50

100

150

200

250

300

n

Figure 6. Probability for a sibling to obtain SI-rank at most n,
in Dutch database: two extreme cases and the average

Fraction of sibs in top-n H%L

80

60

40

20

50

100

150

200

250

300

n

Notice that, whereas for the profile corresponding to the upper graph, the probability for a sibling to rank in the top-5 is 67%, whereas for the profile corresponding
to the middle graph the probability to rank in the top-300 is slightly less, 64%.
This illustrates the dramatic differences between different familial searches when it
comes to the ease of retrieving a sibling from the database. The middle graph is
the average also displayed in Figure 5.
4.6. Half-siblings. Finally we investigate exactly how hard it is to find halfsiblings in the Dutch DNA database. It is well known that, using independent

16

KLAAS SLOOTEN AND RONALD MEESTER

autosomal markers as we do here, it is impossible to differentiate between halfsiblings, grandparent-grandchild, and uncle-nephew relationships (at least, in the
absence of mutation but in practice also when mutation is taken into account with
realistic mutation rates). Thus the discussion holds in fact for all these types of
relatives, but we will speak of half-siblings only.
Since it is to be expected that half-siblings that genetically look sufficiently like
full siblings will be found when a familial search for full siblings is performed,
the question is how many half-siblings are found in such a familial search for full
siblings.
We created an artificial database D with 100.000 SGMPlus profiles (10 loci),
and considered 100 artificial target profiles. For each of these, we added 500 times
a half-sibling to the database and then sorted to extended database according to
decreasing SI or HSI with the target.
The distribution of the ranks that the half-siblings obtained when the database was sorted according to decreasing SI or according to decreasing HSI had the
behaviour displayed in Figure 7. As the graph indicates, half-siblings are more
efficiently found with a HSI-based ranking than with a SI-based ranking, but nevertheless the SI-list does not perform very poorly.

Figure 7. Probability (%) for a half-sibling to obtain SI-rank and
HSI-rank at most n, in SGMPlus database, N = 100.000

25
20
15
With HSI

10
5

With SI

100

200

300

400

500

n

We also performed a simulation in which half-siblings were added to a database
consisting of 100.000 artificial 15-locus NGM profiles. The result, which is similar,
is displayed in Figure 8 below. We conclude from this that, if the database contains
a half-sibling but is only searched for siblings, then there is a quite non-negligible
probability that this half-sibling will be found in a sufficiently high position in
the SI-ranked list for it to be detectable. When additional DNA tests are done,
one should be aware of this possibility; the fact that target and database member
have different Y-STR profiles may then be used to infer that they cannot be full

FAMILIAL DNA DATABASE SEARCHING

17

siblings, but it must be taken into account that they may nonetheless still be
related as half-siblings, uncle-nephew, or (perhaps less likely in a DNA database)
grandparent-grandchild.
Figure 8. Probability for a half-sibling to obtain SI-rank and HSIrank at most n, in a database with 100.000 15-locus profiles

35
30
25
20
With HSI

15
10
With SI

5
50

100

150

200

250

300

n

5. Discussion
We have defined and investigated several search strategies that construct a subset from a database with DNA profiles in such a way that the probability that they
contain the relative of the target, if present in the database, with a certain minimum
probability. We end this article with a brief recapitulation of their main properties
and how this compares to other research published on familial searching. First,
there is the option to use or not to use prior probabilities. Using prior probabilities
has the advantage of also obtaining posterior probabilities, as specified in Proposition 2.1. It turns out that ranking according to posterior probability is the same
as ranking according to the a priori probability multiplied by the likelihood ratio.
Hence, in the case of a uniform prior, the database can simply be ranked according
to likelihood ratio. This is, of course, well known. What can also be derived from
this article however, is how much genetic similarity one expects by chance. Indeed,
whatever the database’s size, the type of relative, or the number of loci included
in the comparison, statistically one expects the sum of the likelihood ratios with
all database members to be equal to the number of people in the database, if it
does not contain a relative. This is also true for direct matches, but in that case
databases are too small compared to the obtainable likelihood ratios to see this
effect. In contrast, when looking for relatives, our simulation study shows that
for a database with 100,000 members and ten investigated loci, the observed total
likelihood ratio agrees well on average with this prediction. In casework, this can
give a practical check: if the sum of likelihood ratios is of comparable magnitude

18

KLAAS SLOOTEN AND RONALD MEESTER

as the database size, there is no strong indication for the presence of the target’s
relative. It does not matter if this total is obtained by one large likelihood ratio or
by several smaller ones.
If one does not use prior probabilities, then it is still possible to keep the probability with which the relative is detected under control by using the fact that the
likelihood ratios between the target and his relatives have a distribution that can
be derived from the target’s DNA profile. This means that a lab that carries out
familial searching can choose to fix either the desired probability of detection, the
minimum likelihood ratio that warrants additional testing, or the number of additionally tested individuals. This also is of course well known, but with the results
presented here one is able to derive the unfixed two parameters from the fixed one.
For example, a lab may decide to guarantee a certain probability of detection. If
it does so, the likelihood ratio threshold for additional DNA testing as well as the
number of additionally tested individuals will vary from case to case. They can be
computed or estimated before a search is carried out, which can be helpful in the
phase where the familial search details are discussed with the investigating authorities, as it will give a clear picture of what to expect. On the other hand, a lab may
decide to additionally test a fixed number of individuals in every familial search. If
it does so, then the results presented here allow to say what the probability is, in
a specific case, that a relative ranks sufficiently high.
We have also discussed the somewhat subtle relation between these two approaches. They are different, yet can have the same efficiency. The reason behind
this is that the target-centered method uses other information: admission of a
database member into Dα is on the basis of the likelihood ratio of that database
member alone, whereas for admission into Dα the product of that likelihood ratio
with the a priori probability has to be sufficiently big, in comparison to that of
the others. The probabilities for the relative to be found by both strategies have a
different frequentist interpretation: the conditional method uses more information
but needs resampled databases for its frequentist interpretation, and the targetcentered method uses less information but does not need resampled databases.
Finally, a good question is if one method seems preferable over another. There
does not seem to be, in our opinion, a definitive argument to prefer any of the
methods over the other one. As just pointed out, the conditional method has
the advantage of being able to deal with prior probabilities. Hence, if these are
definable, it makes sense to prefer this method. On the other hand, its probabilistic
interpretation is more complex. If no prior odds exist, then the target-centered
method has the advantage of having naturally interpretable probabilities, and the
expected outcome of a search can be simulated beforehand, since it only depends on
the size of the database and the amount of genetic information that it contains. It is
therefore very suitable to perform a case pre-assessment: one can obtain estimates
of how many individuals must be additionally tested, if one looks for a certain
type of relative with a certain probability. Indeed, all that is needed is the target
profile, so no comparisons with the actual database are required. Prior to having
obtained permission for a familial search, the target-centered method therefore
allows a feasibility study. Once permission has been obtained and the likelihood
ratios with the database have been computed, one can then use the conditional
method to take these into account. This allows, for example, to make statements
about the probability that a relative is found in the particular top-n at hand, as

FAMILIAL DNA DATABASE SEARCHING

19

opposed to what would a priori be expected, e.g. based on the results of sections
4.5 and 4.6.
Appendix A.
In this appendix we provide the proof of Proposition 2.1. Before doing so, we first
state some properties of general likelihood ratios which are probably well known,
but since we are unaware of an explicit reference, we include them with proofs as
well.
Proposition A.1. Suppose that for all e ∈ E we have
(A.1)

P (S = e) > 0 ⇒ P (G = e) > 0.

Then we have, for all x ≥ 0,
P (LR(S) = x)
= x.
P (LR(G) = x)
Proof. Denote the part of E on which the likelihood ratio takes value x by
Ex = {e ∈ E | LR(e) = x}.
We write
P (LR(S) = x)

=

X

P (S = e)

e∈Ex

=

X

LR(e)P (G = e)

e∈Ex

X

= x

P (G = e)

e∈Ex

= xP (LR(G) = x).

Proposition A.2. Under assumption (A.1) we have E(LR(G)) = 1.
Proof. We write
E(LR(G))

=

X

LR(e)P (G = e)

e∈E

=

X

P (S = e) = 1.

e∈E


Proposition A.2 can be interpreted as expressing that for every choice of likelihood ratio, there will always be chance matches (likelihood ratios in favour of S
whereas the data were generated by G), as long as (A.1) holds. Moreover, if we
expect fewer chance matches, then these matches will be stronger to the effect that
the expected likelihood ratio is constant.
Proof of Proposition 2.1. Recall that the Pi are independent random variables distributed either as S or as G, with exactly one of them distributed as S. The database
consists of individuals 1, . . . , N . We write D = (P1 , . . . , PN ) for the corresponding
random vector, and
LRD = (LR(P1 ), . . . , LR(PN )),

20

KLAAS SLOOTEN AND RONALD MEESTER

for the random vector representing the likelihood ratios that we obtain from the
database.
With this notation, we first prove (2.1). The required probability is equal to
P (LRD = r | R = i)P (R = i)
,
P (LRD = r)
which can be expanded as
P (LRD = r | R = i)P (R = i)
PN

k=1

P (LRD = r | R = k)P (R = k) + P (LRD = r | R ∈
/ D)P (R ∈
/ D)

.

Therefore, it is more attractive to consider the reciprocal, and we obtain
1
P (R = i | LRD = r)

=

N
X
P (LRD = r | R = k) P (R = k)
P (LRD = r | R = i) P (R = i)

k=1

+

P (LRD = r | R ∈
/ D) P (R ∈
/ D)
.
P (LRD = r | R = i) P (R = i)

Recall that all Pi are conditionally independent given R. This means that the last
expression reduces to
N
X
P (LR(Pi ) = ri | R = k) P (LR(Pk ) = rk | R = k) P (R = k)
+
P (LR(Pi ) = ri | R = i) P (LR(Pk ) = rk | R = i) P (R = i)

k=1

+

P (LR(Pi ) = ri | R ∈
/ D) P (R ∈
/ D)
.
P (LR(Pi ) = ri | R = i) P (R = i)

We claim that for k 6= i, we have
P (LR(Pi ) = ri | R = k)
1
=
P (LR(Pi ) = ri | R = i)
ri

(A.2)
and

P (LR(Pk ) = rk | R = k)
= rk .
P (LR(Pk ) = rk | R = i)

(A.3)

To see this, note that given R = k, Pk is distributed as S, and Pi is distributed as
G, and then use Proposition A.1. For k = i, the corresponding term in the sum is
equal to 1. We can also apply Proposition A.1 to the last term since R ∈
/ D implies
that Pi is distributed as G. From all this it follows that
N

X rk P (R = k)
1
1 P (R ∈
/ D)
=
+
,
P (R = i | LRD = r)
ri P (R = i)
ri P (R = i)
k=1

and (2.1) follows.
The proof of (2.2) is similar, we only sketch the difference with the proof of (2.1).
The probability in question is equal to
P (LRD = r | R = i)P (R = i)
,
P (LRD = r, R ∈ D)
which can be expanded as
P (LRD = r | R = i)P (R = i)
.
PN
k=1 P (LRD = r | R = k)P (R = k)
From this point on, the proof proceeds as above.

FAMILIAL DNA DATABASE SEARCHING

21

References
[1] F.R. Bieber, C.H. Brenner, and D. Lazer, Finding Criminals Through DNA of Their Relatives, Science 312 (2006), 1315–6.
[2] D. Cavallini and F. Corradi, Forensic identification of relatives of individuals included in a
database of DNA profiles, Biometrika 93 (2006), 525–536.
[3] Y.-K. Chung, Y.-Q. Hu, and W.K. Fung, Evaluation of DNA mixtures from Database Search,
Biometrics 66 (2010), 233–238.
[4]
, Familial database dearch on two-person mixture, Computational Statistics and Data
Analysis 54 (2010), 2046–2051.
[5] S. Cowen and J. Thomson, A likelihood ratio approach to familial searching of large DNA
databases, Forensic Sc. Int.: Gen. Suppl. Ser. 1 (2008), 164–167.
[6] J.M. Curran and J.S. Buckleton, Effectiveness of familial searches, Science and Justice 84
(2008), 164–7.
[7] J. Ge, R. Chakraborty, A. Eisenberg, et al., Comparisons of Familial DNA Database Searching Strategies, J. For. Sc. in press (2011).
[8] T. Hicks, F. Taroni, J. Curran, et al., Use of DNA profiles for investigation using a simulated
national DNA database: Part II. Statistical and ethical considerations on familial searching,
For. Sc. Int.:Genetics 4 (2010), no. 5, 232–8.
[9] G. Miller, Familial DNA Testing Scores a Win in Serial Killer Case, Science 329 (2010),
262.
[10] S. Myers et al., Searching for first-degree familial relationships in California’s offender DNA
database: Validation of a likelihood ratio-based approach, For. Sc. Int.: Gen. 5 (2011), no. 5,
493–500.
[11] Scientific Working Group on DNA Analysis Methods Ad Hoc Committee on Partial Matches,
SWGDAM Recommendations to the FBI Director on the “Interim Plan for the Release of
Information in the Event of a ‘Partial Match’ at NDIS”, For. Sc. Comm. 11 (2009), no. 4.
[12] M. Sjerps and A.D. Kloosterman, On the consequences of DNA profile mismatches for close
relatives of the suspect, Int. J. Legal Med. 112 (1999), 176–180.
[13] K. Slooten and R. Meester, Forensic Identification: the Island Problem and its generalizations, Stat. Neerl. 65 (2011), 202–237.
Netherlands Forensic Institute, P.O. Box 24044, 2490 AA The Hague, The Netherlands
E-mail address: k.slooten@nfi.minvenj.nl
VU University Amsterdam, De Boelelaan 1081, 1081 HV Amsterdam, The Netherlands
E-mail address: rmeester@few.vu.nl

