Stochastic Continuous Time Neurite Branching Models with Tree and Segment
Dependent Rates
Ronald A.J. van Elburg∗
Department of Artificial Intelligence, Faculty of Mathematics and Natural Sciences,
University of Groningen, P.O. Box 72, 9700 AB, Groningen, The Netherlands

arXiv:1010.0605v2 [q-bio.NC] 10 Jan 2011

(Dated: 4 October 2010)
In this paper we introduce a continuous time stochastic neurite branching model closely
related to the discrete time stochastic BES-model. The discrete time BES-model is underlying current attempts to simulate cortical development, but is difficult to analyze. The new
continuous time formulation facilitates analytical treatment thus allowing us to examine the
structure of the model more closely. We derive explicit expressions for the time dependent
probabilities p(γ, t) for finding a tree γ at time t, valid for arbitrary continuous time branching models with tree and segment dependent branching rates. We show, for the specific
case of the continuous time BES-model, that as expected from our model formulation, the
sums needed to evaluate expectation values of functions of the terminal segment number
µ(f (n), t) do not depend on the distribution of the total branching probability over the terminal segments. In addition, we derive a system of differential equations for the probabilities
p(n, t) of finding n terminal segments at time t. For the continuous BES-model, this system of differential equations gives direct numerical access to functions only depending on
the number of terminal segments, and we use this to evaluate the development of the mean
and standard deviation of the number of terminal segments at a time t. For comparison we
discuss two cases where mean and variance of the number of terminal segments are exactly
solvable. Then we discuss the numerical evaluation of the S-dependence of the solutions for
the continuous time BES-model. The numerical results show clearly that higher S values,
i.e. values such that more proximal terminal segments have higher branching rates than
more distal terminal segments, lead to more symmetrical trees as measured by three tree
symmetry indicators.
Keywords:

neurite , dendrite , neurite branching , dendritic branching , BES , branching point

process

∗

Electronic address: RonaldAJ(at)vanelburg.eu

2
Contents

I. Introduction

2

II. Model and Analysis

5

A. The BES-model in discrete and continuous time and the π, ρ-model

5

B. Probability of finding a specific branching history

8

C. Exclusively terminal segment number dependent whole tree branching rates

11

D. Exactly solvable cases of terminal segment number development

13

E. Evaluating π-dependence

15

III. Numerical Results

22

A. E-dependencies

22

B. S-dependencies

25

IV. Discussion

28

A. Details of the π, ρ-model

30

1. Exact I(B, t) and p(B, t)

30

2. I(B, t) for general π, ρ-models

32

B. Limitations to the analysis of the discrete time BES-model

32

1. The case of E = 0, S = 0

32

2. General case with explicit time dependence

34

Acknowledgments

37

References

37

I.

INTRODUCTION

Trees appear in many areas of science. If we limit ourselves to some examples of naturally
occurring tree-like structures we find streams (rivers, creeks) in geology (e.g. Horton [21], Shreve
[30]), actual trees and shrubs in botany (e.g. Bell et al. [5], de Reffye and Houllier [9], Godin
et al. [14], Sismilich et al. [31]) and axon and dendrites in neuroanatomy (e.g. Ascoli [1], Devaud
et al. [11], Dityatev et al. [12], van Pelt and Schierwagen [35], Verwer and van Pelt [45]). For our
purpose, which includes the description of both the temporal development of the tree population

3
and the resulting final population, there is an important distinction between streams on the one
hand and plants and neurites on the other hand. River networks are the result of a merging of
streams originating from independent sources. Plants and neurites, however, grow from the root
and are the result of branching and pruning. We develop our formalism for the latter, i.e. processes
where tree-like structures grow from an initial root-like element.
Modeling dendritic and axonal morphology is a field of growing interest in computational neuroscience and has led to the formulation of several types of models: statistical population models
(Ascoli [1], Nowakowski et al. [27], Samsonovich and Ascoli [29], van Veen and van Pelt [43]), Lindenmayer or L-systems (Ascoli and Krichmar [2], Torben-Nielsen et al. [32]), biophysical models
(Graham and van Ooyen [15], Hely et al. [18], Hentschel and Fine [19], Hentschel and Van Ooyen
[20], Kiddie et al. [23]), and stochastic growth models (Kliemann [25], Uemura et al. [33], van Pelt
et al. [41]). These models and their extensions are also underlying current attempts at large scale
modeling of cortical structures (Eberhard et al. [13], Koene et al. [26], Zubler and Douglas [48]).
Exact solutions provide a solid reference against which aspects of the algorithms generating the
neuronal morphologies for these large scale network models can be tested.
The BES-model, whose name derives from the symbols used for its main parameters, was
proposed by van Pelt et al. [41, 42] and is the main topic of this paper. The BES-model was
developed as a stochastic description of the process of neurite outgrowth. The goal of the BESmodel is to capture not only the composition of the final population of trees but also its temporal
development. Here we develop the mathematical and computational tools for the evaluation of this
and more general models of branching trees and try to elucidate the structure of these models. The
BES-model is a conceptual merger between the BE-model describing the temporal development
of the number of terminal segments and the S-model describing the competition between between
terminal segments. It has been shown by Villacorta et al. [46] that the outcomes of the BES-model
cannot be factorized into an S-model and a BE-model contribution, thereby challenging the idea
that the BES-model is a valid combination of the two. The reason this factorization fails probably
lies in the fact that multiple branching events can take place in a single time step. In our treatment
of the BES-model, in which we reformulate the model in continuous time, we will show that the
dependency on the B and E parameter can be separated from the dependency on the S parameter
and that therefore a factorization into a BE-model and an S-model is actually possible. This leads
us to the very generic idea of π, ρ-models in which π stands for the dependence of branching rates
on the location of the terminal segment in the tree and where ρ captures the overall branching
probability of a tree.

4
In biology branching processes are often studied for the description of population dynamics.
This is a tradition which dates back to the early work of Galton and Watson on the survival of
family names. There is a natural link between branching processes and trees as the description
of the history of a branching process constitutes a tree. The theory describing the composition
and number of terminal segments in branching processes is well developed (Asmussen and Hering
[3], Athreya and Ney [4], Kimmel and Axelrod [24]). Unfortunately for our purposes this focus on
the composition and number of terminal segments disregards the history of the individual branching
process. As a result relations between parent and children are only used to describe the passage
from one generation to the other. For branching biological processes like dendrites or axons and
also for real trees the current shape of the tree is a direct reflection of its history and the different
branching events it experienced. Hence keeping track of the individual histories becomes important
and the main objective of this paper is to show how this can be achieved correctly and efficiently in
those cases where only the terminal segments of the tree can branch. The more general π, ρ-model
which we use in our analysis can include intermediate segment branching as well.
We develop the theory for the continuous time BES-model from that of the Poisson process
(Cox and Lewis [8], Dehling and Kalma [10]) by including branching into the Poisson process. The
terminology ‘branching Poisson process’ has been used before to describe interactions between two
or more Poisson processes in which events in one process influence the Poisson rate in the other
process. These Hawkes branching point processes (Hawkes [17]) are suited to model the interaction
between firing rates in different populations of cells (Cardanobile and Rotter [6], Chornoboy et al.
[7], Johnson [22]) or the influence of a large earth quake on the incidence rates of small earth quakes
and vice versa (Veen and Schoenberg [44], Zhuang [47]). Hawkes branching point processes deal
with a limited set of mutually interacting Poisson processes. In tree growth, on the other hand,
every branching event is a transition from one stochastic process to another and not a repetition in
a chain of equivalent events. The important shared aspect between the theory of Poisson processes
and the theory of branching trees in continuous time are the probability density functions used to
describe branching and survival of tree segments.

5
II.
A.

MODEL AND ANALYSIS

The BES-model in discrete and continuous time and the π, ρ-model

In the topological view on branching which we use here a segment is defined purely on the
basis of the topological properties, i.e. a segment is part of the tree that connects two branch
points (intermediate segments), or it connects the root point to the first branch point (initial or
root segment) or a branch point to a terminal point (terminal segment). We limit our treatment
to binary trees, for these trees given a total number of terminal segments n the total number of
segments including intermediate and root segments is 2n − 1. When we evaluate the mean of
the number of terminal segments and and its variance, this choice of n limits our need for extra
multiplication factors and additions and thereby simplifies our calculations.
As pointed out before the original BES-model was proposed van Pelt et al. [41, 42] as a stochastic model for describing changes in dendritic topology during neurite outgrowth and has been
successfully applied to categorizing morphological data (Dityatev et al. [12], van Pelt et al. [42]).
The BES-model uses the parameters B,E, and S to set the branch probability ps,γ per time step
∆t of an individual terminal segment s in a binary tree γ. Let us introduce these parameters. The
parameter B sets the probability of branching for a tree with only one single terminal segment.
The other two parameters are used to relate the branching probability of a terminal segment s
in an arbitrary tree γ to B while intermediate segments don’t show branching in the BES-model.
The overall probability ργ of a tree γ to branch depends on the number of terminal segments nγ
and is given by
ργ = Bnγ(1−E) .

(1)

This probability is distributed over the different terminal segments s depending on their centrifugal
order νs , where the centrifugal order counts the number of segments separating the tip of a segment
from the root point. Given that a tree γ branches, the probability πs that this will take place at a
terminal segment s is given by:
πs =

X
2−Sνs
with Cγ =
2−Sνs .
Cγ
s∈γ

(2)

Combining π and ρ we obtain for the branch probability ps,γ :
ps,γ = ργ πs = Bnγ(1−E)

2−Sνs
,
Cγ

(3)

6
with, because we are dealing with probabilities, ργ , πs ≥ 0 for all trees and segments. We have to
point out here that we, contrary to the original formulation of van Pelt, have moved the terminal
number dependence out of the normalization factor and made it explicit as an extra contribution
to the exponent of n, i.e. we write n1−E with Cγ , where van Pelt writes n−E , and uses C̃γ =

1
n γ Cγ

as a normalization constant. Our choice turns the centrifugal order dependence into a simple
distribution of the total branching probability over the terminal segments, i.e.

P

s∈γ

πs = 1. As

will become clear in this paper, our choice better captures the real structure of the problem.
We will call the BES-model as described above the discrete time BES-model (dBES-model),
because it can be seen as discretized version of the continuous time BES-model (cBES-model) which
we will introduce shortly. Our original transfer operator-based analysis of the dBES-model (see
appendix B) made us aware of the limitations of the discrete time formulation. In the discrete time
formulation the counting of different branching histories leading to a specific tree is complicated
by the presence of time steps without branching events. In addition the discrete time formulation
introduces a small S-dependence in the total branching probability of a single tree because it
affects the probability of finding more than one branching event in a time step. We then realized
that counting is much simpler in continuous time because we can limit ourselves to counting the
different orders in which terminal segments branch while the exact timing can be dealt with by
taking integrals over probability densities. It was this realization that counting histories in the
continuous time would be much simpler that led us to formulate and explore the continuous time
BES-model.
In the cBES-model tree growth is modeled as a branching Poisson process. Poisson processes are
characterized by rates instead of probabilities, and consequently the continuous time BES-model
specifies a branching rate for every terminal segment of a tree. This branching rate applies until
the next branching event takes place after which the new terminal segments and the surviving
terminal segments get new branching rates. The branch rates λs,γ are chosen in such a way that
to first order in the time step we get agreement with the discrete model,
λs,γ =

2−Sγs
B
ps,γ
= bn1−E
with b =
.
γ
∆t
Cγ
∆t

(4)

The probability p(γ, s, ∆t) that only the Poisson process associated with the terminal segment s
in the tree γ produced a single branching event can be obtained by integrating the corresponding
probability density. This probability density is a product of the probability densities for the
branching λs,γ e−λs,γ t of segment s and the survival

−λs,γ t
s′ 6=s e

Q

of segments other then s, and we

7
find that:
p(γ, s, ∆t) =

Z

∆t
0

= πs

λs,γ e−λs,γ t

Y

e−λs′ ,γ t dt

s′ 6=s

Z

∆t

0

ργ e−ργ t dt

= πs (1 − e−ργ ∆t )
= πs (ργ ∆t + h.o(∆t))
= ps + h.o(∆t).

(5)

There is a subtlety in this mapping which might easily go unnoticed. The dBES-model allows
synchronous branching of multiple segments, but with probabilities which are higher order in ∆t.
These higher order contributions are kept low by keeping B or equivalently ∆t small. We, however,
calculated ps,γ from λs,γ under the assumption that only the segment s branches. The cBES-model
allows for an analysis in which only direct transitions between trees differing by one branch event
take place, while analysis of the dBES-model needs to incorporate transitions between trees differing
by more than one branch event.
In a large part of our treatment of the cBES-model we only use part of the structure obtained.
To keep our results as general as possible it will therefore be advantageous to choose a notation
which fits this structure and which leads to a more abstract model, not limited to the cBES-model.
In this πs , ργ -model (or π, ρ-model for short) the whole tree branching rate ργ depends solely on
the tree and is then distributed over all terminal segments,
λs,γ = πs ργ ,
X

πs = 1.

(6)

s∈γ

Above we used the notation s ∈ γ to indicate that s is a terminal segment in the tree γ. Furthermore
because each λs,γ represents a rate we take each ργ ≥ 0 and each πs ≥ 0. The cBES-model is a
subclass of this set of models as is clear from the following identifications:
πs =

2−Sνs
,
Cγ

ργ = bn1−E
.
γ

(7)

We limited the π, ρ-model to terminal branching, but most results derived here apply equally well
to non-terminal branching.
We first use the general structure of the π, ρ-model to derive an expression for the probability
of finding a tree γ at a time t. We use this expression to prove that the mean µt (n) and the

8
variance σt2 (n) in the number of terminal segments at time t do not depend on πs , provided ργ is
only dependent on the number of terminal segments and not on the topology of a tree. For this
case we also derive differential equations for the probabilities p(n, t), i.e. the probability of finding
an arbitrary tree with n terminal segments at time t. We apply these methods to the cBES-model
and compare the mean µt (n) and the variance σt2 (n) found to known results and approximations
for the dBES-model. Then we develop efficient algorithms for the evaluation of πs -dependencies
for the cBES-model, and use these to evaluate the topology distribution.

B.

Probability of finding a specific branching history

Assuming that initially we start from the simplest tree, i.e. the tree with only one terminal
segment β1 , we want to calculate for a specific tree γ with a specified branching history B the
probability that it can be realized by the branching Poisson process and has not yet branched
further. We write a branching sequence B as,
B = (β1 , b1 , β2 , b2 , · · · , βn ),

(8)

where the bi indicate which terminal segment of the tree βi branched to obtain βi+1 as indicated
in the following branch history diagram:
b

bn−2

b

bn−1

1
2
β1 →
β2 →
· · · → βn−1 → βn .

(9)

Before we write down general expressions describing the probability of finding a branching sequence,
we describe how we can find the probabilities for two short sequences. First a sequence B2 =
(β1 , b1 , β2 ) leading from a tree with one terminal segment to a tree with two terminal segments
without further branching before time t2 happens with probability

p(B2 , t2 , t0 ) =
=

Z

t2
0

λb1 ,β1 e−λb1 ,β1 t1

= λb1 ,β1

Y

e−λs,β2 (t2 −t1 ) dt1

s∈β2

Z

t2
0

−ρβ t1 −ρβ (t2 −t1 )

e

1

e

2

dt1 .

(10)

The probability density used is the product of two parts: first the branching probability density of the initial tree λb1 ,β1 e−λb1 ,β1 t1 , and second the simultaneous survival probability density
Q

s∈β2



e−λs,β2 (t2 −t1 ) of the final tree’s segments from the moment of the first branching to the

9
end time. Notice that the redistribution of probability between the terminal segments of the final
tree does not influence the final probability for finding the tree. Next we determine the probability
of finding the branch sequence B2→3 = (β2 , b2 , β3 ) from a tree β2 with two terminal segments to a
tree β3 with three terminal segments over the time period t1 to t3 ,
p(B2→3 , t3 , t1 ) =
t3

Z

t1

λb2 ,β2 e−λb2 ,β2 (t2 −t1 )
e−λs,β2 (t2 −t1 )

Y

×

s∈β2 ,s6=b2

Y

×

e−λs,β3 (t3 −t2 ) dt2

s∈β3

= λb2 ,β2

Z

t3

−ρβ (t2 −t1 ) −ρβ (t3 −t2 )

e

e

2

3

t1

dt2 .
(11)

In the expression above we again find the survival probability density for the tree β3 from the last
branching event to the end exp(−

P

s∈β3

λs,β3 (t − t2 )) and the terminal segment b2 branching prob-

ability density λb2 ,β2 exp(−λb2 ,β2 (t2 − t1 )). In addition we need to include the survival probability
density exp(−

P

s∈β2 ,s6=b2

λs,β2 (t2 − t1 )) for the non-branching segments of the tree β2 . Integrating

this probability density over all intermediate branching times gives us the full transition probability. In a similar vein we can now express the probability B3 = (β1 , b1 , β2 , b2 , β3 ) that the branching
sequence had already taken place at the time t3 provided we had the tree β1 at time t0 = 0, by
taking the integral over the probability density for branching of the initial segment multiplied by
the probability that branching of terminal segment b2 will lead to the tree β3 ,
p(B3 , t3 , t0 ) =
=
=

Z

t3

t0
Z t3
t0

×

Z

λb1 ,β1 e−ρβ1 (t1 −t0 ) p(B2→3 , t3 , t1 )dt1
dt1 λb1 ,β1 e−ρβ1 (t1 −t0 )
t3

t1

−ρβ (t2 −t1 ) −ρβ (t3 −t1 )

dt2 λb2 ,β2 e

2

e

3

.
(12)

We can apply the same type of construction to larger tree histories as well. Using p(B, j, tn , tn−j )
for the probability that tree βn−j+1 develops during the time interval (tn−j , tn ) into the tree βn ,
we obtain
p(B, j, tn , tn−j ) =

10

λbn−j+1 ,βn−j+1

Z

tn

−ρβ

e

n−j+1

(tn−j+1 −tn−j )

tn−j

× p(B, j − 1, tn , tn−j+1 )dtn−j+1 ,
(13)
and by setting p(B, 1, tn , tn−1 ) to the survival probability of the final tree,
p(B, 1, tn , tn−1 ) = e−ρβn (tn −tn−1 ) ,

(14)

the recursion is correctly closed. From these recursion formulas we can see that the πbi ,βi dependencies can easily be split off by gathering them in what we call in anticipation of their role in the
cBES-model centrifugal order factors O(B, j),


O(B, j) = 

n−1
Y

i=n−j+1



πbi ,βi  .

(15)

We will make this split to facilitate our analysis of the π-dependence of tree probabilities and
expectation values. Splitting off the centrifugal order factor also leads to the introduction of a
new recursively defined object: the ρ-dependent integral factor I(B, t) only depending on ρβi ’s and
related to p(B, j, tn , tn−j ) by the relation
p(B, j, tn , tn−j ) =
O(B, j)I(B, j, tn , tn−j ).

(16)

The integral factor I(B, n, tn , t0 ) can now be found through solving the following recursion rules
derived from the recursion defined in equations 13 and 14,
I(B, j, tn , tn−j ) =
ρn−j+1

Z

tn

e−ρn−j+1 (tn−j+1 −tn−j )

tn−j

× I(B, j − 1, tn , tn−j+1 )dtn−j+1 ,

(17)

where we introduced ρn−j+1 to abbreviate ρβn−j+1 . The recursion is terminated by the following
condition,
I(B, 1, tn , tn−1 ) = p(B, 1, tn , tn−1 ).

(18)

The notation used so far contains the bare minimum for the manipulation of the integrals in the
recursion relations. As we are, however, mainly interested in probabilities at time t, we will use
a reduced notation and write p(B, t) = p(B, n, tn = t, t0 = 0) for the probability of finding a tree

11
with history B at time t. The integral I(B, n, tn , t0 ) is independent of the πs and only depends
on the ργ . In the cBES-model these ργ ’s depend solely on the number of terminal segments nγ .
Instead of writing I(B, t) we will therefore use I(n, t) for I(B, n, tn = t, t0 = 0) when dealing with
models for which the ργ ’s depend exclusively on the number of terminal segments. The centrifugal
order factors are time-independent by definition and therefore contain no reference to time. If we
use the full branching history we will write O(B) for O(B, n) dropping the explicit reference to the
number of included branching steps.

C.

Exclusively terminal segment number dependent whole tree branching rates

In the cBES-model and other models for which the whole tree branching rates ρ’s depend
exclusively on the number of terminal segments, the probability p(n, t) that an arbitrary tree at
time t has n terminal segments is by construction independent of π, because the total branch
rate does not depend on tree topology. The sum of all probabilities contributing to p(n, t) should
therefore also be π-independent:
p(n, t) =

X

p(γ, t)

γ|nγ =n

= I(n, t)

X

X

O(B).

(19)

γ|nγ =n B∈Hγ

Here we introduced p(γ, t) as the total probability of finding the tree γ at time t. We can express
p(γ, t) as the sum over the set Hγ containing all branching histories leading to the tree γ,
p(γ, t) =

X

p(B, t),

(20)

B∈Hγ

and we used the factorization into a π-dependent and a π-independent part from equation 16.
Furthermore, we know that if the ρ’s depend exclusively on the number of terminal segments, all
branching histories leading to n terminals use the same sequence of ρ values and therefore they
lead to the same value of I(B, t) which we therefore write as I(n, t). To check directly that p(n, t)
is independent from π we evaluate the double sum over centrifugal order factors O(B). To achieve
this we first change from summing over trees and their branch sequences to summing over terminal
segments. Observe that every branching sequence of n − 1 branch events occurs once, so we can
replace the double sum by a single sum over branch sequences containing n − 1 branch events after
which a tree γB with n terminal segments results,
X

X

γ|nγ =n B∈Hγ

O(B) =

X

B|n(γB )=n

O(B)

(21)

12
This sum can be replaced by the sum over all branching sequences that are one branch event shorter
but with every contribution multiplied by the sum over the branch rates of the terminal segments
of the tree resulting from the shorter branch sequence. If we repeat this step until we are left with
the root segment we see that what remains is a π-independent and equal to 1,
X

O(B)

B|n(γB )=n

X

=

B|n(γB )=n−1

=

X




n−2
Y

πbj ,βj

j=1

X

s∈βn−1

O(B)



πs,βn−1 

B|n(γB )=n−1

= 1

(22)

Putting this back into equation 19 we find
p(n, t) = I(n, t).

(23)

and therefore combining this with equation 16 we can now express p(γ, t) simply as,
X

p(γ, t) = I(n, t)

O(B).

(24)

B∈Hγ

This relation states that in the cBES-model and other models for which the ρ’s depend exclusively
on the number of terminal segments, the probability of finding a tree is a fixed part of the total
probability of finding trees with the same number of terminal segments. In other words if n(γ) =
n(γ ′ ) then the ratio p(γ, t)/p(γ ′ , t) is time independent.
A further direct consequence of the above is that expectation values of functions f which are
exclusively dependent on the number of terminal segments of trees are also π-independent,
µ(f (nγ ), t) =
=

X

f (nγ )p(γ, t)

γ
n=∞
X

f (n)I(n, t).

(25)

n=1

This has the important consequence that moments µ(nx ) of n are π-independent and therefore
contain no information about the redistribution of the total branching rate over the terminal
segments.
For numerical evaluation we will need the dynamics of the probability p(n, t) of finding a tree
in the subpopulation of trees with n terminal segments. Under the assumption used above the rate
at which trees leave this subpopulation is independent of the particular tree and proportional to ρn

13
and the size of the subpopulation p(n, t)Npopulation with Npopulation equal to the total population
size. We find, therefore, that the rate at which trees leave the n and enter the n + 1 terminal
segment subpopulation is equal to ρn p(n, t)Npopulation . On the other hand the rate at which trees
join the n and leave the n − 1 terminal segment subpopulation is given by ρn−1 p(n − 1, t)Npopulation .
Combining these two rates and dividing out the total population size Npopulation , we find that the
rate of change of p(n, t) is given by:
dp(n, t)
= ρn−1 p(n − 1, t) − ρn p(n, t),
dt

(26)

with (n ≥ 1). To suit our situation these equations need to be combined with appropriate initial
conditions. As before we assume that initially all trees have a single terminal segment p(1, 0) = 1,
p(n > 1, t) = 0 and that the total number of trees is conserved, which we ensure by setting ρ0 = 0
and p(0, t) = 0 to prevent us from creating new trees.

D.

Exactly solvable cases of terminal segment number development

Here we will show that for the cBES-model we can obtain exact solutions for E = 0 or E = 1
irrespective of the value of S. In the appendix we show that the dBES-model can be solved for
these values of E aswell, but only when S = 0.
We use the rate equations for the p(n, t)’s to rewrite the time derivative of the mean and the
variance,
dµ(n)
=
dt
=
=
=
=

n=∞
X

n

n=1
n=∞
X

n=1
n=∞
X

dp(n)
dt

n(ρn−1 p(n − 1) − ρn p(n))
(n + 1)ρn p(n) −

n=0
n=∞
X

n=∞
X

nρn p(n)

n=1

ρn p(n) = µ(ρn )

n=1

(27)

and similarly,
dµ(n2 )
=
dt
=

n=∞
X
n=1

n2

dp(n)
dt

14

=
=
=

n=∞
X

n2 (ρn−1 p(n − 1) − ρn p(n))

n=1
n=∞
X

(n + 1)2 ρn p(n) −

n=0
n=∞
X

n=∞
X

n2 ρn p(n)

n=1

(2n + 1)ρn p(n)

n=1

= 2µ(nρn ) + µ(ρn )
(28)
and making the proper subtractions we get a differential equation for the temporal development
of the variance,
dσ 2 (n)
d
=
(µ(n2 ) − µ2 (n))
dt
dt
= 2µ(nρn ) + µ(ρn ) − 2µ(n)µ(ρn ).
(29)
For the cBES-model we obtain,
dµ(n)
= bµ(n1−E ),
dt
dσ 2 (n)
= 2bµ(n2−E ) + bµ(n1−E )
dt
−2bµ(n)µ(n1−E ).
(30)
In general this is not a closed system of equations but for E = 0 or E = 1 this system of equations
actually becomes a closed system. For E = 1 we obtain,
dµ(n)
= b,
dt
dσ 2 (n)
= b,
dt

(31)

with simple linear solutions,
µ(n, t) = µ0 + bt,
σ 2 (n, t) = σ02 + bt.

(32)

For E = 0 we obtain,
dµ(n)
= bµ(n),
dt
dσ 2 (n)
= 2bσ 2 (n) + bµ(n),
dt

(33)

15
with exponential solutions,
µ(n, t) = µ0 ebt ,
σ 2 (n, t) = (σ02 + µ0 )e2bt − µ0 ebt .

E.

(34)

Evaluating π-dependence

In our treatment until now we have given an explicit label to each terminal segment and thus
have treated our trees as labeled trees Harding [16]. For the description of the history of branching
dendritic trees this is correct as the individual terminal segments can be followed in time. For our
evaluation of the π-dependence we will, however, also use unlabeled trees. We will do this for two
reasons. The first follows from the typical data at which this analysis is aimed, i.e. reconstructed
dendritic trees, which have no natural labeling of the terminal segments associated with them.
The second reason is the strong reduction in the number of trees we obtain by using the unlabeled
trees in our algorithm achieving a strong reduction in computer memory usage. We will use the
unlabeled trees as equivalence classes on our labeled trees, i.e. we will say that those labeled trees
which are related to each other by rotating the subtrees around branching points have the same
topology, which we then describe by an unlabeled tree. To make the distinction clear we will use a
tilde to denote such equivalence classes, i.e. γ̃ denotes an equivalence class or unlabeled tree and
γ denotes a labeled tree.
The summed centrifugal order factor O(γ) for a labeled tree γ is given by,
O(γ) =

X

O(B).

(35)

B∈Hγ

We would like to calculate this quantity without explicitly constructing all histories. That is, we
shall express it in the summed centrifugal factors of those trees that are directly preceding γ in the
histories Hγ leading up to γ. We introduce a new notation to show the feasibility of this idea. We
write P(γ) for the set of direct predecessors of a tree γ, and for πbj ,βj we write πβj+1 |βj (which for
the cBES-model is a valid notation because under the terminal growth hypothesis two subsequent
trees implicitly fix the terminal segment that branched). We use B −1 to denote the branching
sequence with the last branch event removed. This allows us to rewrite the previous expression as
O(γ) =

X

πγ|βn−1 O(B −1 )

B∈Hγ

=

X

γ ′ ∈P(γ)

X

B∈Hγ

βn−1 =γ ′

πγ|βn−1 O(B −1 )

16
E=0

E=0.50

0.2

n=1

n=1

n=1
Probability

E=1

n=6
n=11

n=6
0.1

n=6

n=11
n=11

0

0

2
time (1/b)

4

0

10
time (1/b)

20

0

10
time (1/b)

20

µ(n)
σ(n )

20

10

0
0

2
time (1/b)

4

0

5
time (1/b)

0

10
time (1/b)

20

1.1

30
Terminal segments

10

20

µ(n)
µ̃ (n)

10

E=0
E=0.25
E=0.50
E=0.75
E=1

Mean field / numerical

Terminal segments

30

1
0
0

5

10

15

20

25

0

time (1/b)

5

10

15

20

25

time (1/b)

FIG. 1: Temporal development in the cBES-Model. Top row: temporal development for the probabilities p(n, t) for n = 1, 6, 11, ..., 101 and three different values of E: E = 0 (left), E =

1
2

(middle) and

E = 1 (right) in all cases lower n-values lead to earlier p(n, t)-peaks, while late peaking traces might peak
outside the window shown. Middle row: expectation value and variance for the number of terminal segments for three different values of E (matching those in the top row) calculated using the first 1000 p(n, t)’s
while keeping phigh < 10−6 . Bottom row left: comparison expectation value (solid grey lines) with mean
field prediction (dashed black lines) for five different E values: E = 0, 0.25, 0.5, 0.75, 1; at E-values 0, 1 the
mean field solutions coincide with the exact solution. Bottom row right: comparison of mean field solution and numerical results; after an initial growth of the relative error for intermediate values of E , i.e.
E = 0.25, 0.5, 0.75, the relative error attenuates. The standard deviation and mean for E = 0 and E = 1
correspond within the numerical error with the exact solutions.

17
=

X

πγ|γ ′

X

πγ|γ ′ O(γ ′ ).

γ ′ ∈P(γ)

=

X

O(B −1 )

B∈Hγ

βn−1 =γ ′

(36)

γ ′ ∈P(γ)

To obtain the last line above we made use of the fact that every history leading up to a predecessor
tree γ ′ appears only once in Hγ .
To find the predecessors of the tree γ we express it in terms of its two subtrees γl and γr as
γ = (γl , γr ). Now the set of direct predecessors P(γ) of the tree γ can be found from the direct
predecessors of its subtrees as
P(γ) = P((γl , γr )) =


= 

[

ρ∈P(γl )





(ρ, γr ) ∪ 

[

ρ∈P(γr )



(γl , ρ) ,

(37)

provided we can find γ ′ = (γl , ρ) and γ ′ = (ρ, γr ). In other words, we now need a method to find
the information for a tree γ ′ from the knowledge we stored about its two subtrees. At this point the
fact that we will store and calculate the information based on unlabeled trees becomes important.
Before we continue with further details of the actual calculation, we therefore need to introduce
some relevant properties of unlabeled trees.
We use an enumeration of unlabeled trees devised by Harding [16] and first used for dendrites by
van Pelt and Verwer [39]. This enumeration corresponds with reverse lexicographical ordering (van
Elburg and van Ooyen [34]) and is the natural order in the recursive tree construction process that
we use in our algorithm. In this recursive construction process we construct trees with n terminals
from trees with a lower number of terminals, by first combining trees with n − 1 terminals with
trees with 1 terminal, then combining trees with n − 2 terminals with trees with 2-terminals and so
on. We stop this process after combining trees with (n + 1)/2 terminals with those with (n − 1)/2
terminals for an odd n and combining all unique pairs of trees with n/2 terminals for an even n.
Where the trees with the largest number of terminal segments are traversed in the outer loop and
the trees with the smaller number of terminal segments in the inner loop. If in these loops we
traverse the trees in their own order of construction then the order of construction of the larger
trees is entirely fixed. There is one important detail, when the subtrees have an equal number
of terminals, we avoid constructing the same topology twice by combining trees in the outer loop
with trees with a higher index in the inner loop. An unlabeled tree γ̃ is now fully characterized
by its number of terminal segments nγ̃ and its position in the construction order of trees with the

18
same number of terminal segments.
With the ordering above the index of an unlabeled tree γ̃ with n = nγ̃ can be related to the
indices of its subtrees γ̃l , γ˜r with γ̃l ≤ γ˜r by the following relation,
γ̃ = γ˜r +

n
X

Nj Nn−j

j=nl +1

(2Nnl − γ̃l )(γ̃l − 1)
− γ̃l
2
+(1 − δnl ,nr )(γ̃l − 1)Nnr ,

+δnl ,nr





(38)

where we identified the unlabeled tree with its index, i.e. γ̃ denotes both an unlabeled tree and
its index. We use Nx to denote the number of unlabeled trees with x terminal segments, δ to
denote the Kronecker delta function and nl to denote nγ˜l and nr to denote nγ˜r . We are now ready
to address the calculation of the centrifugal order factor, because equation 38 allows us to find
for a tree γ all the topologies of its direct predecessors from the topologies of its subtrees direct
predecessors.
We start by adapting the construction process of the unlabeled trees to set up the necessary
book-keeping. We shall use equation 36 to find the centrifugal order factor for a tree γ. For the
calculation of πγ|γ ′ = πb,γ ′ = 2−Sνb /Cγ ′ we need to know the centrifugal order of all the terminal
segments in γ ′ for the calculation of the normalization factor Cγ ′ =

P

b∈γ ′

2−Sνb , and we need to

have the centrifugal order of the branching terminal segment νb available separately. Now if we
have the tree γ = (γl , γr ) then the list of centrifugal orders of the set of its terminal segments is
related those of its subtrees as
[νb ]b∈γ = [νb + 1]b∈γl + [νb + 1]b∈γr ,

(39)

where we used square brackets to indicate the list of centrifugal orders, addition within square
brackets to indicate a change in values in the list, and addition outside the brackets to indicate the
joining of the two lists, while keeping all elements. In words, the centrifugal order of the terminal
segments of a tree corresponds to the centrifugal order of its subtrees increased by one, which is
the extra distance added by the new root element. For the calculation of the normalization factor
the order of these centrifugal orders is immaterial and the same holds for the calculation of factors
πγ|γ ′ . Furthermore, for each labeled tree corresponding to the same topology this list will contain
the same numbers with the same multiplicities. Therefore, we can store all necessary information
on the basis of topology, i.e. we can do the bookkeeping on the basis of the unlabeled trees as
[νb ]γ̃ := [νb + 1]γ̃l + [νb + 1]γ̃r .

(40)

19
Similarly we store for each unlabeled tree its direct predecessors and the centrifugal order of
the terminal segment whose branching connects the direct predecessor to the current tree in a list
as
[(νbγ|γ′ ), γ ′ ]γ ′ ∈P(γ) .

(41)

Admittedly, our notation becomes somewhat unwieldy here, but we need just one more line of it.
Provided lists like these are stored for the constituting subtrees γl , γr , we can calculate the list for
a tree γ using the following,
[(νbγ|γ′ ), γ ′ ]γ ′ ∈P(γ) =
[(νbγ |γ′ + 1, (γ ′ , γr ))]γ ′ ∈P(γl )
l

+[(νbγr |γ′ + 1, (γl , γ ′ ))]γ ′ ∈P(γr ) .

(42)

Again, we build these lists only once for every topology, i.e. we do the book-keeping on the basis of
unlabeled trees. We can now give the necessary list assignment in an informal shorthand notation
which hides some details which should be clear from the previous equation:
[(νb , γ̃ ′ )]γ̃ :=
[(νb + 1, (γ̃ ′ , γ̃r ))]γ̃l
+[(νb + 1, (γ̃l , γ̃ ′ ))]γ̃r .

(43)

When we execute this assignment we use the index relation given by equation 38 to replace the
specification of the direct predecessor trees in the indices of its subtrees, e.g. (γ̃l , γ̃ ′ ), by the index
of the topology of the direct predecessor itself.
In our current implementation we calculate the normalization constants and πγ|γ ′ using the list
mentioned before in which we stored information on centrifugal orders and direct predecessors.
When given a new value of S, our algorithm starts with calculating summed centrifugal order
factors for small tree topologies and then works towards topologies of larger and larger trees. To
achieve this the topologies are visited in the original construction order of the unlabeled trees.
When we arrive at a specific unlabeled tree we have the summed centrifugal order factors of all
its predecessors at our disposal. We also know the predecessors and the centrifugal orders of the
terminal segments that branched, and we can therefore calculate the centrifugal order factor for
the current topology using equation 36.
The summed centrifugal order factors we calculated represent the probability of finding a single
representative labeled tree corresponding to a topology. The probability of finding a topology is

20
therefore given by the product of the summed centrifugal order factor with the number of labeled
trees corresponding to this topology.
Branch sequences (each a

ma (γ) ha (γ)

continuation of 1 → 2(1, 1) )
3(2(1, 1), 1) → 4(3(2(1, 1), 1), 1)γ
3(2(1, 1), 1) → 4(3(1, 2(1, 1)), 1)
3(1, 2(1, 1)) → 4(1, 3(2(1, 1), 1))

m=4 h=1

3(1, 2(1, 1)) → 4(1, 3(1, 2(1, 1)))
3(1, 2(1, 1)) → 4(2(1, 1), 2(1, 1))γ
3(2(1, 1), 1) → 4(2(1, 1), 2(1, 1))γ

m=1 h=2

TABLE I: Possible histories for trees with 4 terminal segments and the resulting multiplicities and number
of histories. In the first column branch sequences are indicated and the resulting trees marked with γ denote
the form which we use to denote unlabeled trees. The second column indicates for the unlabeled tree in
the preceding column the multiplicity ma (γ), i.e. the number of different labeled trees corresponding to
the indicated unlabeled tree. The third column indicates the number of histories ha (γ) for a labeled tree
equivalent to the unlabeled tree. The number of histories for an unlabeled tree is equal to the product of
ma (γ) and ha (γ).

Let us now revisit the topic of unlabeled and labeled trees briefly and illustrate some of the
terminology with an appropriate notational device. We can describe the branching structure of
a tree by specifying at each segment starting from the root the number of terminal segments it
carries. The tree structure is captured by putting the segments in the subtrees in brackets after
the segment from which they bifurcate. For example, a tree with a single terminal segment is
simply denoted as 1. The unique tree with 2 terminal segments is denoted as 2(1,1). The labeled
trees with 3 terminal segments are 3(2(1,1),1) and 3(1,2(1,1))), but these correspond to a single
unlabeled tree, because the only difference is in the order of the two subtrees.
Table I shows all possible histories leading to trees with 4 terminal segments. This table also
shows that the unlabeled tree 4(3(2(1,1),1),1) has 3 alternative forms, i.e. there are 4 labeled
trees corresponding to this tree. For a general tree γ the multiplicity m(γ), i.e. the number of
equivalent trees (including the tree itself), is given by m(γ) = 2u(γ) where u(γ) denotes the number
of unbalanced nodes (van Pelt and Verwer [39]), meaning nodes at which the two subtrees have
different topologies. Alternatively, the multiplicity of a topology γ̃ with subtopologies γ̃l and γ̃r
springing from the root segment is given by,
m(γ̃) = m(γ̃l )m(γ̃r )2(1−δγ̃l ,γ̃r ) .

(44)

21
The tree 4(2(1,1),2(1,1)) has a multiplicity of 1 but it is the first tree which has more than one
possible history. In general the number of alternative histories can be calculated from the relation Harding [16],
h(γ) =

(nγ − 2)!
h(γl )h(γr ).
(nγl − 1)!(nγr − 1)!

(45)

This relation is a combinatorial consequence of the fact that when we combine histories of two
subtrees there are (nγl + nγr − 2)! possible orders in which we can select branching events from
the two histories. However, we are not free to choose the order in which we pick these events from
the two histories because in a branching history the order of events does matter. To correct for
this we need to divide this factor by the factors giving the number of forbidden permutations on
the subtree histories, i.e. we need to divide it by ((nγl − 1)!(nγr − 1)!). As the branching of the
root segment is always the first event to take place and it introduces no combinatorial factor, the
number of histories of a tree can simply be calculated from the product of the number of histories
of the constituting subtrees and this combinatorial factor.
These relations allow us to calculate the probability p(γ̃) of finding a topology γ̃ as
p(γ̃) = m(γ̃)O(γ̃).

(46)

We furthermore obtain two usefull constraints which can act as checks on our code,
X

p(γ̃) = 1,

(47)

m(γ̃)h(γ̃) = (n − 1)!,

(48)

γ̃|n(γ̃)=n

and
X

γ̃|n(γ̃)=n

where h(γ̃) is the number of histories of a single labeled tree corresponding to the topology γ̃.
A further acceleration of our calculations can be achieved using the following recursive relations
for normalization constants and πγ|γ ′ ’s:
Cγ =

X

e−Sνb

b∈γ

=

X

b∈γl
−S

= e

e−S(νb +1) +

X

e−S(νb +1)

b∈γr

(Cγl + Cγr ),
(49)

22
and
−Sνb

πγ|γ ′ =

γ|γ ′

e

Cγ ′
−S(νb

= δγl γl′

′
γr |γr

e

+1)

e−S (Cγl′ + Cγr′ )
−S(νb

+δγr γr′
=

e

+1)
γl |γ ′
l

e−S (Cγl′ + Cγr′ )

δγl γl′ Cγr′ πγr |γr′ + δγr γr′ Cγl′ πγl |γl′
Cγl′ + Cγr′

.

(50)

The impact of using these recursive relations on memory usage is probably limited because the
storing of centrifugal order is replaced by the storing the same number of factors πγ|γ ′ . As at present
the limiting factor in our analysis of S-dependence lies in memory usage, we did not implement
this improvement in our current code.
The

code

for

this

paper

is

available

from

ModelDB

at

http://senselab.med.yale.edu/modeldb via accession number 129071.

III.

NUMERICAL RESULTS

Although the main results of this paper are mathematical and algorithmical in nature, we
developed and implemented all the tools needed for the numerical evaluation. This section describes
these. Because there is a natural split between E-dependency and S-dependency we will discuss
these results separately. The B-dependency is not discussed as it can be adjusted by simply
making another choice of time units. In all results discussed below we have therefore used b = 1
for simplicity.

A.

E-dependencies

For low values of n we can numerically solve the system of differential equations that we derived
for the p(n, t)’s:
dp(n, t)
= ρn−1 p(n − 1, t) − ρn p(n, t),
dt

(51)

with 0 < n < M . The highest value of n for which we can compute p(n, t) is determined by the
available memory. This restricts the possibilities to calculate the mean and variance of the number
of terminal segments when we try to evaluate longer development times. In particular we are

23
1

N = 11
S=1

S=1

Probability

S=1

0

S = −1

S = −1

16.6

17

17.4

0

17.8

2

4

6

S = −1

8

0

0.5

1

1

N = 17
S=1

S=1

Probability

S=1

0

S = −1

26
1

S = −1

0

27

5

10

S = −1

15

0

0.5

1

1

N = 23

S=1

S=1

Probability

S=1

0

S = −1

34
35
36
37
Summed Electrotonic Pathlengths

S = −1

S = −1

0

0

4

8
12
Log Multiplicity
2

16

20

0

0.5
Tree Asymmetry Index

1

FIG. 2: S-dependence cBES-Model. Distribution of probability over the trees for different values of the
S parameter and for different numbers of terminal segments. Top row: graphs for eleven terminal segments
(N = 11). Middle Row: graphs for seventeen terminal segments (N = 17). Bottom row: graphs for
twenty three terminal segments (N = 23). Left column: distribution of probability over different summed
electrotonic path lengths. Middle column: distribution of probability over the logarithm of multiplicity or
equivalently number of unbalanced branch points. Right column: distribution of probabilities over the tree
asymmetry index. In all graphs S varies from −1 to 1 with steps of 0.25. The S = −1 distribution is not
offset, but all other distributions have offsets which are increased in steps of 0.08. The visible difference in
smoothness between the graphs in the different rows is partly due to the number of trees for the different N
values, which are 207, 24631 and 3626149 for N = 11, N = 17 and N = 23, respectively. In all graphs the
S = 0.5 distribution is indicated with filled symbols to act as an extra landmark.

24
limited by the probability of finding n-values outside the range of values used during the numerical
integration of the differential equation, i.e. on phigh (t) =

P

n>M

p(n, t), with M the highest n-value

used. For the cBES-model the time at which phigh (t) reaches a predetermined threshold is mainly
determined by E. This is because given a range of n-values the stiffness of the set of equations
varies strongly with E: if we choose M = 1000 the rates ρn span three orders of magnitude at
E = 0 while they are all equal for E = 1. The stiffness of the E = 0 system severely limits
the possibility of lowering phigh (t) by enlarging the system of differential equations. We used the
ode15s method of Matlab (The Mathworks Inc., Natick, Massachusetts, USA) to integrate the stiff
differential equations for the first 1000 p(n, t)’s. We gathered the probability phigh (t) in a separate
variable, and kept this leak to higher n-values below 10−6 .
Let us first look at the development of the probabilities p(n, t) of finding trees with different
numbers of terminal segments. For different values of E these probabilities are shown in the top
row of figure 1. For E = 0 shown on the left we see a very fast spread of probability from small trees
to trees with more terminal segments. In fact we see that for the values shown the probability of
finding a tree with e.g. 6 terminal segments peaks before it crosses (if it ever crosses) the probability
of finding a tree with 1 segment. For all values of E shown the peak probabilities are reached later
for higher numbers of terminal segments. If we compare the different graphs we also see that as
expected the E = 0 case spreads fastest, followed by E = 0.5, while the slowest spreading case
shown is E = 1. If we look at peak heights we see that in the E = 1 case a large proportion of
the probability is concentrated in the peaking component and we can expect a small spread in the
number of terminal segments. In the E = 0 these peaks are much lower and we see that many
components are present with similar probabilities, which is indicative of a large spread.
In section II D we found exact results with which we can verify our numerical results for E = 0
and E = 1. For the numerically found mean values the exact expressions differ from the numerical
results by maximally 0.01% for the E = 0 case and less than 10−13 % for the E = 1 case. Similarly
for the standard deviations the maximal differences are smaller than 0.2% and 10−4 %, respectively.
In principle these errors can be further lowered by including extra p(n, t) values in the recursion,
but in the E = 0 case we expect that an exponentially growing number of p(n, t)’s needs to be
calculated for every time interval ∆t added. We expect that the numerical errors in the mean for
the other values of E between E = 0 and E = 1 are between the values just mentioned, so smaller
than 0.01% and larger than 10−13 %. The second row of figure 1 shows the actual development of
the mean number of terminal segments µ(n) and its standard deviation σ(n), and indeed we see
the effects expected on the basis of the first row of figures. Furthermore we see that except for the

25
case of E = 0 the standard deviation grows slower than the mean.
The errors in the mean number of terminal segments found above are so small that the numerical
solution can be used to evaluate the quality of the mean field approximation proposed by van
Pelt van Pelt and Uylings [37] in the context of the dBES-model. They suggested replacing µ(n1−E )
with µ(n)1−E in equation 30 leading to
dµ̃(n)
= bµ̃(n)1−E ,
dt

(52)

where we used a tilde to indicate the use of the mean field approximation. This equation is solved
for E 6= 0, µ0 > 0 and t > 0 by
1/E
µ̃(n) = (bt + µ̃E
.
0)

(53)

The bottom left graph of figure 1, shows a comparison between the mean field solutions and the
numerical solution, showing a visible discrepancy between the two, larger than the expected error
found in the numerical solution. Despite this visible difference, there is still reasonable agreement
between the mean field solution and the numerical solution. This agreement is further illustrated
in the bottom right graph which shows the ratio between the mean field solution and the numerical
solution. From this graph we see that for the values shown the relative error first increases and
then peaks at values below 10 % before it decreases. The graphs in the middle row of figure 1
show that for E = 0.5 the standard deviation grows slower than the mean. This observation might
explain why we see the mean field solution improve over time.

B.

S-dependencies

To start this section we restate one of our mathematical results. For a branching mechanism
for which the overall branching rate of a tree depends solely on the number of terminal segments,
two trees γ and γ ′ with an equal number of terminal segments n(γ) = n(γ ′ ) are found in a time
independent ratio, i.e for this situation p(γ, t)/p(γ ′ , t) is time independent. Therefore if the cBESmodel is a correct description the S-dependence can be evaluated at any point in time at which
sufficient number of trees of a given number of terminal segments are available.
In the left column of figure 2 the distributions are plotted against summed electrotonic path
length. To calculate an electrotonic path length we assumed a length of ls = λt for each segment
including intermediate segments, set the electrotonic length constant for the terminal segments all
to the same value λt and then calculated the electrotonic length constants for the other segments

26
related to the terminal segment electrotonic length by applying a branch power of R = 3/2,
q

λ(s) = λt n(s)1/R ,

(54)

where n(s) denotes the number of terminal segments in the subtrees connected to the segment s.
This equation incorporates both Rall’s power law (Rall [28]) and the dependence of the electrotonic
length constant on dendritic diameter. Rall’s power law relates the diameter of a dendritic segment
d(s) to the diameter of its daughter segments d(s1 ) and d(s2 ) through d(s)R = d(s1 )R + d(s2 )R .
The electrotonic length constant is given by λ =

p

drm /4ra where d is the dendritic radius , rm the

specific membrane resistance and ra the axial resistance. This gives every segment a dimensionless
electrotonic length of
λs =

ls
= n(s)−1/2R .
λ(s)

(55)

These dimensionless lengths are added together to a quantity Pst for all the segments in the path
from and including the root segment to and including the terminal segment st . Finally all the Pst ’s
are added together to form the summed electrotonic path length
SEP (γ) =

X

Pst .

(56)

st ∈γ

In general a symmetric tree obeying Rall’s branch power law will have a larger summed electrotonic
path length because the average dendritic segment is much thinner leading to a large electrical
separation between terminal segments and soma. With fixed segment lengths, terminal segment
diameter d and membrane resistance rm the actual values are not material to the comparison
between trees. We use the summed electrotonic path length to enable us to consistently compare
different morphologies in an electrophysiologically relevant way (van Elburg and van Ooyen [34])
without claiming to use realistic electrotonic lengths. The summed electrotonic path length values
were binned in 35 equal size bins between the maximum and the minimum values found for a given
number of terminal segments.
In the middle column of figure 2 the distributions are plotted against the number of unbalanced
branch points or equivalently the log of the multiplicity of the labeled tree corresponding to a single
topology. Here more symmetrical trees will lead to a low number of unbalanced branch points and
hence lower values correspond to higher symmetry. For the multiplicity we see all possible values
and no binning was applied.
In the right column of figure 2 the distributions are plotted against tree asymmetry index (van
Pelt and Schierwagen [35], van Pelt et al. [40]). The tree asymmetry index is given by taking the

27
mean of the partition asymmetries over all intermediate segments si in the tree γ:
A(γ) =

X
1
As .
n(γ) − 1 si ∈γ i

(57)

Where the partition asymmetry Asi for an intermediate segment si is given by comparing the
number of terminal segments in the two subtrees trees γl and γr through the expression,
Asi =

|n(γl ) − n(γr )|
.
n(γl ) + n(γr ) − 2

(58)

The values of the tree asymmetry index range from zero for perfectly symmetrical trees to close to
one for the most asymmetrical trees. The tree asymmetry values were binned in 20 equal size bins
between the maximum and the minimum values found for a given number of terminal segments.
For the multiplicity we show all possible values and no binning was necessary.
Figure 2 shows that when we increase the number of terminal segments from N = 11 in the
top row to N = 23 in the bottom row the distributions become smoother. This is due to the
strong increase in the number of trees with increasing terminal segment number. At S = 0 all trees
with the same number of terminal segments have the same probability and these curves therefore
indicate how the population of labeled trees is distributed over the underlying parameter if they
appear with equal probability. For N = 11 it is clearly visible that the population is not smoothly
distributed over the summed electrotonic path length and the tree asymmetry index. For the tree
asymmetry index even at N = 17 the distribution is not smooth, despite the presence of 24631
different topologies.
When we move from S = −1 to S = 1, i.e. from a situation in which more distal terminal
segments show higher branch rates to a situation where more proximal terminal segments show
higher branch rates, we see higher summed electrotonic path lengths, lower numbers of unbalanced
branch points and a lower tree asymmetry index. Although the three indicators we used in this
section differ in their detailed ordering of trees, these indicators do agree on the ordering of pairs
of trees which are widely separated and they all implement some notion of relative symmetry in
the topology of tree. (The code provided with this paper produces plots which allow readers to
compare these measures.) Thus, despite the local differences in the ordering of the trees, the results
in figure 2 show very clearly that increasing S decreases tree asymmetry as measured by the three
different indicators introduced above.

28
IV.

DISCUSSION

To describe neurite branching processes in continuous time seems more natural because in the
underlying biology there is no intrinsic time step. However, in evaluating the biological plausibility
of discrete time versus continuous time formulations we need to be more careful. In the continuous
time formulation information about a branching event is regarded as spreading instantaneously
over the whole tree. Whether this is a valid approximation is decided by the differences between
the relevant time scales. In principle some time passes before the increased demand for resources
at recently branched terminal segments influences the availability of resources at other terminal
segments. If the delays in resource availability correspond roughly with the time step used in the
discrete time model, then the discrete time model can capture some of the delay effects. This
requires however that the discrete time step is treated as a separate variable of the model. If
the delays in resource availability are short compared to the average interbranching time interval
then the continuous time formulation seems better fit for modeling branching. We can have a
closer look at this problem by comparing B with the time scale of potential rate-limiting processes.
Reported values for B in dendritic branching (e.g. van Pelt and Uylings [36], van Pelt et al. [41])
are in the order of 1 to 10 branching events per day. If, for example, we assume that diffusional
processes, which are generally considered to be slow, are rate limiting, then we can give some
order of magnitude estimates about the time involved in the spreading of resource limitations. We
first follow Hely et al. [18], they considered MAP2 to be rate limiting and used a slow diffusion
constant of 1 µm2 s−1 for MAP2. When we use this diffusion constant in a simple dimensional
analysis argument (Hentschel and Fine [19]) typical timescales needed to spread a change in MAP2
availability over a tree of size 100 µm found are on the order of t = (1 µm2 s−1 )(100 µm)2 = 104 s ≈
3 hours. In this scenario the discrete time model seems more appropriate. Even more so if we
consider applying the model to larger apical dendrites of cortical pyramidal neurons for which the
typical timescale by the same argument would be of the order of a full day. If on the other hand
we follow Hentschel and Fine [19] and assume a diffusion constant close to that of calcium to be
rate limiting and a similar dendritic size, then typical timescales are on the order of t = 10s. And
we would be lead to conclude that the continuous time model would be a better approximation.
As many of the underlying factors are at present unknown ultimately new experiments and more
detailed biophysical models should decide in which situations the different formulations are better.
It is, however, important to note that to our knowledge nobody has sofar singled out a conceptual
role for the size of the time step in the dBES-model.

29
Furthermore, the value and temporal development of the basal branching rate b are important
for comparison of our results with experimental data. Kliemann [25] showed how time dependence
of B can be modeled by modeling the branching process as a Galton-Watson process in a varying
environment, but did not include dependence on terminal segment number or centrifugal order.
Fortunately, in the cBES-model such a time-varying b(t) has no influence on the structure of the
model dynamics. In fact it is possible to solve the model assuming b = 1 and then calculate the
effective time T as the integrated basal branching rate T =

Rt
0

b(t)dt and use T instead of t in the

final expressions to capture time-varying basal branching rate. The reason that this is possible
is that in all our expressions t appears in combination with b, and bt =

Rt
0

b(t)dt for constant b.

This shows that we can take our integrals with respect to b(t) instead of t. For the dBES-model
temporal development of b(t) has been studied by van Pelt and Uylings [36] and they found that to
fit the experimental data a ‘rapidly and monotonically decreasing function of time’ is necessary. We
expect that this experimental result carries over to the cBES-model with perhaps minor parameter
changes.
Terminal segment branching without pruning is the main case we analyzed here. A large part
of our treatment, however, also applies to intermediate segment branching. Counting the number
of potential histories of a certain topology will be complicated by intermediate terminal branching,
but will still be tractable and one would be able to evaluate S-dependencies or π-dependencies.
The dependence on terminal segment number or ρ would be unchanged and can be evaluated in
the same way as we showed for the cBES-model. It would thus be possible to analyze models
like the centrifugal order dependent model by van Pelt and Verwer [38] with intermediate segment
branching. Including the pruning of terminal segments would pose serious problems to our analysis.
Evaluating the centrifugal order dependencies in the probability of the realization of a specific tree,
for example, would need a summation over an infinite number of histories and progress in this area
would require control over these infinite sums. In the presence of pruning the evaluation of functions
depending solely on the number of terminal segments under the assumption that ρ(γ) = ρ(nγ ) is
still possible using the techniques presented here. But extra assumptions will have to be made
about the creation and destruction of unbranched root segments. Including pruning does open the
possibility of a stable distribution without a rapidly and monotonically decreasing basal branch
rate. An initial investigation seems to indicate that in special cases equilibrium solutions for the
distribution of the number of terminal segments can be found using detailed balance. We are,
however, not aware of all the limitations of approaches using detailed balance and a thorough
knowledge of these limitations is necessary to carry out such an analysis to the full.

30
As indicated above experiments and more detailed biophysical models are needed for a comparison of the continuous and discrete time formulations in specific contexts. However, before such
comparisons can be made statistical tools need to be developed and/or implemented. Although the
development of such statistical tools is outside the scope of this paper we think that the results presented here are an important prerequisite. Furthermore, we think that the work presented here can
contribute to the further development of reliable neural network simulators based on stochastically
generated single cell morphologies.

Appendix A: Details of the π, ρ-model
1.

Exact I(B, t) and p(B, t)

We start this subsection with the derivation of explicit expressions for I(B, t) and p(B, t), for
two special cases, the first case being that of a constant ρn = b and the second case assuming that
all ρn for a particular branching sequence B are different, i.e. ρi 6= ρj if i 6= j . These explicit
expressions are given here because they played an important role in the inception phase of the
work presented in this paper and because they have a usefull structure which can facilitate future
work. The general case, which we will not discuss here because the cBES-model always gives rise
to one of the special cases discussed here, will be a complicated mixture of these two results. The
numerical methods we used for solving these systems of differential equations, although subject to
other limitations, are not sensitive to the essential difference underlying the exact analysis of the
two special cases.
We know from section II C that I(n, t) = p(n, t). For constant ρn = b (corresponding to the
E = 1 case in the cBES-model), we furthermore know that the distribution of branch events
in time is the same as encountered in an ordinary Poisson process, i.e. the number of branch
events during a time period is Poisson-distributed and therefore the number of terminal segments
is Poisson-distributed:
I(n, t) = p(n, t)
(bt)n−1
,
= exp(−bt)
(n − 1)!

(A1)

where ρn = b for all n. For the case where ρi 6= ρj if i 6= j, a condition which applies to the
cBES-model provided E 6= 1, we can derive explicit expressions for I(B, t) as well. All integrals we

31
encounter are of the following type:
tn

Z

e−ρn−j+1 (tn−j+1 −tn−j )

tn−j

× e−ρi (tn −tn−j+1 ) dtn−j+1

(A2)

with i > n − j + 1 . Evaluating this integral yields
S(B, i, n − j + 1)
×



e−ρn−j+1 (tn −tn−j ) − e−ρi (tn −tn−j )



(A3)

which is a sum over exponentials which are of the same type as the right factor in our integral,
except with the integration variable tn−j+1 replaced with tn−j and further contains a factor
1
.
ρi − ρj

S(B, i, j) =

(A4)

The next integration, if needed, is completely analogous to the one shown here but with j replaced
by j + 1. From this result we can distill the full result by making the following observations: both
limits of integration yield a factor S(i, n−j +1); the upper limit of integration comes with a change
in exponential, i.e. ρi gets replaced by ρn−j+1 ; the lower limit comes with an extra factor −1 and
as mentioned before tn−j+1 gets replaced with tn−j for both limits. If we keep contributions from
upper and lower limits to I(n, t) separated, the n−1 integrals in I(n, t) will lead to 2n−1 exponential
terms which are fully determined if we specify at which integrals we took the upper limit. If we
use the indices i of the integration variables dti to denote at which integrations we took the upper
limit, then the tuple u = (n, ..., 0), containing in descending order all the upper limits used to
arrive at the term and for technical reasons the opening and closing values u1 = n, ulast = 0, can
be used to express this term in S(B, i, j) as follows
Y

Y

(−1)

i<l(u)

(−S(B, ui , j))

(A5)

j|ui >j≥ui+1

where S is defined as before except for S(B, i, 0), which equals
S(B, i, 0) = e−ρi (tn −t0 ) .

(A6)

If we insert factors ρi from the recursion relation and sum over the set U (n − 1) which contains all
possible sequences of upper limits over n − 1 integrals, then we obtain the full integral,
I(B, t) =

n−1
Y
i=1

×

Y

i<l(u)

(−1)

ρi

!

X

u∈U (n−1)

Y

(−S(B, ui , j)).

j|ui >j≥ui+1

(A7)

32
2.

I(B, t) for general π, ρ-models

The systems of differential equations for p(n, t) used to find I(B, t) for those cases where ργ
solely depends on the number of terminal segments n can be used for general π, ρ-models as well.
Remember that the I(B, t) where explicitly introduced as π-independent mathematical objects,
but they have the additional property that they only depend on ρ values actually in the branching
sequence B. This seems a rather trivial observation but it has the important consequence that if
we can calculate I(B, t) for a π, ρ-model A and we know that another π, ρ-model B has the same
ρ-values in the branching sequence B, then we can calculate I(B, t) for model B by using model
B
A. In particular, we can define a model A by setting ρA
γ = ρβ

n(γ)

, i.e. we can pick A such that its

ρ-values depend solely on the number of terminal segments. Then, using model A, we have direct
correspondence between I(n, t) and p(n, t), or equivalently between I(B, t) and p(n, t). Therefore,
we can calculate the p(n, t) for a suitable model A and use these as the values for I(B, t). The
advantages of this approach to the calculation of I(B, t) and with it p(γ, t) are: we avoid the
complicated calculation of I(n, t) from the equations A1 and A7 derived in appendix A 1, we keep
numerical precision because the explicit equations A1 and A7 rely on an increasing number of
cancellations between small terms with increasing n, and the relation we found between I(n, t)
and p(n, t) is a more generic one not limited to the special cases discussed in the first part of this
section.

Appendix B: Limitations to the analysis of the discrete time BES-model

For comparison we also present here a novel analysis of the original discrete time BES-model
using a transfer operator formulation. This will help pinpoint in this model the obstacles towards
a more extensive exact treatment, which motivated us to study the continuous time model.

1.

The case of E = 0, S = 0

We start with the simple case E = 0, S = 0, B = p for two reasons. Firstly we need to make
clear the correspondences between model and notation. Secondly the textbook result (e.g. Dehling
and Kalma [10]),
µt = µ1 µt−1 ,
2
(σt )2 = µ21 σt−1
+ σ12 µt−1 ,

33
(B1)
on Galton-Watson processes is an important check on the more general result we will obtain later.
This textbook result relates average and variance at time t to those at t − 1 and those after
the first time step, where it was assumed that at t = 0 there is only one terminal segment. A
better interpretation without reference t = 1 is to interpret µ1 as the average offspring from a
terminal segment during one time step and σ12 as the variance therein. This interpretation allows
one to specify different initial tree topology probability distributions. To stress this preferred
interpretation we will write µs and σs instead of µ1 and σ1 .
In a Galton-Watson process the individuals in a population at time step t are the offspring of the
individuals at time step t − 1. Furthermore, an individual’s offspring is determined by a probability
law which is independent of its history and the number of individuals in the population. Although
when Watson conceived this problem, the main question was whether the population would die
out, in our case we model dendritic branching without pruning and as a result the population of
terminal segments will never die out.
For the case at hand the branching probability is independent of the tree topology and time,
and we simply have
pt (s, γ) = p.

(B2)

The full probability law changes as folows:
pd = 0,
pc = 1 − p,
pb = p.
(B3)
The subscripts d, c, b stand for dying (pruning), continuation and branching, respectively. We wish
to point out that we allow an individual to be among its own offspring. This important deviation
in comparison with static stochastic models (Devaud et al. [11], Kliemann [25]) is necessary to complete the mapping of our problem to a Galton-Watson process and is crucial to our interpretation
of the generation as the time step.
The probability generating function g(x) for branching of one terminal segment during a time
step becomes
g(x) = pd + pc x + pb x2 = (1 − p)x + px2 ,

(B4)

34
From this we obtain
µs = g′ (1) = 1 + p,
σs2 = g′′ (1) + g ′ (1) − g ′ (1)2
= 2p + (1 + p) − (1 + p)2 = p(1 − p).
(B5)
Assuming µ0 = 1, σ0 = 0 we get the following for the average temporal development:
µt = (1 + p)t .
If we look at the quantity νt = σt2 +

σs2
µs (µs −1) µt

(B6)

we can deduce from equation B1 that it has a very

simple time evolution,
νt = µ2s νt−1 .

(B7)

With the equation above we can also obtain the variance at time t:
σs2
µt
µs (µs − 1)
σs2
=
(µ2t − µts )
µs (µs − 1) s
= (1 − p)((1 + p)2t−1 − (1 + p)t−1 ).

σt2 = νt −

(B8)
Our analysis sofar cannot be applied to the more general problem because it is explicitly assumed
that the branching probabilities at every terminal are the same for all terminals during all time
steps. In the next subsection we wish to focus on the case where we have a free choice of E and S.

2.

General case with explicit time dependence

We will relate average and variation to functions of the distribution in the previous time step;
for the case of S = E = 0 we will find back equation B1. The key step is to describe the probability
of finding a tree γ at time t in terms of transition probabilities from other trees γ ′ ,
pt (γ) =

X

Tt (γ, γ ′ )pt−1 (γ ′ ).

(B9)

γ′

For our purposes it will be necessary to lump together some of the transition probabilities. To this
end we also introduce the following notation:
nγ =n
′

Tt (n, γ ) =

X

Tt (γ, γ ′ ).

γ

(B10)

35
Let us return to the definition of the average and the variance of the number of terminal
segments:
X

µt (n) =

nγ pt (γ),

γ

X

σt (n) =

(nγ − µt (n))2 pt (γ).

(B11)

γ

Using B9 we can cast µt in the form,
µt (n) =

XX
n

γ′

µt (n) =

X

nTt (n, γ ′ )pt−1 (γ ′ ).

(B12)

If we change the summation order we get
µt,γ ′ (n)pt−1 (γ ′ ),

(B13)

γ′

where
µt,γ (n) =

X

nTt (n, γ ′ )

(B14)

n

is the average of n at time t provided the tree γ ′ is the only tree present at time t − 1. We can now
easily calculate µt,γ (n) using the stochastic independence of branching events at different segments
of the tree:
µt,γ (n) =

X

µt,s (n)

s∈γ

=

X

(1 + pt (s, γ))

s∈γ

= nγ + Bn−E+1
.
γ

(B15)

Similarly, using the stochastic independence of the variances of branching events at different segments of the tree we can calculate µt,γ (n2 ):
µt,γ (n2 )
=

X

2
σt,s
(n) +

µ2t,s (n)

s∈γ

s∈γ

=

X

(pt (s, γ) − p2t (s, γ))

X

s∈γ



+

X
s∈γ

2

(1 + pt (s, γ))

= n2γ + Bn−E+1
+ 2Bn−E+2
γ
γ
+B 2 n−2E+2
γ

Cγ∗2
1−
Cγ2

!

,
(B16)

36
where Cγ∗2 is given by multiplying all the centrifugal orders in the definition of Cγ by a factor two:
Cγ∗2 =

X

2−2Sνs .

(B17)

s∈γ

Inserting these results into equation B13 for both µt (n), we find that the growth of µt equals a
moment of the distribution:
µt (n) − µt−1 (n) = Bµt−1 (n−E+1 ).

(B18)

We see that there are two special values for which this relation closes on itself and no other moments
of the distribution are needed. For E = 0 we get exponential growth:
µt (n) = (1 + B)t µ0 (n),

(B19)

µt (n) = µ0 (n) + tB.

(B20)

and for E = 1 we get linear growth:

From these equations we can immediately deduce that the S-dependence does not influence
the average growth during one time step, but depending on the values of E the change in the
distribution might influence the growth in a next time step. It is also clear from these formulas
that the variance and hence the distribution of probabilities after one time step do depend on S.
For the variance we obtain
σt2 (n) =

(µt,γ (n2 ) − µ2t (n))pt−1 (γ)

X
γ

2
= σt−1
(n) + 2B(µt−1 (n−E+2 )

−µt−1 (n)µt−1 (n−E+1 ))
2
+B 2 σt−1
(n−E+1 )

+Bµt−1 (n−E+1 )
2

−B µt−1

Cγ∗2
n−2E+2 2
Cγ

!

,
(B21)

This equation should yield the right Galton-Watson behavior if we choose S = E = 0. For S = 0
we have
1
Cγ∗2
=
2
Cγ
nγ

(B22)

37
and we obtain
σt2 (n) =
2
(1 + B)2 σt−1
(n) + (B − B 2 )µt−1 (n).

(B23)
which indeed corresponds with equation B1, because µ1 = µs = 1 + B and σ12 = σs2 = (B − B 2 ).
For S = 0, E = 1 we get
2
2
σt2 (n) = σt−1
(n) + B 2 σt−1
(1)

+2B(µt−1 (n) − µt−1 (n)µt−1 (1))
+Bµt−1 (1)
2

−B µt−1

Cγ∗2
Cγ2

!

2
= σt−1
(n) + B − B 2 µt−1 (n−1 ).

(B24)
From this we see that at these parameter values the growth of the variance for a population of
large trees will be nearly linear and for a population of small trees the growth of the variance will
be less than linear. For general S we have
0<

Cγ∗2
≤1
Cγ2

(B25)

and therefore for E = 1 the variance will have an upper bound σt2 (n) = σ02 (n) + Bt and a lower
bound σt2 (n) = σ02 (n) + (B − B 2 )t.

Acknowledgments

The author wishes to thank Jaap van Pelt for introducing him to this problem.

[1] G A Ascoli. Neuroanatomical algorithms for dendritic modelling. Network, 13(3):247–260, AUG 2002.
[2] G A Ascoli and J L Krichmar. L-neuron: A modeling tool for the efficient generation and parsimonious
description of dendritic morphology. Neurocomputing, 32:1003–1011, JUN 2000.
[3] S Asmussen and H Hering. Branching Processes. Birkhäusser, 1983.
[4] K B Athreya and P E Ney. Branching Processes. Springer (Berlin), 1970.

38

γ

labeled tree or its index

γ̃

unlabeled tree or its index

s

segment of a tree

νs

centrifugal order of segment s

λs,γ

branching rate of segment s in tree γ

ργ

total branching rate for tree γ

ρn

total branching rate for tree with n terminal segments

πs

part of total branching rate captured by segment s

πγ|γ ′

part of total branching rate captured by segment s whose branching leads from tree γ ′ to a tree γ

Cγ

normalization factor for S dependency

B

branching history

bi

branching event in branching history B

βi

tree in branching history B

Bi→j

subhistory of B leading from tree βi to tree βj

B

−1

branching history equal to B but with the last branch event removed.

p(B, j, tn , tn−j ) probability that βn−j went through j branching events between
tn−j and tn , leading to βn
p(n, t)

probability that a tree has n terminal segments at time t

I(B, j, tn , tn−j ) integral factor associated with p(B, j, tn , tn−j )
O(B, j), O(B) centrifugal order factors
P (γ)

set of direct predecessors of the tree γ

Hγ

set of all histories leading to the tree γ

h(γ)

number of histories of the tree γ

m(γ)

multiplicity of the tree γ

u(γ)

number of unbalanced nodes of the tree γ

A(γ)

tree asymmetry index for the tree γ

SEP (γ)

summed electrotonic path length for the tree γ
TABLE II: Important symbols used in this paper

[5] AD Bell, D Roberts, and A Smith. Branching patterns - simulation of plant architecture. J. Theor.
Biol., 81(2):351–375, 1979.
[6] S Cardanobile and S Rotter. Multiplicatively interacting point processes and applications to neural
modeling. J. Comp. Neurosci., 28(2):267–284, APR 2010. doi: 101007/s10827-009-0204-0.
[7] E S Chornoboy, L P Schramm, and A F Karr. Maximum-likelihood identification of neural point

39
process systems. Biol Cybern, 59(4-5):265–275, 1988.
[8] D R Cox and P A Lewis. The Statistical Analysis of Series of Events. Methuen & Co Ltd (London),
1966.
[9] P de Reffye and F Houllier. Modelling plant growth and architecture: Some recent advances and
applications to agronomy and forestry. Curr. Sci., 73(11):984–992, DEC 10 1997.
[10] H G Dehling and J N Kalma. Kansrekening,het zekere voor het onzekere. Epsilon Uitgaven (Utrecht),
1995.
[11] J M Devaud, B Quenet, J Gascuel, and C Masson. Statistical analysis and parsimonious modelling of
dendrograms of in vitro neurones. Bull. Math. Biol., 62(4):657–674, JUL 2000.
[12] A E Dityatev, N M Chmykhova, L Studer, O A Karamian, V M Kozhanov, and H P Clamann.
Comparison of the topology and growth rules of motoneuronal dendrites. J Comp. Neurol., 363(3):
505–516, DEC 18 1995.
[13] J P Eberhard, A. Wanner, and G Wittum. Neugen: A tool for the generation of realistic morphology
of cortical neurons and neural networks in 3D. Neurocomputing, 70(1-3):327–342, 2006.
[14] C Godin, E Costes, and H Sinoquet. A method for describing plant architecture which integrates
topology and geometry. Ann. Bot., 84(3):343–357, SEP 1999.
[15] B P Graham and A van Ooyen. Transport limited effects in a model of dendritic branching. J. Theor.
Biol., 230(3):421–432, OCT 7 2004. doi: {10.1016/j.jtbi.2004.06.007}.
[16] E F Harding. The probabilities of rooted tree-shapes generated by random bifurcation. Adv Appl
Probab, 3(1):pp 44–77, 1971. URL http://wwwjstororg/stable/1426329.
[17] A G Hawkes. Spectra of some self-exciting and mutually exciting point processes. Biometrika, 58(1):
83–90, 1971.
[18] T A Hely, B Graham, and A van Ooyen. A computational model of dendrite elongation and branching
based on MAP2 phosphorylation. J. Theor. Biol., 210(3):375–384, Jun 2001. doi: 10.1006/jtbi.2001.
2314.
[19] H G E Hentschel and A Fine. Diffusion-regulated control of cellular dendritic morphogenesis. Proc. R.
Soc. Lond., B, Biol. Sci., 263(1366):1–8, JAN 22 1996.
[20] H G E Hentschel and A Van Ooyen. Models of axon guidance and bundling during development.
Proceedings of the Royal Society B: Biological Sciences, 266(1434):2231–2238, 1999.
[21] R E Horton. Erosional development of streams and their drainage basins - hydrophysical approach to
quantitative morphology. Geol Soc Am Bull, 56(3):275–370, 1945.
[22] D H Johnson. Point process models of single-neuron discharges. J Comput Neurosci, 3(4):275–299,
DEC 1996.
[23] G Kiddie, D McLean, A van Ooyen, and B Graham. Biologically plausible models of neurite outgrowth.
Prog. Brain Res., 147:67–80, 2005.
[24] M Kimmel and D E Axelrod. Branching processes in biology. Springer (New York), 2002.
[25] W Kliemann. A stochastic dynamical model for the characterization of the geometrical structure of

40
dendritic processes. Bull. Math. Biol., 49(2):135–152, 1987.
[26] R A Koene, B Tijms, P van Hees, F Postma, A de Ridder, G J A Ramakers, J van Pelt, and A van Ooyen.
NETMORPH: a framework for the stochastic generation of large scale neuronal networks with realistic
neuron morphologies. Neuroinformatics, 7(3):195–210, Sep 2009. doi: 10.1007/s12021-009-9052-3.
[27] R S Nowakowski, N L Hayes, and M D Egger. Competitive interactions during dendritic growth - a
simple stochastic growth algorithm. Brain Res., 576(1):152–156, MAR 27 1992.
[28] W Rall. Branching dendritic trees and motoneuron membrane resistivity. Exp Neurol, 1:491–527, Nov
1959.
[29] A V Samsonovich and G A Ascoli.

Statistical determinants of dendritic morphology in hip-

pocampal pyramidal neurons: A hidden markov model. Hippocampus, 15(2):166–183, 2005. doi:
101002/hipo20041.
[30] R L Shreve. Statistical law of stream numbers. J. Geol., 74(1):17–, 1966.
[31] M Sismilich, M I Menzies, P W Gandar, P E Jameson, and J Clemens. Development of a mathematical
method for classifying and comparing tree architecture using parameters from a topological model of a
trifurcating botanical tree. J. Theor. Biol., 220(3):371–391, FEB 7 2003. doi: 101006/jtbi20033177.
[32] B Torben-Nielsen, S Vanderlooy, and E O Postma. Non-parametric algorithmic generation of neuronal
morphologies. Neuroinformatics, 6(4):257–277, DEC 2008. doi: 10.1007/s12021-008-9026-x.
[33] E Uemura, A Carriquiry, W Kliemann, and J Goodwin. Mathematical-modeling of dendritic growth
in-vitro. Brain Res., 671(2):187–194, FEB 13 1995.
[34] R A J van Elburg and A van Ooyen. Impact of dendritic size and dendritic topology on burst firing in
pyramidal cells. PLoS Comput. Biol., 6(5):e1000781, 2010. doi: 101371/journalpcbi1000781.
[35] J van Pelt and A Schierwagen. Morphological analysis and modeling of neuronal dendrites. Math
Biosci, 188(Sp. Iss. SI):147–155, MAR-APR 2004. doi: 10.1016/j.mbs.2003.08.006.
[36] J van Pelt and H B M Uylings. Branching rates and growth functions in the outgrowth of dendritic
branching patterns. Network, 13(3):261–281, Aug 2002.
[37] J van Pelt and H B M Uylings. Modeling Biology–Structures, Behaviors, Evolution, chapter Modeling
Neuronal Growth and Shape, pages 195–215. The MIT Press, 2007.
[38] J van Pelt and R W H Verwer. Topological properties of binary trees grown with order-dependent
branching probabilities. Bull Math Biol, 48(2):197–211, 1986.
[39] J van Pelt and R W H Verwer. The exact probabilities of branching patterns under terminal and
segmental growth hypotheses. Bull. Math. Biol., 45(2):269–285, 1983.
[40] J van Pelt, H B Uylings, R W H Verwer, R J Pentney, and M J Woldenberg. Tree asymmetry–a sensitive
and practical measure for binary topological trees. Bull. Math. Biol., 54(5):759–784, Sep 1992.
[41] J van Pelt, A E Dityatev, and H B M Uylings. Natural variability in the number of dendritic segments:
model-based inferences about branching during neurite outgrowth. J. Comp. Neurol., 387(3):325–340,
Oct 1997.
[42] J van Pelt, A van Ooyen, and H B M Uylings. The need for integrating neuronal morphology databases

41
and computational environments in exploring neuronal structure and function. Anat. Embryol., 204
(4):255–265, OCT 2001.
[43] M P van Veen and J van Pelt. Terminal and intermediate segment lengths in neuronal trees with finite
length. Bull. Math. Biol., 55(2):277–294, Mar 1993.
[44] A Veen and F P Schoenberg.
using an em-type algorithm.

Estimation of space-time branching process models in seismology
J. Am. Stat. Assoc., 103(482):614–624, JUN 2008.

doi: 101198/

016214508000000148.
[45] R W H Verwer and J van Pelt. Analysis of binary-trees when occasional multifurcations can be
considered as aggregates of bifurcations. Bull. Math. Biol., 52(5):629–641, 1990.
[46] J A Villacorta, J Castro, P Negredo, and C Avendano. Mathematical foundations of the dendritic
growth models. J Math Biol, 55(5-6):817–859, NOV 2007. doi: 101007/s00285-007-0113-7.
[47] J Zhuang. Gambling scores for earthquake predictions and forecasts. Geophys. J. Int., 181(1):382–390,
APR 2010. doi: 101111/j1365-246X201004496x.
[48] F Zubler and R Douglas. A framework for modeling the growth and development of neurons and
networks. Front. Comput. Neurosci., 3:25, 2009. doi: 10.3389/neuro.10.025.2009.

