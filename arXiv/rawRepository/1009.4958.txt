Flexible memory networks∗
arXiv:1009.4958v2 [q-bio.NC] 3 Aug 2011

Carina Curto1, Anda Degeratu2, Vladimir Itskov1
1
2

Department of Mathematics, University of Nebraska-Lincoln
Max Planck Institute for Gravitational Physics, Golm, Germany
Abstract

Networks of neurons in some brain areas are flexible enough to encode new memories quickly. Using a standard firing rate model of recurrent networks, we develop a
theory of flexible memory networks. Our main results characterize networks having the
maximal number of flexible memory patterns, given a constraint graph on the network’s
connectivity matrix. Modulo a mild topological condition, we find a close connection
between maximally flexible networks and rank 1 matrices. The topological condition
is H1 (X; Z) = 0, where X is the clique complex associated to the network’s constraint
graph; this condition is generically satisfied for large random networks that are not overly
sparse. In order to prove our main results, we develop some matrix-theoretic tools and
present them in a self-contained section independent of the neuroscience context.

Contents
1 Introduction
1.1 Network dynamics and architecture . . . . . . . . .
1.2 Memory patterns as ‘stable sets’ in threshold-linear
1.3 G-constrained networks . . . . . . . . . . . . . . .
1.4 Flexible memory patterns as ‘flexible cliques’ . . .
1.5 Statement of the Main Results . . . . . . . . . . .
1.6 Discussion . . . . . . . . . . . . . . . . . . . . . . .

. . . . . .
networks
. . . . . .
. . . . . .
. . . . . .
. . . . . .

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

.
.
.
.
.
.

2 Stable sets correspond to stable principal submatrices
3 Matrix-theoretic results
3.1 Bipartite matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2 Vanishing principal minors and rank . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.3 Stable and marginally stable matrices . . . . . . . . . . . . . . . . . . . . . . . . . . .

2
2
3
5
6
6
8
9
11
12
13
16

4 Maximally flexible networks
18
4.1 Flexible vs. marginal cliques . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
4.2 Proof of Theorem 1.5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
4.3 Proof of Theorems 1.7 and 1.8 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
5 Acknowledgments
∗

23

Accepted to Bulletin of Mathematical Biology, 11 July 2011.

1

1

Introduction

New memories in some brain areas can be encoded quickly [13]. It is widely believed that
memories are stored via changes in the synaptic efficacies between neurons. Irrespective of
the plasticity mechanism, or ‘learning rule’, used to encode memory patterns, rapid learning
is perhaps most easily accomplished if new patterns can be learned via only small changes
in connection strengths between neurons. It may thus be desirable for fast-learning, flexible
networks to have architectures that enable many memory patterns to be encoded (and unencoded) by only small perturbations of the synaptic connections. Here by ‘architecture’ we
mean the pattern of synaptic strengths, or weights, assigned to directed connections between
neurons. Which network architectures allow maximal flexibility for learning and unlearning
new memories?
We study this question in the context of a standard firing rate model of recurrent neural
networks. Building on the framework of ‘permitted’ and ‘forbidden’ sets first introduced in [5],
we think of the recurrent network as a gating device that allows only a restricted set of patterns,
the stored ‘memories’, to be activated by external feed-forward input. In Theorem 1.2, we
establish a correspondence between the memory patterns encoded by a recurrent network and
the set of stable principal submatrices of the network’s effective connectivity matrix. We
then make precise the notion of memory patterns that are ‘flexible’ in the sense that they
can be encoded (learned) and unencoded (forgotten) via only small changes to the network
weights. Our main results, Theorems 1.5, 1.7 and 1.8, characterize network architectures with
the maximal number of flexible memories.

1.1

Network dynamics and architecture

We consider a standard firing rate model [2, 3] with heterogeneous timescales,
!
n
X
dxi
1
Wij xj + bi , for i = 1, ..., n,
= − xi + ϕ
dt
τi
j=1
where n is the number of neurons. The real-valued function xi = xi (t) is the firing rate of the
ith neuron, bi is the external input to the ith neuron, and Wij denotes the effective strength
of the recurrent connection from the jth to the ith neuron. The timescale τi gives the rate
of recovery to rest in the absence of external or recurrent inputs. The nonlinear function
ϕ : R → R≥0 satisfies ϕ(y) = 0 whenever y ≤ 0, and ensures that the firing rates x1 , ..., xn
are non-negative. Although the threshold appears to be zero for all neurons, heterogeneous
thresholds can easily be incorporated into the bi s. Note that τi > 0, while bi and Wij can take
on both positive and negative values. The dynamics of the network can be described more
compactly as
ẋ = −Dx + ϕ (W x + b),
(1)
def

where D = diag(τ1 −1 , ..., τn −1 ) is the diagonal matrix of inverse time constants, and ϕ is
applied to each coordinate when the argument is a vector. Note that we do not require that
the matrix W respect Dale’s law1 , as the entries are considered to be effective connection
1

Dale’s law states that every element in the same column of the connectivity matrix must have the same sign
[2]. This is because neurons have either purely excitatory or purely inhibitory synapses onto other neurons.

2

strengths between principal (excitatory) neurons. Negative weights thus reflect effectively
inhibitory interactions, mediated by the presence of non-specific interneurons that do not
otherwise enter into the model. We always assume that the diagonal entries of the matrix
−D + W are strictly negative; otherwise, individual neurons may experience a run-away
excitatory drive even in the absence of external or recurrent inputs. We will also assume that
bi is constant in time, though it may vary across neurons. For a given choice of nonlinearity
ϕ, the network and its dynamics (1) are denoted by the pair of matrices (W, D).
It is worth noting here that we regard the model (1) as a description of fast-timescale
dynamics. A more realistic network would also include stochastic fluctuations and adaptive
mechanisms on a slower timescale [1], so that ‘fixed points’ of the fast-timescale dynamics only
appear for short periods of time. Such fixed points will serve as our model for (transiently)
activated memory patterns.
To study network flexibility, we will think of the matrix of effective connection strengths
W as a sum of two components,
W = J + A,
where J corresponds to a fixed and underlying architecture, and A is a matrix of perturbations
about J. While J reflects broad patterns of connection strengths that may be conserved
across animals or across time, the matrix A captures individual variations, and is constantly
changing as a function of the animal’s learning and experience. Our main question is then:
Main Question (version 1). What architectures J allow maximal flexibility for learning and
unlearning new memory patterns under small perturbations A?
We will consider this as a question about the strengths, or weights, of the recurrent connections
between neurons, rather than as a question about which neurons are connected. The pattern
of allowed connections between neurons will be treated as a constraint. Indeed, networks with
different strengths of connections, but identical connectivity patterns, may have significantly
different dynamics and attractors. Moreover, in biological neural circuits the anatomical
connectivity may be difficult to modify, but the weights of synapses are known to change on
relatively short timescales in response to learning and experience.

1.2

Memory patterns as ‘stable sets’ in threshold-linear networks

Before addressing our main question about perturbations of network architectures, we investigate the set of memory patterns corresponding to any fixed network (W, D). The idea of
stable fixed points as a model for stored memory patterns in recurrent networks dates back at
least to [7]. Following the framework of [5], subsets of neurons that are active at stable fixed
points of (1) will serve as our model for stored memory patterns.
Recall that a fixed point x∗ is asymptotically stable if there exists an open neighborhood U
of x∗ such that limt→∞ x(t) = x∗ for every trajectory x(t) with the initial condition x(0) ∈ U.
If the fixed point x∗ has only the property that for all nearby initial conditions x(0) ∈ U the
trajectory x(t) remains very close to x∗ for all later times, then x∗ is a stable point of the
network dynamics. Note that every asymptotically stable point is stable, but the converse
is not true. For a given firing rate vector x ∈ Rn≥0 , we call the subset of active neurons the
support of x,
def
supp(x) = {i | xi > 0} ⊂ {1, ..., n}.
3

Definition 1.1 (stable, marginal, and unstable sets). Let (W, D) be a network on n neurons
with nonlinearity ϕ. A non-empty subset of neurons σ ⊂ {1, ..., n} is a stable set of (W, D) if
there exists an asymptotically stable fixed point x∗ of the dynamics (1) such that supp(x∗ ) = σ,
for at least one external input vector b ∈ Rn . A marginal set of (W, D) is a non-empty subset
of neurons σ for which there exists a stable fixed point of the dynamics (but no asymptotically
stable fixed point) with support σ for at least one external input vector b, and an unstable set
of (W, D) is a non-empty subset of neurons that is neither stable nor marginal.2
Stable sets are our model for memory patterns encoded by the network. For a fixed external
input b there may be one, many, or no asymptotically stable fixed points. As we range over
all possible inputs, however, we obtain the set of stable sets of the network. Clearly, there
can be at most 2n − 1 stable sets in a network of n neurons. In cases of interest, however, the
recurrent network performs meaningful computations precisely because only a small fraction
of subsets are stable [5]. Note that a pair of neurons in a stable set need not be connected
(i.e., we may have Wij = 0 for i, j in a stable set).
In general, it is very difficult to determine analytically the stable fixed points for a highdimensional, nonlinear dynamical system. If the nonlinearity ϕ in (1) is threshold-linear,
however, it is possible to use standard tools from linear systems of ordinary differential equations to obtain exact results. For this reason, we now restrict ourselves to threshold-linear
networks, which are networks (W, D) where the nonlinearity is chosen as

y if y > 0,
def
ϕ(y) = [y]+ =
0 if y ≤ 0.
Although sigmoids more closely match experimentally measured input-output curves for neurons, the above threshold-nonlinearity is often a good approximation when neurons are far
from saturation [2, 4]. If we assume that encoded memory patterns are realized by neurons firing sufficiently below saturation, it is reasonable to model them as stable sets of the
threshold-linear dynamics:
ẋ = −Dx + [W x + b]+ .
(2)
In a (nondegenerate) linear system, ẋ = (−D+W )x+b, there can be at most one fixed point
of the dynamics for a given input vector b ∈ Rn ; its stability is characterized by the eigenvalues
of the matrix −D + W . Unlike linear systems, the threshold-linear network (2) can exhibit
multiple fixed points for the same input vector b. It turns out, however, that stable, unstable
and marginal sets of neurons in threshold-linear networks have simple characterizations in
terms of the eigenvalues of the corresponding principal submatrices of −D + W .
Given an n × n matrix A, and a subset σ ⊂ {1, ..., n}, the principal submatrix Aσ is the
square matrix obtained by restricting A to the index set σ; i.e., if σ = {s1 , ..., sk }, then Aσ is
the k × k matrix with (Aσ )ij = Asi sj . We call a square matrix stable if all its eigenvalues have
strictly negative real part. We call a matrix unstable if at least one eigenvalue has strictly
positive real part, and marginally stable if no eigenvalue has strictly positive real part and at
least one eigenvalue is purely imaginary. Marginally stable matrices are thus on the boundary
between stable and unstable matrices.
2

Stable and unstable sets were previously introduced in [5], where they were called “permitted” and “forbidden” sets, respectively.

4

We now state our characterization of stable sets in terms of the stability of principal
submatrices:
Theorem 1.2. Let (W, D) be a threshold-linear network. A subset of neurons σ is a stable
set of (W, D) if and only if the principal submatrix (−D + W )σ is stable. Similarly, σ is a
marginal set or an unstable set of (W, D) if and only if (−D + W )σ is marginally stable or
unstable, respectively.
In the case of symmetric threshold-linear networks, where the matrix W is symmetric, the
equivalence between stable (‘permitted’) sets and stable principal submatrices was shown in
[5]. We give the proof of Theorem 1.2 in Section 2.

1.3

G-constrained networks

There are two ways in which a zero-weight connection between two neurons may arise. On
the one hand, there may be a lack of anatomical connectivity between the neurons. On the
other hand, many synaptic connections that appear anatomically are not functional - these
are referred to as silent synapses [10]. While the first type of zero-weight connection cannot
be perturbed without major changes to the network architecture, silent synapses may become
active via small modifications. In addressing our main question, we are therefore interested
in characterizing maximally flexible networks where some connections are constrained to be
zero, while the remaining weights (some of which may also be zero) can be modified by small
perturbations of the network. The following definitions hold for general networks, not just
threshold-linear ones.
Let G = (V, E) be a simple graph with vertices V = {1, ..., n} and edges E. We say that an
n × n architecture matrix J is constrained by the graph G if Jij = 0 for all edges (ij) ∈
/ E. By
abuse of notation, we often use G to refer to the edge set E. Note that all architectures on n
neurons are constrained by the complete graph G = Kn . If for (ij) ∈ G the entry Jij = 0, we
say that there is a silent connection from neuron j to neuron i. This mirrors the phenomenon
of silent synapses in the brain.
We define an ε-perturbation of a network architecture J to be a matrix A whose entries all
satisfy |Aij | ≤ ε. We say that an ε-perturbation is consistent with G if the matrix A satisfies
Aij = 0 for all (ij) ∈
/ G. In other words, consistent ε-perturbations can only perturb entries
that are not constrained to be zero (including silent connections).
When considering an architecture J that is constrained by a graph G, we refer to the
network as (J, D)G . For a given ϕ, we use the following notation for the set of all G-constrained
network architectures:
N (G) := {(J, D)G } = {(J, D) | Jij = 0 for all (ij) ∈
/ G}.
Note that the set of constrained architectures is independent of the nonlinearity ϕ. When
G = Kn is the complete graph (no constraint), we will simply write N (n) := N (Kn ). If
G1 ⊂ G2 , then N (G1 ) ⊂ N (G2 ). An ε-perturbation of a network (J, D)G will always be
assumed to be consistent with G, and hence to stay within N (G).
We can now state our main question a bit more precisely:

5

Main Question (version 2). For a given constraint graph G, what network architectures
(J, D)G ∈ N (G) allow the maximal number of subsets of neurons that can become both
stable sets (learned/encoded) and unstable sets (forgotten/unencoded) via arbitrarily small
ε-perturbations of J?
We call such subsets of neurons flexible memory patterns.

1.4

Flexible memory patterns as ‘flexible cliques’

Intuitively, a flexible memory pattern is a subset of neurons that can become both a stable set
and an unstable set via only small modifications of the network’s connection strengths. Ideally,
these modifications should be specific enough not to change the stability of any other subsets.
Moreover, we would like flexible memory patterns to correspond to subsets of neurons that
are unconstrained in their connections to each other. In other words, these subsets of neurons
should be all-to-all connected in the sense that all mutual connections can be perturbed,
although some may be zero-weight (silent) connections. We model such memory patterns as
‘flexible cliques’; a precise definition is given below.
Recall that a clique in a graph G is a subset of vertices that are all-to-all connected, and the
clique complex of G, denoted X(G), is the set of all cliques. We will say that σ ⊂ {1, ..., n}
is a stable clique of the network (W, D)G if σ is a stable set and σ ∈ X(G). Similarly, an
unstable clique is an unstable set σ such that σ ∈ X(G), and a marginal clique is a marginal
set σ such that σ ∈ X(G). Because the stability of a matrix forces one or more of its
principal submatrices to be stable (see Lemma 3.15), one cannot require that a perturbation
that changes the stability of a marginal clique in a threshold-linear network also preserves all
other marginal cliques. For this reason we introduce the notions of ‘maximally stable’ and
‘minimally unstable’ cliques. A maximally stable clique is a stable clique that is not properly
contained in any larger stable clique; a minimally unstable clique is an unstable clique that
does not properly contain any other unstable clique. We can now define flexible cliques:
Definition 1.3 (flexible clique). We call a subset of neurons σ ⊂ {1, ..., n} a flexible clique
of a network architecture on n neurons, (J, D)G , if for every ε > 0 there exist ε-perturbations
As and Au , consistent with G, such that σ is a maximally stable clique of (J + As , D)G and
a minimally unstable clique of (J + Au , D)G .
Flexible cliques are our model for flexible memory patterns. All flexible cliques are marginal
cliques, but the converse is not true (see Section 4.1). This is because the flexibility of a
marginal clique depends on the relationship of this clique to other cliques in the network. In
general, it is difficult to determine whether or not a marginal clique is flexible in a network
with many marginal cliques. We are interested in precisely this case, as we look for properties
of networks with the maximal number of flexible cliques.

1.5

Statement of the Main Results

Our main results all concern threshold-linear networks only. Consequently, from now on we
assume N (n) and N (G) correspond to sets of unconstrained and G-constrained thresholdlinear networks, respectively. First, we define what we mean by the ‘flexibility’ and ‘rank’ of
a network:
6

Definition 1.4 (network flexibility, rank, and completion). We define the flexibility of a
network as the number of flexible cliques, and denote it: flex(J, D)G . We define the rank of a
network (J, D)G to be the rank of the matrix −D + J. We say that a G-constrained network
on n neurons, (J, D)G , has a rank k completion if there exists a network (J¯, D̄) ∈ N (n) of
rank k such that D̄ = D and J¯ij = Jij for all i = j and all distinct pairs (ij) ∈ G.
We now further refine our main question:
Main Question (version 3). For a given constraint graph G, what threshold-linear networks
(J, D)G ∈ N (G) attain maximum flexibility?

Note that the flexibility of a G-constrained network (J, D)G is bounded by the total number
of non-empty cliques in the corresponding clique complex X(G), and by the fact that single
neurons can not be flexible cliques because −D + J has strictly negative diagonal. Thus,
flex(J, D)G ≤ |X(G)| − n − 1,
where n is the number of neurons. In N (n), the flexibility can be at most 2n − n − 1. Most
networks, however, have no flexible cliques.
The rank of any network (J, D)G is at least 1. For threshold-linear networks, rank 1
networks are good candidates for attaining maximum flexibility because all but the 1 × 1
principal submatrices are marginally stable. Indeed, we find that rank 1 networks attain
the upper bound on flexibility in N (n), and a similar statement is true about G-constrained
networks:
Theorem 1.5. All rank 1 threshold-linear networks on n neurons are maximally flexible in
N (n), and have flexibility 2n − n − 1. All G-constrained threshold-linear networks with a rank
1 completion are maximally flexible in N (G), and have flexibility |X(G)| − n − 1.
The proof is given in Section 4.2.
Can any networks other than ones that are rank 1, or have rank 1 completions, attain
maximal flexibility? The following example demonstrates that a G-constrained network can
be maximally flexible without having a rank 1 completion.
Example 1.6. Let G = (V, E) be a simple graph with vertices V = {1, 2, 3, 4} and edges
E = {(12), (23), (34), (41)}. G is a cycle on 4 vertices, so the clique complex X(G) has no
cliques of size greater than 2. Consider the threshold-linear network (J, D)G ∈ N (G), where


−1 2
0
1
 1/2 −1 1
0 
.
−D + J = 
 0
1 −1 1 
1
0
1 −1

Using Lemma 4.1 (see Section 4.1), it is easy to see that all σ ∈ X(G) such that |σ| = 2 are
flexible cliques, and hence (J, D)G is maximally flexible in N (G). Despite this, (J, D)G does
not have a rank 1 completion, since there is no rank 1 matrix that agrees with −D + J on all
of its nonzero entries (cf. Example 3.8 in Section 3.2).

7

It turns out, however, that examples of this kind can be eliminated by imposing a simple
topological condition on the clique complex of the constraint graph G. Note that a clique
complex is an abstract simplicial complex, whose homology groups can be computed using
simplicial homology. The following is our main result:
Theorem 1.7. Let (J, D)G be a maximally flexible threshold-linear network in N (G), and
suppose that the clique complex X(G) satisfies H1 (X(G); Z) = 0. Then (J, D)G has a rank 1
completion. In particular, (J, D)G has no silent connections.
The vanishing of H1 (X(G); Z) may at first appear to be a strong condition, but in fact it is
generically satisfied for large random networks that are not overly sparse. For example, it was
recently shown in [9] that if G is an Erdös-Rényi graph with edge probability p (i.e., a random
graph on n vertices with independent connection probability p between any pair of vertices),
then p ≥ n−α with α < 1/3 implies that the probability of H1 (X(G); Z) = 0 approaches 1 as
n → ∞. For n = 104 neurons, the first homology group of the clique complex is expected to
vanish for connection probabilities as low as p = .05.
The proof of Theorem 1.7 is given in Section 4.3. For the complete graph Kn , H1 (X(Kn ), Z) =
0, thus the following result for unconstrained networks is a corollary of Theorems 1.5 and 1.7:
Theorem 1.8. A threshold-linear network is maximally flexible in N (n) if and only if it is a
rank 1 network.
We give in Section 4.3 a separate proof of this theorem independent of homology/cohomology
arguments.

1.6

Discussion

In this article we have laid out the foundations for a theory of flexible memory networks –
that is, for recurrent networks with memory patterns that can be both encoded (learned) and
unencoded (forgotten) by arbitrarily small perturbations of the matrix of connection strengths
between neurons. Given a constraint graph G of allowed connections, we have found, modulo a
mild topological condition, that maximally flexible networks in N (G) correspond precisely to
networks (J, D)G that have a rank 1 completion. These results may provide valuable insights
for understanding fast-learning, flexible networks in the brain.
Our results are based on an analysis of the fixed point attractors of a standard firing rate
model (2). We emphasize, however, that we regard this only as a model of the fast-timescale
dynamics of a recurrent network; in a more comprehensive model, additional elements such as
stochastic fluctuations, changing external inputs, and adaptive variables on a slower timescale
will all lead to frequent transitions between attractors of the fast-timescale equations (2). This
approach has proven particularly fruitful in modeling of hippocampal networks, where “bump
attractor” models on a fast timescale form integral building blocks to more comprehensive
models that have been successful in describing experimental observations from simultaneously
recorded populations of neurons [14, 11, 12, 8].
Thus far we have only considered the extreme case of maximally flexible networks. For
these networks, arbitrarily small perturbations of the synaptic weights between neurons are
sufficient to encode new memory patterns. Nevertheless, larger perturbations will be necessary
8

for these patterns to be robust in the presence of various plasticity mechanisms that are
engaged during ongoing spontaneous activity. For any given learning rule and/or constraint
on the rate of synaptic changes, however, maximally flexible networks have the best chance
to quickly encode (or unencode) new memories as stable fixed points of the dynamics.
It may be possible to extend these results to other flexible networks. Do all rank k
networks have the same flexibility? What is the general relationship between the flexibility of
a network and its rank? What is the appropriate generalization of the topological condition
in Theorem 1.7 when considering higher rank completions? We leave these questions to future
work.
The remainder of this paper is organized as follows. In Section 2 we prove Theorem 1.2,
making the connection between fixed points of the recurrent network dynamics and the stability of principal submatrices. In Section 3 we develop some matrix-theoretic results that
are critical to proving our main theorems. This section is self-contained, independent of the
context of neural networks. In Section 4 we prove our main results, Theorems 1.5, 1.7 and
1.8.

2

Stable sets correspond to stable principal submatrices

Recall that a threshold-linear network (W, D) has dynamics described by the system,
ẋ = −Dx + [W x + b]+ ,

(3)

with x ∈ Rn≥0 the firing rate vector, D a diagonal matrix with strictly positive diagonal entries,
and −D + W an n×n matrix having strictly negative diagonal entries. For such networks, one
is able to obtain qualitative characterizations (stable, marginal, unstable) of sets of neurons.
In what follows, we consider fixed points of (3) for a fixed input vector b ∈ Rn .
Suppose there exists a fixed point of (3) with all neurons firing, i.e. x∗ > 0. Since Dx∗ > 0,
we can drop the threshold in a small neighborhood of this fixed point, where the system is
described by the linear system ẋ = (−D + W )x + b. If the matrix −D + W is invertible, the
linear system has exactly one fixed point, (D − W )−1 b, although this fixed point may or may
not be in the regime Rn>0 where all neurons are firing. Either x∗ = (D − W )−1 b > 0, or we
have a contradiction and there is no x∗ . As is well-known for linear systems, the fixed point
x∗ is asymptotically stable if and only if the matrix −D + W is a stable matrix.
In addition to a possible fixed point with all neurons firing, the system (3) may also
have fixed points corresponding to proper subsets of neurons with non-zero firing rate. Let
σ = supp(x∗ ) ⊂ {1, ..., n} be the subset of neurons that are firing at the fixed point x∗ , with
the complement σ̄ representing the remaining (silent) neurons. To describe these types of
fixed points, we reorder the neurons and write








bσ̄
xσ̄
Dσ̄ 0
Wσ̄σ̄ Wσ̄σ
.
, and b =
, x=
, D=
W =
bσ
xσ
0 Dσ
Wσσ̄ Wσσ
The system (3) becomes,
ẋσ̄ = −Dσ̄ xσ̄ + [Wσ̄σ̄ xσ̄ + Wσ̄σ xσ + bσ̄ ]+ ,
ẋσ = −Dσ xσ + [Wσσ̄ xσ̄ + Wσσ xσ + bσ ]+ ,
9

and, since x∗σ̄ = 0, the fixed point equations for x∗ simplify to:
0 = [Wσ̄σ x∗σ + bσ̄ ]+ ,
Dσ x∗σ = [Wσσ x∗σ + bσ ]+ .
Since Dσ x∗σ > 0, we can drop the threshold in the second equation and obtain
(Dσ − Wσσ )x∗σ = bσ .

(4)

However, a solution x∗ of this equation only yields a valid fixed point if x∗σ > 0 and Wσ̄σ x∗σ +
bσ̄ ≤ 0.
To analyze the stabilityof afixed point x∗ with supp(x∗ ) = σ, we make the following
y
def
|σ̄|
|σ|
change of coordinates. Let
= x − x∗ , with y ∈ R≥0 and z ∈ R≥0 . Then x∗ is a stable
z
fixed point of (3) if and only if the origin is a stable fixed point of:
ẏ = −Dσ̄ y + [Wσ̄σ̄ y + Wσ̄σ z + (Wσ̄σ x∗σ + bσ̄ )]+ ,
ż = −Dσ (z + x∗σ ) + [Wσσ̄ y + Wσσ z + (Wσσ x∗σ + bσ )]+ .
The existence of the fixed point (y = 0, z = 0) implies that Wσ̄σ x∗σ +bσ̄ ≤ 0 and Wσσ x∗σ +bσ > 0.
If we further assume that Wσ̄σ x∗σ + bσ̄ < 0, then there exists an open neighborhood of the
origin for which the sign of each of the thresholded terms is determined by the constant terms
(those that do not involve y or z). In this neighborhood, we can simplify the thresholds and,
using (4), the equations take the form,
ẏ = −Dσ̄ y
ż = −Dσ z + Wσσ̄ y + Wσσ z.
Because the system is exactly linear in a neighborhood of the fixed point, x∗ is asymptotically
stable if and only if the matrix


−Dσ̄
0
M=
Wσσ̄ −Dσ + Wσσ
is stable. Similarly, x∗ is stable but not asymptotically stable if and only if M is marginally
stable, and x∗ is an unstable fixed point if and only if M is unstable. Finally, note that the
stability of M is equivalent to the stability of −Dσ + Wσσ = (−D + W )σ .
We collect these observations into the following characterization of fixed points in thresholdlinear networks:
Proposition 2.1. Consider the system (3), for a threshold-linear network (D, W ) on n neurons with fixed input b, and let σ ⊂ {1, ..., n} be a subset of neurons. The following statements
hold:
(i) A point x∗ with supp(x∗ ) = σ is a fixed point if and only if x∗σ satisfies:
(a) (Dσ − Wσσ )x∗σ = bσ ,
(b) x∗σ > 0, and

10

(c) bσ̄ ≤ −Wσ̄σ x∗σ .
In particular, if det(Dσ −Wσσ ) 6= 0, then there exists at most one fixed point with support
σ, and it is given by x∗σ = (Dσ − Wσσ )−1 bσ .
(ii) Suppose x∗ is a fixed point with supp(x∗ ) = σ. If bσ̄ < −Wσ̄σ x∗σ , then x∗ is asymptotically
stable if and only if the principal submatrix (−D + W )σ is stable. Similarly, x∗ is stable
but not asymptotically stable if and only if (−D + W )σ is marginally stable, and x∗ is
an unstable fixed point if and only if (−D + W )σ is unstable.
Using this Proposition, we can now prove Theorem 1.2.
Proof of Theorem 1.2. We begin with the first statement. (⇒) Let σ be a stable set of
(W, D), and choose b such that there exists an asymptotically stable fixed point x∗ of (3)
with supp(x∗ ) = σ. By part (i) of Proposition 2.1 it is clear that we can choose b such that
bσ̄ < −Wσ̄σ x∗σ . It then follows from part (ii) that (−D + W )σ is stable.
(⇐) Now suppose that (−D+W )σ is stable. We construct b, the input vector in (3), so that
the corresponding fixed point with support σ is asymptotically stable. Let bσ = (D − W )σ 1σ ,
where 1σ is the vector of all ones. Letting x∗ be the firing rate vector with supp(x∗ ) = σ and
x∗σ = 1σ > 0, we choose bσ̄ to satisfy bσ̄ < −Wσ̄σ x∗σ . Note that (Dσ − Wσσ )x∗σ = bσ . For this
choice of b, it thus follows from part (i) of Proposition 2.1 that x∗ is a fixed point, and by part
(ii) that x∗ is asymptotically stable. Hence, σ is a stable set of (W, D).
Similar arguments using Proposition 2.1 can be used to show that σ is a marginal or
unstable set of (W, D) if and only if (−D + W )σ is marginally stable or unstable, respectively.
As a result of Theorem 1.2, we see that in order to investigate stable, unstable, or marginal
sets of neurons in threshold-linear networks we need to understand the stability of principal
submatrices.

3

Matrix-theoretic results

In this section, we prove results concerning real matrices with strictly negative entries on
the diagonal. These results will be critical for Section 4, where we prove our main theorems
regarding maximally flexible networks. This section is self-contained, however, and the results
can be understood independently of the context of neural networks.
Throughout this section, A is an n × n matrix with real coefficients and strictly negative
entries on the diagonal. The matrix EA = (ǫij ) is the sign matrix associated to A; this is a
matrix whose entries ǫij ∈ {±1, 0} are the signs of the corresponding entries of A. To the
matrix A we also associate the graph GA , which we call the connectivity graph of A. It is the
simple graph that includes each edge (ij) unless Aij = Aji = 0. Let X(GA ) be the clique
complex associated to the graph GA ; we call this the clique complex associated to the matrix
A. Note that a clique complex is an abstract simplicial complex. For any simplicial complex
X and abelian group G, we denote the associated simplicial homology and cohomology groups
as Hi (X; G) and H i (X; G), respectively. Finally, mirroring Definition 1.4, we call an n × n
matrix Ā a completion of A if Āij = Aij for all i = j and all distinct pairs (ij) ∈ GA .
11

3.1

Bipartite matrices

Bipartite matrices play an important role in Section 3.2.
Definition 3.1 (bipartite matrix). We say that a real-valued, n × n matrix A is a bipartite
matrix if the index set {1, ..., n} can be partitioned into two disjoint sets, σ and σ̄, such that:
1. if i ∈ σ and j ∈ σ̄, both Aij ≥ 0 and Aji ≥ 0.
2. if i, j ∈ σ or i, j ∈ σ̄, both Aij ≤ 0 and Aji ≤ 0.
This definition is equivalent to the condition that there exists a permutation of the indices
{1, ..., n} such that the sign pattern of A takes on the block-form:


− +
sgn(A) =
,
(5)
+ −
where “+” indicates a submatrix with all nonnegative entries, and “−” a submatrix with
all nonpositive entries. From this observation it is easy to see that all rank 1 matrices with
negative diagonal are bipartite:
Lemma 3.2. Let A be a real n × n matrix with rank A = 1 and Aii < 0 for all i = 1, ..., n.
Then there exists a permutation of the indices such that the sign pattern of A is of the form (5).
In particular, A is a bipartite matrix.
The following result gives a sufficient condition for bipartiteness of a matrix in terms of the
associated clique complex.
Lemma 3.3 (bipartite lemma). Let A be a real-valued n × n matrix with strictly negative
diagonal, sign matrix EA = (ǫij ), connectivity graph GA , and clique complex X(GA ). Suppose
that
(i) ǫij ǫji = 1, whenever (ij) ∈ X(GA ),
(ii) ǫij ǫjk ǫki = −1, whenever (ijk) ∈ X(GA ), and
(iii) H 1 (X(GA ); Z2 ) = 0.
Then A is a bipartite matrix.
Proof. It is convenient to think of Z2 = {±1}, the multiplicative group with two elements.
Consider the co-chain complex, with X = X(GA ),
δ

δ

δ

δn−1

δ

0
1
2
n
C 0 (X; Z2 ) −→
C 1 (X; Z2 ) −→
C 2 (X; Z2 ) −→
· · · −→ C n (X; Z2 ) −→
0.

(6)

The maps are the usual coboundary operators. For example, δ0 ({vi }) = {eij }, where eij =
vj vi−1 = vi vj . Similarly, δ1 ({eij }) = {fijk }, where fijk = ejk e−1
ik eij = eij ejk eki .
By (i) we have {ǫij } ∈ C 1 (X; Z2 ), while (ii) implies that {−ǫij } ∈ Ker δ1 (we need the minus
sign because kernel elements map to +1). Using (iii), we conclude that {−ǫij } ∈ Im δ0 . Hence,
there exists a vertex labeling {νi } ∈ C 0 (X; Z2 ) such that −ǫij = νi νj whenever (ij) ∈ X. Let
σ = {i | νi = +1} and σ̄ = {i | νi = −1}, with σ ∪ σ̄ = {1, ..., n}. The sign of an edge,
ǫij = −νi νj , can only be positive if i ∈ σ and j ∈ σ̄ or if i ∈ σ̄ and j ∈ σ, and ǫij can only be
negative if i, j ∈ σ or i, j ∈ σ̄. This proves that the matrix A is bipartite.
12

Example 3.4. To see why we need the cohomology condition in cases where there are zero
entries, consider the matrix




A=



−1 1
0
0
1
1 −1 1
0
0
0
1 −1 1
0
0
0
1 −1 1
1
0
0
1 −1





.



The graph GA is a cycle on 5 vertices, and A is not a bipartite matrix. Nevertheless, A satisfies
conditions (i) and (ii).
When the matrix A has no zero entries, however, this kind of example cannot occur. The
clique complex of the complete graph, X(Kn ), is contractible, so H 1 (X(Kn ); Z2 ) = 0 and we
obtain the following corollary:
Corollary 3.5. Let A be a real-valued, n × n matrix with strictly negative diagonal and sign
matrix EA = (ǫij ) with all entries ǫij nonzero. Suppose that (i) ǫij ǫji = 1, for all (ij), and (ii)
ǫij ǫjk ǫki = −1, for all distinct triples (ijk). Then A is a bipartite matrix.

3.2

Vanishing principal minors and rank

Recall that, given an n × n matrix A and a subset σ ⊂ {1, ..., n}, the principal submatrix
Aσ is the square matrix obtained by restricting A to the index set σ. The determinant of a
principal submatrix is called a principal minor.
It is well-known that if the rank of A is k, then all principal minors larger than k × k
must vanish. The converse is not true. For example, consider a strictly upper-triangular n × n
matrix. It can have rank up to n − 1, yet each and every principal minor vanishes. In the case
of matrices with strictly negative diagonal entries, however, we do have a kind of converse;
this is the subject of Lemma 3.7 and Proposition 3.9, the main result in this section. We
begin with a simple technical lemma that will be used throughout.
Lemma 3.6. Let A be a real-valued n × n matrix with strictly negative diagonal entries and
clique complex X(GA ). Suppose that all 2 × 2 and 3 × 3 principal minors corresponding to
cliques in X(GA ) vanish. Then the matrix A has symmetric sign matrix EA , and its entries
satisfy
Aii Ajj = Aij Aji , for (ij) ∈ X(GA ), and
Aii Ajj Akk = Aij Ajk Aki , for (ijk) ∈ X(GA ).

(7)
(8)

Proof. The first set of relations (7) is obvious, and ensures that EA is symmetric and Aij 6= 0
for all (ij) ∈ X(GA ). This, together with the vanishing of 3 × 3 principal minors, yields:
2Aii Ajj Akk = Aij Ajk Aki + Akj Aji Aik ,

for (ijk) ∈ X(GA ).

Given a triple (ijk) ∈ X(GA ), denote x = Aii Ajj Akk and y = Aij Ajk Aki , and note that
y 6= 0. Using again (7), we can write Akj Aji Aik = x2 /y. The above 3 × 3 condition becomes
2xy = y 2 + x2 , and we conclude that x = y, which yields (8).
13

We can now show that the vanishing of all 2 × 2 and 3 × 3 principal minors suffices to
guarantee that A has rank 1.
Lemma 3.7 (rank 1). Let A be a real-valued, n × n matrix with strictly negative diagonal
entries such that all 2 × 2 and 3 × 3 principal minors vanish. Then GA is the complete graph,
A is a bipartite matrix, and rank A = 1.
Proof. Since all 2 × 2 principal minors vanish, it follows that for each i 6= j we have Aij Aji =
Aii Ajj 6= 0, and GA is therefore the complete graph. By Lemma 3.6, the relations (7) and (8)
are satisfied for all pairs and triples of distinct indices. Anchoring ourselves on the first row
and column, we find that any entry of the matrix can be written as:
Aij =

Aii Ajj A11
Aii A1j
Ai1 A1j
=
=
.
Aj1 A1i
A1i
A11

Let u = (A11 , A21 , ..., An1 )T be the first column vector of A and v = (A11 , A12 , ..., A1n ) the first
row vector. Then A = (A11 )−1 uv, which is manifestly rank 1. It follows from Lemma 3.2 that
A is bipartite.
Can we generalize this result for matrices with zeroes – i.e., for matrices A such that GA
is not the complete graph? Here we are looking for conditions that ensure the matrix A has
a rank 1 completion, where the entries with zeroes are treated as “unknown” entries that
can be completed to any value. In this case, we can require only that all 2 × 2 and 3 × 3
principal minors in the clique complex X(GA ) vanish. The following example shows that such
a requirement is insufficient to guarantee the existence of a rank 1 completion.
Example 3.8. Consider the matrix



−1 a
0 1/d
 1/a −1 b
0 

A=
 0 1/b −1 c  .
d
0 1/c −1

This matrix has GA = (V, E), where V = {1, 2, 3, 4} and E = {(12), (23), (34), (41)}. GA is
a cycle on 4 vertices, and the clique complex X(GA ) = GA since there are no 2-dimensional
faces. Note that all 2 × 2 principal minors corresponding to 2-cliques in X(GA ) vanish, and
there are no 3 × 3 ones to check. Does this matrix have a rank 1 completion? Generically,
the answer is “No.” In fact, it is easy to see that a rank 1 completion exists if and only if
abcd = 1.
The intuition we gain from this example is that there is a topological obstruction to a
matrix having a rank 1 completion. It is the presence of a closed but hollow cycle in X(GA )
that prevents A from having a rank 1 completion. In fact, if we added or removed an edge
from the graph GA in Example 3.8, we would have a rank 1 completion without any further
condition other than the vanishing of 2 × 2 and 3 × 3 principal minors det Aσ for σ ∈ X(GA ).
The following Proposition gives topological conditions that guarantee the existence of a rank
1 completion. Note that a condition ensuring that A is bipartite is needed to show that A (as
opposed to only |A|) has a rank 1 completion.
14

Proposition 3.9. Let A be a real-valued n×n matrix with strictly negative diagonal and clique
complex X(GA ). Let |A| denote the matrix of absolute values of A. Suppose that det Aσ = 0
for all σ ∈ X(GA ) such that |σ| = 2 or 3. Then,
(a) H 1 (X(GA ); Z2 ) = 0 =⇒ A is a bipartite matrix.
(b) H 1 (X(GA ); R) = 0 =⇒ |A| has a rank 1 completion.
(c) H 1 (X(GA ); R) = H 1 (X(GA ); Z2 ) = 0 =⇒ A has a rank 1 completion.
Proof. Let X = X(GA ). First, observe that we satisfy the conditions of Lemma 3.6, and so
we have relations (7) and (8).
(a): Let EA = (ǫij ), with ǫij ∈ {±1, 0}, be the sign matrix of A. Relations (7) and (8) imply
ǫij ǫji = 1, for (ij) ∈ X, and
ǫij ǫjk ǫki = −1, for (ijk) ∈ X.
Since we also have H 1 (X; Z2 ) = 0, it follows from Lemma 3.3 that A is a bipartite matrix.
(b): For every Aij that is non-zero, introduce the following (real) variables:
!
|Aij |
.
Lij := ln p
Aii Ajj

In these variables, the relations (7) and (8) are equivalent to antisymmetry and cocycle conditions on the Lij :
Lij + Lji = 0,
Lij + Ljk + Lki = 0,

for (ij) ∈ X, and
for (ijk) ∈ X.

(9)
(10)

Now consider the co-chain complex
δ

δ

δ

δn−1

δ

0
1
2
n
C 0 (X; R) −→
C 1 (X; R) −→
C 2 (X; R) −→
· · · −→ C n (X; R) −→
0.

(11)

where C k (X; R) is the group of k-cochains with coefficients in R. C 0 (X; R) corresponds to
vertex-labelings, C 1 (X; R) is the set of edge-labelings, etc. As usual, the coboundary operators
are δk ({fi0 ,...,ik }) = {gi0 ,...,ik+1 }, where
gi0 ,...,ik+1 =

k+1
X

(−1)j fi0 ,...,bij ,...,ik+1 ,

j=0

and δk+1 ◦ δk = 0. By assumption, H 1 (X; R) = 0, so Im δ0 = Ker δ1 .
Let L = (Lij ), for (ij) ∈ X. Observe that (9) implies that L ∈ C 1 (X; R), while the
cocycle condition (10) implies that L ∈ Ker δ1 . It follows that L ∈ Im δ0 , so there exists an
a ∈ Rn ∼
= C 0 (X; R) such that Lij = aj − ai . This implies that, for each Aij 6= 0,
q
p
p
|Aij | = Aii Ajj eLij = |Aii |e−ai |Ajj |eaj .
15

p
p
Let u, v ∈ Rn with ui = |Aii |e−ai and vj = |Ajj |eaj . Since |A| and uv T agree on on all
nonzero entries of |A|, the matrix |A| = uv T is a rank 1 completion of |A|.
(c): Recall from the proof of part (a) that ǫij is the sign of Aij , so that Aij = ǫij |Aij | for each
entry of A. Following the proof of Lemma 3.3, there exists a vertex labeling {νi } ∈ C0 (X; Z2 ),
with νi ∈ {±1}, such that ǫij = −νi νj whenever (ij) ∈ X. Choose u, v ∈ Rn as in the proof
of part (b), so that |Aij | = ui vj whenever (ij) ∈ X. Now consider ũ, ṽ ∈ Rn where ũi = −νi ui
and ṽj = νj vj . It follows that Aij = ũi ṽj whenever Aij 6= 0. The matrix Ā = ũṽ T is thus a
rank 1 completion of A.
Remark 3.10. Note that Lemma 3.7 follows easily from Proposition 3.9, since the clique complex of the complete graph X(Kn ) is contractible, so the conditions H 1 (X(Kn ); Z2 ) = 0 and
H 1 (X(Kn ); R) = 0 are trivially satisfied. In Theorem 1.7, for simplicity we use instead the
somewhat stronger condition H1 (X(G); Z) = 0. If H1 (X(G); Z) = 0, then H 1 (X(G); Z2 ) =
H 1 (X(G); R) = 0; this follows from the following well-known observation.
Lemma 3.11. Let X be a simplicial complex. Assume that H1 (X; Z) = 0. Then H 1 (X, G) =
0, for every abelian group G.
Proof. This is a consequence of the Universal Coefficients Theorem [6], which for an abelian
group G yields the short exact sequence
0 −→ Ext(Hq−1 (X, Z), G) −→ H q (X, G) −→ Hom(Hq (X, Z), G) −→ 0
for all q ≥ 1. Note that for H a free abelian group, Ext(H, G) = 0. Since H0 (X, Z) is always
free, the above for q = 1 yields H 1 (X, G) ∼
= Hom(H1 (X, Z), G) = 0.

3.3

Stable and marginally stable matrices

Recall that all flexible cliques are marginal cliques, and by Theorem 1.2 the marginal cliques
correspond to marginally stable principal submatrices. Therefore, to make the connection
to flexible cliques in Section 4, we need to consider what happens to a matrix when its
principal submatrices are marginally stable, which is not quite the same as having vanishing
determinant.
Recall that a matrix is marginally stable if no eigenvalue has strictly positive real part
and at least one eigenvalue is purely imaginary. In the case of symmetric matrices, marginal
stability implies the existence of a zero eigenvalue, and hence vanishing determinant. This is
not in general true for non-symmetric matrices. However, 2 × 2 and 3 × 3 marginally stable
matrices with negative diagonal entries do have the following characterization:
Lemma 3.12. (i) Let A be a 2 × 2 real matrix with strictly negative diagonal entries. Assume
that A is marginally stable. Then det(A) = 0, and the sign matrix EA is a symmetric matrix
with all entries nonzero.
(ii) Let A be a 3 × 3 real matrix with strictly negative diagonal entries. Assume that A is
marginally stable. Then either det(A) = 0, or det(A) 6= 0 and A has a 2 × 2 stable principal
submatrix.

16

Proof. (i) The matrix A must have a purely imaginary eigenvalue. Since tr(A) < 0, this
eigenvalue must be 0, and thus det(A) = 0. As a consequence, the off-diagonal entries of the
matrix A must have the same sign and are both nonzero.
(ii) Let λ1 be a purely imaginary eigenvalue of A. We have two possibilities: either λ1 = 0 and
thus det(A) = 0, or λ1 6= 0. In the second case, the conjugate λ̄1 = −λ1 is also an eigenvalue,
and since tr(A) < 0, the third eigenvalue λ3 must be negative and so det(A) 6= 0. Consider
now the characteristic polynomial of A, PA (X) = −X 3 + tr(A)X 2 − M2 (A)X + det(A), where
M2 (A) denotes the sum of the principal 2 × 2 minors of A. Using the usual expression for
the coefficients of PA (X) in terms of eigenvalues of A, we find that M2 (A) = λ1 (−λ1 ) +
λ1 λ3 + (−λ1 )λ3 = |λ1 |2 > 0. There thus exists a 2 × 2 principal submatrix of A with positive
determinant and negative trace. This submatrix is stable.
We also have relationships between the stability of a matrix and its principal submatrices. In the case of symmetric matrices, it follows from Cauchy’s interlacing theorem that all
principal submatrices of a stable matrix are stable.
Theorem 3.13 (Cauchy’s interlacing theorem). Let A be a symmetric n × n matrix, and let
B be an m × m principal submatrix of A, where m ≤ n. If the eigenvalues of A are α1 ≤
...αj ... ≤ αn , and those of B are β1 ≤ ...βj ... ≤ βm , then for all j we have αj ≤ βj ≤ αn−m+j .
Corollary 3.14. Any principal submatrix of a stable symmetric matrix is stable. Any symmetric matrix containing an unstable principal submatrix is unstable.
Even in the case of non-symmetric matrices, there are still some constraints of this type. For
example,
Lemma 3.15. Let A be an n × n matrix with strictly negative diagonal entries and n ≥ 2. If
A is stable, then there exists a 2 × 2 principal submatrix of A that is also stable.
Proof. We use the formula for the characteristic polynomial in terms of sums of principal
minors:
PA (x) = (−1)n xn + (−1)n−1 M1 (A)xn−1 + (−1)n−2 M2 (A)xn−2 + . . . + Mn (A),
where Mk (A) is the sum of the k × k principal minors of A. (Note that M1 (A) = tr(A)
and Mn (A) = det(A).) The characteristic polynomial also has the well-known formula with
coefficientsPthat are symmetric polynomials in the eigenvalues; assuming A is stable, this yields
M2 (A) = i<j λi λj > 0. This implies that at least one 2 × 2 principal minor is positive. Since
the corresponding 2 × 2 principal submatrix has negative trace, it must be stable.
In order to prove our main results in Section 4, we will also use the following well-known
consequences of Cauchy’s interlacing theorem. Here Ak refers to the principal submatrix
obtained by taking the upper left k × k entries of A.
Lemma 3.16 (Stable symmetric matrices). Let A be a real symmetric n × n matrix. Then
A is stable iff (−1)k det(Ak ) > 0 for all 1 ≤ k ≤ n.
Corollary 3.17. Let A be a real symmetric n×n matrix. Then A is stable iff (−1)|σ| det(Aσ ) >
0 for every principal submatrix Aσ .

17

4

Maximally flexible networks

In this section we use the matrix results from Section 3 in order to prove our main results,
Theorems 1.5, 1.7 and 1.8, characterizing maximally flexible networks.

4.1

Flexible vs. marginal cliques

Recall that all flexible cliques are marginal cliques, because they can be made both stable
and unstable via arbitrarily small perturbations of the network’s connection strengths. The
converse is not true. The following lemma gives simple, but incomplete, conditions for determining whether or not a marginal clique is flexible in threshold-linear networks.
Lemma 4.1. Let σ be a marginal clique of a threshold-linear network (J, D)G .
1. If there exists τ ∈ X(G) such that either (i) τ ( σ and τ unstable, or (ii) τ ) σ and τ
stable, then σ is not a flexible clique.
2. If, on the other hand, (i) for all τ ( σ, τ is a stable clique, and (ii) for all τ ∈ X(G)
such that τ ) σ, τ is an unstable clique, then σ is a flexible clique.
The proof follows from observing that any marginal clique can be perturbed to become stable
or unstable by adding a multiple of the identity matrix to the corresponding principal submatrix, and one can always find a small enough perturbation so that the stability of all stable and
unstable principal submatrices in the original matrix is preserved. It is thus straightforward
to check the flexibility of marginal cliques if certain patterns of stable/unstable cliques are
also present. This is illustrated in the following example.
Example 4.2. Consider the following matrices −D + J for (unconstrained) threshold-linear
networks (D, J) ∈ N (3):







−1 0 −2
−1 −1 1
−1 2
1
M1 =  −2 −1 0  , M2 =  −1 −1 0  , and M3 =  1 −1 0  .
0 −2 −1
0
1 −1
0 −1 −1

M1 : {1, 2, 3} is a flexible clique since it is marginal and all contained cliques are stable.
M2 : {1, 2} is a marginal clique but it is not flexible, since {1, 2, 3} is stable.
M3 : {1, 2, 3} is a marginal clique but it is not flexible, since {1, 2} is unstable.
Note that Lemma 4.1 says nothing about the situation where the cliques contained by or
containing a given marginal clique are themselves also marginal. It is much more difficult to
check for flexible cliques in a network with many marginal cliques. We investigate precisely
this case, as we look for properties of networks with the maximal number of flexible cliques.

18

4.2

Proof of Theorem 1.5

We begin with an example of a network in which all the cliques with at least two neurons
are flexible. Such a network is maximally flexible, and provides a reference point in proving
that all rank 1 networks are maximally flexible in N (n). The proof relies on the following
determinant formulas:
Lemma 4.3. Let Wn (ǫ, α), for n ≥ 2, be the symmetric n × n matrix with entries

if
i = j,
 −1,
−1 + αǫ if {i, j} = {1, 2},
Wn (ǫ, α)ij =

−1 + ǫ if {i, j} =
6 {1, 2}.

(12)

det Wn (ǫ, α) = (−1)n αǫn−1 (2n − 2 − (2n − 4)ǫ − (n − 2 − (n − 3)ǫ)α) .

(13)

Then,

In particular,
det Wn (ǫ, 1) = (−1)n ǫn−1 (n − (n − 1)ǫ) .

(14)

Proof. This is a straightforward determinant computation.
We now show that the matrix with all entries −1 corresponds to a network on n neurons
that has the maximal number 2n − n − 1 of flexible cliques, and is thus maximally flexible.
Proposition 4.4. Let (J, D) ∈ N (n) be the network with the matrix −D + J = −1, where
−1 is the n × n matrix having all entries −1. Then any subset σ ⊂ {1, . . . , n} with at least
two neurons is a flexible clique. In particular, flex(J, D) = 2n − n − 1.
Proof. Let σ be any subset with |σ| = k ≥ 2 neurons. To show that σ is flexible, it suffices to
show that there exists an ε0 > 0 so that for every 0 < ε < ε0 , there exist ε-perturbations As
and Au of (J, D) under which σ becomes a maximally stable clique and a minimally unstable
clique, respectively. We show this via explicit construction of As and Au .
Let As be the symmetric matrix with 0 entries on the diagonal, entries (As )ij = ε for
distinct i, j ∈ σ, and (As )ij = −ε if either i ∈
/ σ or j ∈
/ σ. Clearly, As is an ε-perturbation. We
need to show that σ is a maximally stable clique for (J + As , D); i.e., σ is a stable clique of the
perturbed network, and any clique τ which properly contains σ is unstable. By Theorem 1.2,
it is enough to show that the corresponding principal submatrices of −1 + As are stable and
unstable, respectively.
Recall (12), and note that the principal submatrix (−1 + As )σ = Wk (ε, 1), where k = |σ|.
Using (14), we obtain
det(−1 + As )σ = (−1)k εk−1 (k − (k − 1)ε).

(15)

Note that the same expression holds for any σ ′ ⊂ σ, with k = |σ ′ |. By Corollary 3.17, it
follows that (−1 + As )σ is stable for all 0 < ε ≤ 1. To show that σ is maximally stable,
19

observe that any clique τ properly containing σ must also contain an order 2 clique whose
corresponding principal submatrix is


−1
−1 − ε
,
−1 − ε
−1
which is unstable for all ε > 0. Since the matrix (−1 + As )τ is symmetric, it follows from
Corollary 3.14 that (−1 + As )τ , for any τ ) σ, is unstable for all 0 < ε ≤ 1.
To generate a perturbation Au for which the clique σ is minimally unstable, we proceed
as follows. Let 0 < ε ≤ 1, and choose two neurons i1 , i2 ∈ σ such that i1 = min(σ) and
i2 = min(σ − {i1 }). Let Au be the symmetric matrix with entries (Au )ij = ε for distinct
i, j ∈ σ unless {i, j} = {i1 , i2 }. We let the entries (Au )i1 i2 = (Au )i2 i1 = αε, with α to be
determined later. All other entries of Au are set to 0. To show that σ is minimally unstable,
we need to choose α so that (−1 + Au )σ is unstable while all its proper principal submatrices
are stable. Since −1 + Au is symmetric, Corollary 3.17 tells us that this is accomplished if
the determinant of (−1 + Au )σ has the ‘wrong’ sign (−1)k+1 , where k = |σ|, and all j × j
principal minors of (−1 + Au )σ , with j < k, have the ‘right’ sign (−1)j .
Observing that (−1 + Au )σ = Wk (ε, α), we have from (13) that
det(−1 + Au )σ = (−1)k αεk−1(2k − 2 − (2k − 4)ε − (k − 2 − (k − 3)ε)α).

(16)

There are two types of proper principal submatrices. The first are those that correspond to
the cliques τ ( σ that contain both i1 and i2 , with j = |τ |, and are equal to the matrices
Wj (ε, α). From (13), these have determinants
det(−1 + Au )τ = (−1)j αεj−1(2j − 2 − (2j − 4)ε − (j − 2 − (j − 3)ε)α).

(17)

The second type of principal submatrices correspond to cliques ν ( σ that do not contain
both i1 and i2 . Letting j = |ν|, these are equal to the matrices Wj (ε, 1), and by (14) have
determinants
det(−1 + Au )ν = (−1)j εj−1(j − (j − 1)ε).
(18)

Using Corollary 3.17, we see that the cliques of type ν are all stable for 0 < ε ≤ 1. It remains
to choose α so that (16) has sign (−1)k+1 and (17) has sign (−1)j for all j = 2, ..., k − 1.
For k > 3, we choose α so that


2k − 2 − (2k − 4)ε
2j − 2 − (2j − 4)ε
.
< α < min
k − 2 − (k − 3)ε
j − 2 − (j − 3)ε j=2,...,k−1

This is always possible, since for 0 < ε ≤ 1 the sequence on the right is decreasing; the
minimum is attained for j = k − 1 and is greater than the term on the left, corresponding to
k−2
j = k. Since for k > 3 we also have αε < 2 k−3
ε the matrix Au is a 4ε-perturbation. When
1
k = 3, one can choose 0 < ε < 2 and α = 4, while in the case k = 2 one needs simply to
choose α < 0 so that σ is a minimally unstable clique.
We now show that all the symmetric rank 1 networks are maximally flexible:
Proposition 4.5. Let (J, D) ∈ N (n) be a symmetric rank 1 network. Then (J, D) is maximally flexible in N (n) and has flexibility 2n − n − 1.
20

Proof. Recall that by definition (J, D) ∈ N (n) is a symmetric rank 1 network if the matrix
−D + J is a symmetric rank 1 matrix. Since the matrix −D + J has negative entries on the
diagonal, there exists a vector x ∈ Rn so that −D + J = −xxT . Let diag(x) be the n × n
diagonal matrix associated to the vector x ∈ Rn . Then
−D + J = −xxT = diag(x) (−1) diag(x),
where −1 is the n × n matrix with all entries −1 that we encountered in Proposition 4.4.
Since multiplication of a matrix on the left and right by the same diagonal matrix does
not alter the sign of any principal minor, we have for any perturbation A
det(−xxT + diag(x)A diag(x))σ = det(−1 + A)σ ,
for any σ ⊂ {1, ..., n}. Moreover, if A is a symmetric perturbation, then so is diag(x)A diag(x),
and the stability of any principal submatrix of −1+A or −xxT +diag(x)A diag(x) is determined
entirely by the signs of the principal minors (Corollary 3.17). We can thus obtain stable and
unstable perturbations Ãs and Ãu of −xxT for any subset σ consisting of |σ| ≥ 2 neurons by
modifying the perturbations As and Au in Proposition 4.4 accordingly: Ãs = diag(x)As diag(x)
and Ãu = diag(x)Au diag(x). We conclude that the network (J, D) is maximally flexible in
N (n), with flexibility 2n − n − 1.
Before proving Theorem 1.5, which extends the above results to G-constrained nonsymmetric networks in N (G), we need to define the notion of ‘pruning’ of a network. We say that
a graph G̃ is a pruning of the graph G if the two graphs have the same vertices and the edges
˜ D̃) is a pruning of (J, D)G if
of G̃ form a subset of the edges of G. We say that a network (J,
G̃
˜
G̃ is a pruning of G, D̃ = D, and Jij = Jij for all edges (ij) ∈ G̃. The following lemma shows
that flexible cliques are ‘inherited’ by pruning.
˜ D) be a pruning of (J, D)G . Consider a clique σ ∈ X(G̃) ⊂ X(G). If
Lemma 4.6. Let (J,
G̃
˜ D) .
σ is a flexible clique of (J, D)G , then σ is also a flexible clique of (J,
G̃
Proof. This follows from the Definition 1.3 of flexible cliques. If σ ∈ X(G) is a flexible
clique, then there exist perturbations As and Au consistent with G so that σ is maximally
stable for (J + As , D)G and minimally unstable for (J + Au , D)G . If we also have σ ∈ X(G̃),
define the perturbations Ãs and Ãu , consistent with G̃, by setting all the entries in As and Au
corresponding to the pruned edges to 0. Since X(G̃) ⊂ X(G), it follows that the perturbations
˜ D) .
Ãs and Ãu realize σ as a flexible clique of (J,
G̃
We now have all the ingredients necessary for proving Theorem 1.5.
Proof of Theorem 1.5. We prove first that all rank 1 networks (J, D) ∈ N (n) are maximally flexible. Since the matrix −D + J has rank 1 and negative entries on the diagonal,
T
there exists two vectors x, y ∈ Rn , with xi yi > 0 for all i = 1, ..., n, sothat
 + J = −xy .
r −D
yi
Using these two vectors, we construct the diagonal matrix d = diag
. Let P be the
xi
matrix obtained from −D + J by conjugation with the matrix d, i.e. P = d(−D + J)d−1 . It
has entries
r
r
yi
xj
√
√
(−xi yj )
= − xi yi xj yj ,
Pij =
xi
yj
21

and is therefore a rank 1 symmetric matrix. By Proposition 4.5 it follows that the network
(dJd−1 , dDd−1) is a maximally flexible network in N (n). Since P and −D + J are similar
matrices, related via conjugation by a diagonal matrix, it follows that all corresponding principal submatrices Pσ and (−D + J)σ are also similar. Hence, a perturbation A of the network
(J, D) has exactly the same stable and unstable cliques as a perturbation dAd−1 of the network
(dJd−1 , dDd−1). Since (dJd−1, dDd−1 ) is maximally flexible, it follows that (J, D) is also a
maximally flexible network in N (n).
Now let (J, D)G ∈ N (G) be a G-constrained network with a rank 1 completion. We can
¯ D) ∈ N (n)
think of the graph G as a pruning of the complete graph Kn on n vertices. Let (J,
be a rank 1 completion of the network (J, D)G . By the previous arguments, the network
¯ D) is maximally flexible in N (n), and has flexibility 2n − n − 1. In particular, any clique
(J,
¯ D). By Lemma 4.6, σ is also a
σ ∈ X(G) with |σ| ≥ 2 is a flexible clique of the network (J,
flexible clique of (J, D)G . Since X(G) has |X(G)| − n − 1 cliques with more than two neurons,
it follows that the flexibility of (J, D) is |X(G)| − n − 1, which is maximal.

4.3

Proof of Theorems 1.7 and 1.8

First we prove our main result, Theorem 1.7.
Proof of Theorem 1.7. Let (J, D)G be a maximally flexible threshold-linear network in
N (G). This means that all the cliques σ ∈ X(G) with at least two neurons are flexible. Since
all flexible cliques are marginal cliques, Theorem 1.2 gives that the corresponding principal
submatrices of (−D + J)σ are all marginally stable. In particular, all 2 × 2 and 3 × 3 principal
submatrices are marginally stable, and thus by Lemma 3.12 it follows that
det(−D + J)σ = 0,

for all σ ∈ X(G) with |σ| = 2 or 3.

Applying Lemma 3.6 to −D + J, it follows that for all (ij) ∈ G, the entry Jij 6= 0. Thus
the network (J, D)G has no silent connections. By Lemma 3.11, the homology condition
H1 (X(G); Z) = 0 implies that H 1 (X(G); Z2 ) = H 1 (X(G); R) = 0, and then by Proposition 3.9
it follows that the matrix −D + J has a rank 1 completion. At the level of networks, this
translates to (J, D)G having a rank 1 completion.
Theorem 1.8 states that for the set N (n) of unconstrained threshold-linear networks, the
maximally flexible networks are exactly the rank 1 networks. The proof is a direct application
of Theorems 1.7 and 1.5.
Proof of Theorem 1.8. (⇒) This direction is a direct consequence of Theorem 1.7. Let
(J, D) ∈ N (n) be a maximally flexible network. Its graph is the complete graph Kn , and thus
the corresponding clique complex X(Kn ) is contractible and satisfies H1 (X(Kn ), Z) = 0. By
Theorem 1.7 it follows that (J, D) is a rank 1 network. (⇐) This follows from first part of
Theorem 1.5.
We also give a second proof of Theorem 1.8, without appealing to the homological arguments used in the proof of Theorem 1.7.

22

Proof of Theorem 1.8 without homology/cohomology. (⇒) Suppose (J, D) ∈ N (n) is
a maximally flexible network. This means (J, D) must have flexibility 2n −n−1. In particular,
all 2 × 2 and 3 × 3 principal submatrices of −D + J must be marginally stable, and so by
Lemma 3.12 all 2 × 2 and 3 × 3 principal minors must vanish. This, together with the fact
that the diagonal entries are strictly negative, implies that −D + J satisfies the hypotheses
of Lemma 3.7, whose proof does not rely on cohomology arguments, and is thus rank 1. (⇐)
This follows from first part of Theorem 1.5, which does not use homology or cohomology
arguments.

5

Acknowledgments

C.C. was supported by NSF DMS-0920845 and a Courant Instructorship. A.D. was partially supported by NSF DMS-0505767. V.I. was supported by NSF DMS-0967377 and the Swartz Foundation.

References
[1] L F Abbott and W G Regehr, Synaptic computation, Nature 431 (2004), no. 7010, 796–803.
[2] P Dayan and L F Abbott, Theoretical neuroscience, MIT Press, 2001.
[3] G B Ermentrout and D H Terman, Mathematical foundations of neuroscience, Springer, 2010.
[4] MN Geffen, BM Broome, G Laurent, and M Meister, Neural encoding of rapidly fluctuating
odors, Neuron 61 (2009), no. 4, 570–586.
[5] R H Hahnloser, H S Seung, and J J Slotine, Permitted and forbidden sets in symmetric thresholdlinear networks, Neural Comput 15 (2003), no. 3, 621–638.
[6] Allen Hatcher, Algebraic topology, Cambridge University Press, Cambridge, 2002.
[7] J J Hopfield, Neural networks and physical systems with emergent collective computational abilities, Proc. Natl. Acad. Sci. 79 (1982), no. 8, 2554–2558.
[8] V Itskov, C Curto, E Pastalkova, and G Buzsáki, Cell assembly sequences arising from spike
threshold adaptation keep track of time in the hippocampus, J Neurosci 31 (2011), no. 8, 2828–
2834.
[9] Matthew Kahle, Topology of random clique complexes, Discrete Math. 309 (2009), no. 6, 1658–
1671.
[10] G A Kerchner and R A Nicoll, Silent synapses and the emergence of a postsynaptic mechanism
for LTP, Nat Rev Neurosci 9 (2008), no. 11, 813–825.
[11] B L McNaughton, F P Battaglia, O Jensen, E I Moser, and M B Moser, Path integration and
the neural basis of the ’cognitive map’, Nat Rev Neurosci 7 (2006), no. 8, 663–678.
[12] S Romani and M Tsodyks, Continuous attractors with morphed/correlated maps, PLoS Comput
Biol 6 (2010), no. 8.

23

[13] U Rutishauser, A N Mamelak, and E M Schuman, Single-trial learning of novel stimuli by
individual neurons of the human hippocampus-amygdala complex, Neuron 49 (2006), no. 6, 805–
813.
[14] A Samsonovich and B L McNaughton, Path integration and cognitive mapping in a continuous
attractor neural network model, J Neurosci 17 (1997), no. 15, 5900–5920.

24

