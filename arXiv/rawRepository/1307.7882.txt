The genetic code, algebra of projection operators
and problems of inherited biological ensembles
Sergey V. Petoukhov
Head of Laboratory of Biomechanical System, Mechanical Engineering Research Institute
of the Russian Academy of Sciences, Moscow
spetoukhov@gmail.com, petoukhov@imash.ru, http://petoukhov.com/
Comment: Some materials of this article were presented in the international “Symmetry
Festival-2013” (Delft, Netherlands, August 2-7, 2013, http://symmetry.hu/festival2013.html),
the international conference “Theoretical approaches to bioinformation systems - TABIS
2013” (Belgrad, Serbia, September 17-22, 2013, http://www.tabis2013.ipb.ac.rs/)
Summary. This article is devoted to applications of projection operators to simulate
phenomenological properties of the molecular-genetic code system. Oblique projection
operators are under consideration, which are connected with matrix representations of the
genetic coding system in forms of the Rademacher and Hadamard matrices. Evidences are
shown that sums of such projectors give abilities for adequate simulations of ensembles of
inherited biological phenomena including ensembles of biological cycles, morphogenetic
ensembles of phyllotaxis patterns, mirror-symmetric patterns, etc. For such modeling, the
author proposes multidimensional vector spaces, whose subspaces are under a selective
control (or coding) by means of a set of matrix operators on base of genetic projectors.
Development of genetic biomechanics is discussed. The author proposes and describes
special systems of multidimensional numbers under names “tensorcomplex numbers”,
“tensorhyperbolic numbers”, etc. Described results can be used for developing algebraic
biology, biotechnical applications and some other fields of science and technology.
Content
About	  the	  partnership	  of	  the	  genetic	  code	  and	  mathematics	  
Genetic Rademacher matrices as sums of projectors
Genetic Hadamard matrices as sums of projectors
Inherited biocycles and a selective control of cyclic changes of vectors in a
multidimensional space. Problems of genetic biomechanics.
5. About a direction of rotation of vectors under influence of the cyclic groups of the
operators
6. Hamilton’s quaternions, Cockle’s split-quaternions, their extensions and projector
operators
7. Genetic matrices as sums of tensor products of oblique (2*2)-projectors. Extensions
of the genetic matrices into (2n*2n)-matrices
8. An application of oblique projectors to simulate ensembles of phyllotaxis patterns in
living bodies
9. Hyperbolic numbers, genetic projectors and the Weber-Fechner law of psychophysics
10. Reflection operators and genetic projectors.
11. The symbolic matrices of genetic duplets and triplets
12. Genetic projectors and evolutionary changes of dialects of the genetic code
13. About «tensorcomplex» numbers
14. About «tensorhyperbolic» numbers
1.
2.
3.
4.

Some concluding remarks
Appendix 1. Complex numbers, cyclic groups and sums of genetic projectors
Appendix 2. Hyperbolic numbers and sums of genetic projectors
Appendix 3. Another tensor family of genetic Hadamard matrices
Appendix 4. About some applications in robotics
1. ABOUT THE PARTNERSHIP OF THE GENETIC CODE AND MATHEMATICS
Science has led to a new understanding of life itself: “Life is a partnership between
genes and mathematics” [Stewart, 1999]. But what kind of mathematics can be a partner for
the genetic coding system? This article shows some evidences that algebra of projectors can
be one of main parts of such mathematics. Till now the notion of projection operators (or
briefly, projectors) was one of important in many fields of non-biological science: physics
including quantum mechanics; mathematics; computer science and informatics including
theory of digital codes; chemistry; mathematical logic, etc. On basis of materials of this
article, the author thinks that projectors can become one of the main notions and effective
mathematical tools in mathematical biology. Moreover they will help not only to a
development of algebraic biology and a new understanding of living matter but also to a
mutual enrichment of different branches of science.
Projectors
are
expressed
by
means
of
square
matrices
(http://mathworld.wolfram.com/ProjectionMatrix.html,
https://en.wikipedia.org/wiki/Projection_(linear_algebra)). A necessary and sufficient
condition that a matrix P is a projection operator is the fulfillment of the following condition:
P2 = P. A set of projectors is separated into two sub-sets:
•
•

orthogonal projectors, which are expressed by symmetric matrices and theory of
which is well developed and has a lot of applications;
oblique projectors, which are expressed by non-symmetric matrices; their theory and
its applications are developed much weaker as the author can judge. Namely oblique
projectors will be the main objects of attention in this article.

This article is a continuation and an essential development of the author's article about
relations between the genetic system and projection operators [Petoukhov, 2010].
In accordance with Mendel's laws of independent inheritance of traits, information
from the micro-world of genetic molecules dictates constructions in the macro-world of
living organisms under strong noise and interference. This dictation is realized by means of
unknown algorithms of multi-channel noise-immunity coding. For example, in human
organism, his skin color, eye color and hair color are inherited genetically independently of
each other. It is possible if appropriate kinds of information are conducted via independent
informational channels and if a general "phase space" of living organism contains sub-spaces
with a possibility of a selective control or a selective coding of processes in them. So, any
living organism is an algorithmic machine of multi-channel noise-immunity coding with
ability to a selective control and coding of different sub-spaces of its phase space (a model
approach to phase spaces with a selective control of their sub-spaces is presented in this
article). This machine works in conditions of ontogenetic development of the organism when
a multi-dimensionality of its phase space is increased step by step.
To understand such genetic machine, it is appropriate to use the theory of noiseimmunity coding and transmission of digital information, taking into account the discrete

nature of the genetic code. In this theory, mathematical matrices have the basic importance.
The use of matrix representations and analysis in the study of phenomenological features of
molecular-genetic ensembles has led to the development of a special scientific direction
under a name "Matrix Genetics" [Petoukhov, 2008; Petoukhov, He, 2009]. Namely
researches of the "matrix genetics" gave results that are represented in this article.
Concerning the theme of projectors in inherited biological phenomena, one can note
that our genetically inherited visual system works on the principle of projection of external
objects at the retina. This projection is modeled using projection operators. The author
believes that the value of projectors for bioinformatics is not limited to this single fact of
biological significance of projection operators, but that the whole system of genetic and
sensory informatics is based on their active use. This ubiquitous use of projection operators
reflects and ensures (in some degree) the unity of any organism and interrelations of its parts.
The set of projection operators, which are associated with the matrix representation of
the genetic code, provides new opportunities for modeling ensembles of inherited cycles;
ensembles of phyllotaxis structures; a numeric specificity of reproduction of genetic
information in acts of mitosis and meiosis of biological cells, etc. In the frame of the
"projector conception" arised here in genetic informatics, some features of evolutionary
transformations of variants (or dialects) of the genetic code are clarified.
The main mathematical objects of the article are four matrices R4, R8, H4 and H8
shown on Figure 1. Why these numeric matrices are chosen from infinite set of matrices? The
reason is that they are connected with phenomenology of the genetic code system in matrix
forms of its representation as it was shown in works [Petoukhov, 2008b, 2011a,b, 2012a,b]
and as it will be additionally demonstrated in the end of this article. The matrices R4 and R8
are conditionally termed “Rademacher matrices” because each of their columns represents
one of known Rademacher functions. The matrices H4 and H8 belong to a great set of
Hadamard matrices, which are widely used for noise-immunity coding in technologies of
signals processing and which are connected with complete orthogonal systems of Walsh
functions.
1 1 1 1 1 1 -1 -1
1 1 1 1 1 1 -1 -1
1 1 1 -1
-1 -1 1 1 -1 -1 -1 -1
R4 = -1 1 -1 -1 ;
R8 = -1 -1 1 1 -1 -1 -1 -1
1 -1 1 1
1 1 -1 -1 1 1 1 1
-1 -1 -1 1
1 1 -1 -1 1 1 1 1
-1 -1 -1 -1 -1 -1 1 1
-1 -1 -1 -1 -1 -1 1 1

1
-1
H4 = 1
-1

1
1
-1
-1

-1
1
1
-1

1
1
1 ;
1

H8 =

1
1
-1
-1
1
1
-1
-1

-1
1
1
-1
-1
1
1
-1

1
1
1
1
-1
-1
-1
-1

-1
1
-1
1
1
-1
1
-1

-1
-1
1
1
1
1
-1
-1

1
-1
-1
1
-1
1
1
-1

1
1
1
1
1
1
1
1

-1
1
-1
1
-1
1
-1
1

Figure	  1:	  numeric	  matrices	  H4,	  H8,	  R4	  and	  R8	  which	  are	  connected	  with	  phenomenology	  
of	  the	  genetic	  coding	  system	  [Petoukhov,	  2011,	  2012a,b]	  
Every of these matrices can be decomposed into sum of sparse matrices, each of
which contains only one non-zero column. Such decomposition can be conditionally termed a
«column decomposition». Every of such matrices can be also decomposed into a sum of
sparse matrices, each of which contains only one non-zero row. Such decomposition can be
conditionally termed a «row decomposition».
2. GENETIC RADEMACHER MATRICES AS SUMS OF PROJECTORS
Let us begin with the column decomposition R4=c0+c1+c2+c3 and the row decomposition
R4=r0+r1+r2+r3 of the Rademacher (4*4)-matrix R4 (Figure 2).
1000
0 100
00 10
0 0 0 -1
	  
R4	  =	  c0+c1+c2+c3	  =	   -1 0 0 0 + 0 1 0 0 + 0 0 -1 0 + 0 0 0 -1
1000
0 -1 0 0
00 10
000 1
-1 0 0 0
0 -1 0 0
0 0 -1 0
000 1
	  
1	  1	  1	  -­‐1	   	  
R4	  =	  r0+r1+r2+r3	  =	   0	  0	  0	  	  0	   +	  
0	  0	  0	  	  0	  	  
0	  0	  0	  	  0	  

	  0	  0	  	  	  0	  	  0	   	  
-­‐1	  1	  -­‐1	  -­‐1	   +	  
	  0	  0	  	  	  0	  	  0	  
	  0	  0	  	  	  0	  	  0	  

0	  	  0	  0	  0	   	  
0	  	  0	  0	  0	   +	  
1	  -­‐1	  1	  1	  
0	  	  0	  0	  0	  

	  0	  	  0	  	  0	  	  0	  
	  0	  	  0	  	  0	  	  0	  
	  0	  	  0	  	  0	  	  0	  
-­‐1	  -­‐1	  -­‐1	  1	  

Figure 2. The «column decomposition» (upper layer) and the «row decomposition»
(bottom layer) of the Rademacher matrix R4 from Figure 1
Each of these sparse matrices c0, c1, c2, c3 and r0, r1, r2, r3 is a projection operator
because it satisfies the criterion of projectors P2=P (for example, c02=c0, etc). Every of these
projectors is an oblique (non-ortogonal) projector because it is expressed by means of a nonsymmetrical matrix. Every of sets (c0, c1, c2, c3) and (r0, r1, r2, r3) consists of noncommutative projectors. We will conditionally name projectors c0, c1, c2, c3 as «column
projectors» and projectors r0, r1, r2, r3 as «row projectors».
Let us examine all possible variants of sums of pairs of the different column
projectors c0, c1, c2 and c3: (c0+c1), (c0+c2), (c0+c3), (c1+c2), (c1+c3), (c2+c3). The result of this
examination is the following: matrices (c0+c1) and (c2+c3) with a weight coefficient 2-0.5 lead
to cyclic groups with their period 8 in cases of their exponentiation: (2-0.5*(c0+c1))n =
(2-0.5*(c0+c1))n+8, (2-0.5*(c2+c3))n = (2-0.5*(c2+c3))n+8, where n = 1, 2, 3,… (Figure 3).

	  
	  2-­‐0.5,	  	  	  	  2-­‐0.5,	  	  	  0,	  	  0	   	   	  
-­‐0.5
1
(2 *(c0+c1)) 	  =	   -­‐2-­‐0.5,	  	  	  2-­‐0.5,	  	  	  0,	  	  0	   ;	   (2-­‐0.5*(c2+c3))1	  =	  
	  2-­‐0.5,	  	  -­‐2-­‐0.5,	  	  	  0,	  	  0	  
-­‐2-­‐0.5,	  	  -­‐2-­‐0.5,	  	  0,	  	  0	  
	  
	  
	   	  
	  

0,	  	  0,	  	  	  2-­‐0.5,	  	  	  	  -­‐2-­‐0.5	  	  	  
0,	  	  0,	  	  -­‐2-­‐0.5,	  	  	  -­‐2-­‐0.5	  	  	  
0,	  	  0,	  	  	  2-­‐0.5,	  	  	  	  	  2-­‐0.5	  
0,	  	  0,	  	  -­‐2-­‐0.5,	  	  	  	  2-­‐0.5	  
	  

	  
	  0,	  	  	  	  	  	  	  	  1,	  	  	  	  	  	  	  0,	  	  	  0	  
-­‐0.5
2
(2 *(c0+c1)) 	  =	   -­‐1,	  	  	  	  	  	  	  0,	  	  	  	  	  	  	  0,	  	  	  0	  
	  1,	  	  	  	  	  	  	  	  0,	  	  	  	  	  	  	  0,	  	  	  0	  
	  0,	  	  	  	  	  	  -­‐1,	  	  	  	  	  	  	  0,	  	  	  0	  
	  
	  
	  
-­‐2-­‐0.5,	  	  	  	  2-­‐0.5,	  	  	  0,	  	  0	  
(2-­‐0.5*(c0+c1))3	  =	   -­‐2-­‐0.5,	  	  	  -­‐2-­‐0.5,	  	  0,	  	  0	  
	  2-­‐0.5,	  	  	  	  2-­‐0.5,	  	  	  0,	  	  0	  
2-­‐0.5,	  	  	  	  -­‐2-­‐0.5,	  	  	  0,	  	  0	  
	  
	  
	  
-­‐1,	  	  	  	  	  	  	  0,	  	  	  	  	  	  0	  ,	  	  	  	  0	  
(2-­‐0.5*(c0+c1))4	  =	   	  0,	  	  	  	  	  	  -­‐1,	  	  	  	  	  	  0,	  	  	  	  	  0	  
	  0,	  	  	  	  	  	  	  1,	  	  	  	  	  	  0,	  	  	  	  	  0	  
	  1,	  	  	  	  	  	  	  0,	  	  	  	  	  	  0,	  	  	  	  	  0	  
	  
	  
	  
-­‐2-­‐0.5,	  	  	  -­‐2-­‐0.5,	  	  	  0,	  	  0	  
(2-­‐0.5*(c0+c1))5	  =	   	  2-­‐0.5,	  	  	  -­‐2-­‐0.5,	  	  	  0,	  	  0	  
-­‐2-­‐0.5,	  	  	  	  2-­‐0.5,	  	  	  0,	  	  0	  
	  2-­‐0.5,	  	  	  	  2-­‐0.5,	  	  	  0,	  	  	  0	  
	  
	  
	  
	  0,	  	  	  	  	  	  -­‐1,	  	  	  	  	  	  	  0,	  	  	  	  0	  
(2-­‐0.5*(c0+c1))6	  =	   	  1,	  	  	  	  	  	  	  0,	  	  	  	  	  	  	  0,	  	  	  	  0	  
-­‐1,	  	  	  	  	  	  0,	  	  	  	  	  	  	  	  0,	  	  	  	  0	  
	  0,	  	  	  	  	  	  1,	  	  	  	  	  	  	  	  0,	  	  	  	  0	  
	  
	  
	  
	  2-­‐0.5,	  	  	  	  -­‐2-­‐0.5,	  	  0,	  	  0	  
-­‐0.5
7
(2 *(c0+c1)) 	  =	   	  2-­‐0.5,	  	  	  	  	  2-­‐0.5,	  	  	  0,	  	  0	  
-­‐2-­‐0.5,	  	  	  -­‐2-­‐0.5,	  	  	  0,	  	  0	  
-­‐2-­‐0.5,	  	  	  	  2-­‐0.5,	  	  	  0,	  	  0	  
	  
	  
	  
	  1,	  	  	  	  	  	  0,	  	  	  	  	  	  0	  ,	  	  	  	  0	  
(2-­‐0.5*(c0+c1))8	  =	   	  0,	  	  	  	  	  	  1,	  	  	  	  	  	  0,	  	  	  	  	  0	  
	  0,	  	  	  	  	  -­‐1,	  	  	  	  	  0,	  	  	  	  	  0	  
-­‐1,	  	  	  	  	  	  0,	  	  	  	  	  0,	  	  	  	  	  0	  
	  
	  
	  
2-­‐0.5,	  	  	  	  2-­‐0.5,	  	  	  	  0,	  	  0	  
-­‐0.5
9
(2 *(c0+c1)) 	  =	   -­‐2-­‐0.5,	  	  	  2-­‐0.5,	  	  	  0,	  	  0	  
	  2-­‐0.5,	  	  -­‐2-­‐0.5,	  	  	  0,	  	  0	  
-­‐2-­‐0.5,	  	  -­‐2-­‐0.5,	  	  	  0,	  	  0	  

	   	  
0,	  	  0,	  	  	  	  1,	  	  	  	  	  	  0	  
-­‐0.5
2
;	   (2 *(c2+c3)) 	  =	   0,	  	  0,	  	  	  	  0,	  	  	  	  -­‐1	  
0,	  	  0,	  	  	  	  0,	  	  	  	  	  	  1	  
0,	  	  0,	  	  	  -­‐1,	  	  	  	  	  0	  
	   	  
	  
	   	  
0,	  	  0,	  	  	  	  2-­‐0.5,	  	  	  	  	  2-­‐0.5	  	  	  
;	   (2-­‐0.5*(c2+c3))3	  =	   0,	  	  0,	  	  	  	  2-­‐0.5,	  	  	  	  -­‐2-­‐0.5	  	  	  
0,	  	  0,	  	  	  -­‐2-­‐0.5,	  	  	  	  	  2-­‐0.5	  
0,	  	  0,	  	  	  -­‐2-­‐0.5,	  	  	  	  -­‐2-­‐0.5	  
	   	  
	  
	   	  
0,	  	  0,	  	  	  	  	  0,	  	  	  	  	  	  	  1	  
;	   2-­‐0.5*(c2+c3)4	  =	   0,	  	  0,	  	  	  	  	  1,	  	  	  	  	  	  	  0	  
0,	  	  0,	  	  	  	  -­‐1,	  	  	  	  	  	  0	  
0,	  	  0,	  	  	  	  	  0,	  	  	  	  	  	  -­‐1	  
	   	  
	  
	   	  
0,	  	  0,	  	  -­‐2-­‐0.5,	  	  	  2-­‐0.5	  	  	  
;	   (2-­‐0.5*(c2+c3))5	  =	   0,	  	  0,	  	  	  2-­‐0.5,	  	  	  	  2-­‐0.5	  	  	  
0,	  	  0,	  	  -­‐2-­‐0.5,	  	  -­‐2-­‐0.5	  
0,	  	  0,	  	  	  2-­‐0.5,	  	  -­‐2-­‐0.5	  
	   	  
	  
	   	  
0,	  	  0,	  	  	  	  -­‐1,	  	  	  	  	  	  0	  
;	   (2-­‐0.5*(c2+c3))6	  =	   0,	  	  0,	  	  	  	  	  0,	  	  	  	  	  	  1	  
0,	  	  0,	  	  	  	  	  0,	  	  	  	  	  -­‐1	  
0,	  	  0,	  	  	  	  	  1,	  	  	  	  	  	  0	  
	   	  
	  
	   	  
0,	  	  0,	  	  	  	  -­‐2-­‐0.5,	  	  	  -­‐2-­‐0.5	  	  	  
-­‐0.5
7
;	   (2 *(c2+c3)) 	  =	   0,	  	  0,	  	  	  	  -­‐2-­‐0.5,	  	  	  	  2-­‐0.5	  	  	  
0,	  	  0,	  	  	  	  	  2-­‐0.5,	  	  	  -­‐2-­‐0.5	  
0,	  	  0,	  	  	  	  	  2-­‐0.5,	  	  	  	  2-­‐0.5	  
	   	  
	  
	   	  
0,	  	  0,	  	  	  	  	  	  0,	  	  	  	  	  	  	  -­‐1	  
;	   (2-­‐0.5*(c2+c3))8	  =	   0,	  	  0,	  	  	  	  	  -­‐1,	  	  	  	  	  	  	  	  0	  
0,	  	  0,	  	  	  	  	  	  1,	  	  	  	  	  	  	  	  0	  
0,	  	  0,	  	  	  	  	  	  0,	  	  	  	  	  	  	  	  1	  
	   	  
	  
	   	  
0,	  	  0,	  	  	  2-­‐0.5,	  	  	  	  -­‐2-­‐0.5	  	  	  
-­‐0.5
9
;	   (2 *(c2+c3)) 	  =	   0,	  	  0,	  	  -­‐2-­‐0.5,	  	  	  -­‐2-­‐0.5	  	  	  
0,	  	  0,	  	  	  2-­‐0.5,	  	  	  	  	  2-­‐0.5	  
0,	  	  0,	  	  -­‐2-­‐0.5,	  	  	  	  2-­‐0.5	  

Figure 3. The illustration of cyclic groups of operators on the basis of sums of projection
operators (c0+c1) and (c2+c3) from Figure 2 in cases of their exponentiation.
These two sums of column projectors (c0+c1) and (c2+c3) are marked by green colour
in the left table on Figure 4, where every	   of	   cells	   represents	   a	   sum	   of	   those	   projectors,	  
which	  denote	  its	  column	  and	  row.
Two other examined sums of column projectors (c0+c2) and (c1+c3) is doubled when
squaring: (c0+c2)n = 2n-1*(c0+c2), (c1+c3)n = 2n-1*(c1+c3), where n = 1, 2, 3,… (these sums are
marked by red colours in the left table on Figure 4) . This doubling reminds dichotomic

dividing of biological cells in a result of mitosis when doubling of genetic information
occurs.
The last examined sums of the column projectors (c0+c3) and (c1+c2) possess the
following feature. Matrices of their second power is quadrupled in a result of exponentiation
in integer powers: ((c0+c3)2)n = 4n-1*(c0+c3)2, ((c1+c2)2)n = 4n-1*(c1+c2)2, where n = 1, 2, 3…
(this feature can be used to simulate a genetic phenomenon of tetra-reproduction of gametes
and genetic information in a course of meiosis). The cells with these sums (c0+c3) and (c1+c2)
are marked by yellow colour in the left table on Figure 4.
If we examine the row projectors r0, r1, r2 and r3 from Figure 2, we receive the same
tabular structure with a small change: red and yellow cells are swapped (Figure 4, right).
Matrices 2-0.5*(r0+r1) and 2-0.5*(r2+r3) are basises for cyclic groups with a period 8 in relation
to their exponentiation (green cells in the right table on Figure 4). Matrices (r0+r2) and (r1+r3)
is doubled when squaring: (r0+r2)n = 2n-1*(r0+r2), (r1+r3)n = 2n-1*(r1+r3), where n = 1, 2, 3,…
(red cells in the right table on Figure 4). Matrices (r0+r3) and (r1+r2) possess the «quadruplet»
property: ((r0+r3)2)n = 4n-1*(r0+r3)2, ((r1+r2)2)n = 4n-1*(r1+r2)2, where n = 1, 2, 3… (yellow cells
in the right table on Figure 4). The cells on the main diagonal correspond to sum of two
projectors themselves: (ci+ci)n = 2n*ci, (ri+ri)n = 2n*ri, where i = 0, 1, 2, 3.

c0
c1
c2
c3

c0
c1
c2
c3
c0+c1 c0+c2 c0+c3
c1+c0
c1+c2 c1+c3
c2+c0 c2+c1
c2+c3
c3+c0 c3+c1 c3+c2
-

r0
r1
r2
r3

r0
r1
r2
r3
r0+r1 r0+r2 r0+r3
r1+r0
r1+r2 r1+r3
r2+r0 r2+r1
r2+r3
r3+r0 r3+r1 r3+r2
-

Figure 4. Tables of some features of sums of pairs of different «column projectors» c0, c1, c2,
c3 and of «row projectors» r0, r1, r2, r3 (from the Rademacher matrix R4 on Figure 2) in
relation to their exponentiation. Explanations in text.
One can mention that the structure of this symmetric table is unexpectedly coincided
with the structure of the typical (4*4)-matrix of dyadic shifts, which is known in theory of
signal processing and which is related with some phenomenologic properties of moleculargenetic systems [Ahmed, Rao, 1975; Petoukhov, 2008, 2012a; Petoukhov, He, 2009].
It should be noted that cyclic features of (4*4)-matrices 2-0.5*(c0+c1), 2-0.5*(c2+c3), 2*(r0+r1) and 2-0.5*(r2+r3) in cases of their exponentiation exist due to their connections with
matrix representations of 2-parametric complex numbers in 4-dimensional space; these
connections are shown by means of a new decomposition of each of these matrices into sum
of new sparse matrices e0 and e1 (Figures 5, 6, two upper levels, where the multiplication
table for e0 and e1 in the right column is identical to the multiplication table of complex
numbers). The dichotomic features of (4*4)-matrices (c0+c2), (c1+c3), (r0+r3), (r1+r2) and
tetra-reproduction features of (4*4)-matrices ((c0+c3)2)n = 4n-1*(c0+c3)2, ((c1+c2)2)n = 4n1
*(c1+c2)2, ((r0+r2)2)n = 4n-1*(r0+r2)2, ((r1+r3)2)n = 4n-1*(r1+r3)2 exist due to their connections
with matrix representations of 2-parametric hyperbolic numbers in 4-dimensional space
(Figures 5, 6, four bottom levels, where the multiplication table for e0 and e1 in the right
column is identical to the multiplication table of hyperbolic numbers). Synonyms of
hyperbolic numbers are Lorentz numbers, split-complex numbers, double numbers, perplex
numbers, etc. - http://en.wikipedia.org/wiki/Split-complex_number). Hyperbolic numbers are
a two-dimensional commutative algebra over the real numbers. Additional details about such
0.5

(4*4)-matrix representations of complex numbers and hyperbolic numbers see in [Petoukhov,
2012b].

c0+с1 =

c2+c3 =

c0+c2=

c1+c3 =

0.5*(c0+c3)2 =

0.5*(c1+c2)2 =

1 1
-1 1
1 -1
-1 -1

0
0
0
0

0
0
0
0

0
0
0
0

0
0
0
0

1 -1
-1 -1
1 1
-1 1

1
-1
1
-1

0
0
0
0

1
-1
1
-1

0
0
0
0

0
0
0
0

1
1
-1
-1

0
0
0
0

-1
-1
1
1

1
0
0
-1

0
0
0
0

0
0
0
0

-1
0
0
1

0
0
0
0

0
1
-1
0

0
-1
1
0

0
0
0
0

= e0+e1 =

= e0+e1 =

= e0+e1 =

= e0+e1 =

= e0+e1 =

= e0+e1=

1 0
0 1
0 -1
-1 0

0
0
0
0

0
0
0
0

0
0
0
0

0
0
0
0

0 -1
-1 0
1 0
0 1

1
-1
0
0

0
0
0
0

0
0
1
-1

0
0
0
0

0
0
0
0

1
1
0
0

0
0
0
0

0
0
1
1

1
0
0
0

0
0
0
0

0
0
0
0

0
0
0
1

0
0
0
0

0
1
0
0

0
0
1
0

0
0
0
0

+

+

+

+

+

+

0
-1
1
0

1
0
0
-1

0
0
0
0

0
0
0
0

;

0
0
0
0

0 1 0
0 0 -1
0 0 1
0 -1 0

;

0
0
1
-1

0
0
0
0

1
-1
0
0

0
0
0
0

0
0
0
0

0
0
-1
-1

0
0
0
0

-1
-1
0
0

0
0
0
-1

0
0
0
0

0
0
0
0

0
0
0
0

0
0
-1
0

0
-1
0
0

e0
e1

e0
e0
e1

e1
e1
-e0

e0
e1

e0
e0
e1

e1
e1
-e0

e0
e1

e0
e0
e1

e1
e1
e0

;

e0
e1

e0
e0
e1

e1
e1
e0

-1
0
0
0

;

e0
e1

e0
e0
e1

e1
e1
e0

0
0
0
0

;

e0
e1

e0
e0
e1

e1
e1
e0

;

Figure 5. The table represents special decompositions of (4*4)-matrices (c0+c1), (c2+c3),
(c0+c2), (c1+c3), 0.5*(c0+c3)2 and 0.5*(c1+c2)2 into sum of two matrices e0+e1 (see also
Figures 2 and 4). The table shows direct relations of these matrices with matrix
representations of 2-parametric complex numbers and hyperbolic numbers. Here c0, c1, c2 and
c3 are column projectors from Figure 2. For each set of matrices e0 and e1 at every tabular
level, the right column of this table contains its multiplication table: for two upper levels it is
a known multiplication table of complex numbers; for other four levels it is a known
multiplication table of hyperbolic numbers.

r0+r1 =

1 1 1 -1
-1 1 -1 -1
0 0 0 0
0 0 0 0

= e0+e1=

1
0
0
0

0
1
0
0

1 0
0 -1
0 0
0 0

+

0 1 0 -1
-1 0 -1 0
0 0 0 0
0 0 0 0

;

e0
e1

e0
e0
e1

e1
e1
-e0

r2+r3 =

0.5*(r0+r2)2=

0.5*(r1+r3)2=

r0+r3 =

r1+r2 =

0 0 0 0
0 0 0 0
1 -1 1 1
-1 -1 -1 1
1
0
1
0

0
0
0
0

1
0
1
0

0
0
0
0

0 0
0 1
0 0
0 -1

0
0
0
0

0
-1
0
1

1 1 1 -1
0 0 0 0
0 0 0 0
-1 -1 -1 1

0 0 0 0
-1 1 -1 -1
1 -1 1 1
0 0 0 0

= e0+e1=

= e0+e1=

= e0+e1=

= e0+e1=

= e0+e1=

0 0
0 0
1 0
0 -1

0
0
1
0

0
0
0
1

1
0
0
0

0
0
0
0

0
0
1
0

0
0
0
0

0
0
0
0

0
1
0
0

0
0
0
0

0
0
0
1

1
0
0
0

1 0
0 0
0 0
0 -1

0
0
0
1

0
-1
0
0

0
1
0
0

0
0
1
0

0
0
1
0

+

+

+

0 0 0
0 0 0
0 -1 0
-1 0 -1

0
0
1
0

0
0
1
0

0
0
0
0

0
0
0
0

0 0
0 0
0 0
0 -1

1
0
0
0

;

0 0
0 -1
0 0
0 0

;

0 0 1 -1
0 0 0 0
0 0 0 0
-1 -1 0 0

+

;

0 0 0 0
0 0 -1 -1
1 -1 0 0
0 0 0 0

;

;

e0
e1

e0
e0
e1

e1
e1
-e0

e0
e1

e0
e0
e1

e1
e1
e0

e0
e1

e0
e0
e1

e1
e1
e0

e0
e1

e0
e0
e1

e1
e1
e0

e0
e1

e0
e0
e1

e1
e1
e0

Figure 6. The table represents special decompositions of (4*4)-matrices (r0+r1), (r2+r3),
0.5*(r0+r2)2, 0.5*(r1+r3)2, (r0+r3) and (r1+r2) into sum of two matrices e0+e1. The table shows
direct relations of these matrices with matrix representations of 2-parametric complex
numbers and hyperbolic numbers. Here r0, r1, r2 and r3 are row projectors from Figure 2. For
each set of matrices e0 and e1 at every tabular level, the right column of this table contains its
multiplication table: for two upper levels it is a known multiplication table of complex
numbers; for other four levels it is a known multiplication table of hyperbolic numbers.
Now let us turn to the Rademacher (8*8)-matrix R8 (Figure 1) to analyze its column
decomposition R8 = s0+s1+s2+s3+s4+s5+s6+s7 (Fugure 7) and its row decomposition
R8 = v0+v1+v2+v3+v4+v5+v6+v7 (Figure 8).

R8 = s0+s1+s2+s3+
s4+s5+s6+s7 =

1
1
-1
-1
1
1
-1
-1

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

+

0
0
0
0
0
0
0
0

1
1
-1
-1
1
1
-1
-1

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0 +
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

1
1
1
1
-1
-1
-1
-1

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

1
1
-1
-1
1
1
-1
-1

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

+

+

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

1
1
1
1
-1
-1
-1
-1

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0
-1
-1
-1
-1
1
1
1
1

0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

+

+

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

1
1
-1
-1
1
1
-1
-1

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

0
0
0
0
0
0
0
0

-1
-1
-1
-1
1
1
1
1

+

Figure 7. The «column decomposition» R8 = s0+s1+s2+s3+s4+s5+s6+s7 of the Rademacher
(8*8)-matrix R8 (Figure 1) where every of matrices s0, s1, s2, s3, s4, s5, s6, s7 is a projection
operator

R8=v0+v1+v2+v3+v4+v5+v6+v7=

0
0
-1
0
0
0
0
0

0
0
-1
0
0
0
0
0

0
0
1
0
0
0
0
0

0
0
1
0
0
0
0
0

0
0
-1
0
0
0
0
0

0
0
-1
0
0
0
0
0

0
0
-1
0
0
0
0
0

0
0
-1
0
0
0
0
0

+

11
0 0
0 0
0 0
0 0
0 0
0 0
0 0

1
0
0
0
0
0
0
0

1
0
0
0
0
0
0
0

1 1 -1 -1
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0

0
1
0
0
+
0
0
0
0

0
1
0
0
0
0
0
0

0
1
0
0
0
0
0
0

0 0
0 0
0 0
-1-1
0 0
0 0
0 0
0 0

0 0 0 0 0 0
0 0 0 0 0 0
0 0 0 0 0 0
1 1 -1 -1 -1 -1
0 0 0 0 0 0
0 0 0 0 0 0
0 0 0 0 0 0
0 0 0 0 0 0

0
0
0
0
+
1
0
0
0

0
0
0
0
1
0
0
0

0
0
0
0
-1
0
0
0

0
1
0
0
0
0
0
0

0
1
0
0
0
0
0
0

0 0
1 -1
0 0
0 0
0 0
0 0
0 0
0 0

0
-1
0
0
0
0
0
0

0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
-1 1 1 1 1
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0

+

+

0
0
0
0
0
1
0
0

0
0
0
0
0
1
0
0

0
0
0
0
0
-1
0
0

0
0
0
0
0
-1
0
0

0
0
0
0
0
1
0
0

0
0
0
0
0
1
0
0

0
0
0
0
0
1
0
0

0
0
0
0
0
1
0
0

0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
+ 0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
-1 -1 -1 -1 -1
0 0 0 0 0

0
0
0
0
0
0
-1
0

0 0
0 0
0 0
0 0
0 0 +
0 0
1 1
0 0

0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 00
-1 -1 -1 -1

0
0
0
0
0
0
0
-1

0
0
0
0
0
0
0
-1

0
0
0
0
0
0
0
1

0
0
0
0
0
0
0
1

Figure 8. The «row decomposition» R8 = v0+v1+v2+v3+v4+v5+v6+v7 of the
Rademacher (8*8)-matrix R8 (Figure 1) where every of matrices v0, v1, v2, v3, v4, v5, v6, v7 is
a projection operator
By analogy with the described case of the projection (4*4)-operators c0, c1, c2, c3 and
r0, r1, r2, r3 (Figures 3-6), one can analyse features of sums of pairs of the column projection
(8*8)-operators s0, s1, s2, s3, s4, s5, s6, s7 (Figure 7) and of the row projection (8*8)-operators
v0, v1, v2, v3, v4, v5, v6, v7 in relation to their exponentiation. In other words, one can analyze
features of matrices (s0+s1)n, (s0+s3)n,…. and (v0+v1)n, (v0+v2)n, …. where
n =1, 2, 3,… .
Such analysis leads to resulting tables on Figure 9.

s0
s1
s2
s3
s4
s5
s6
s7

s0 s1 s2 s3 s4 s5 s6 s7
-

v0
v1
v2
v3
v4
v5
v6
v7

v0 v1 v2 v3 v4 v5 v6 v7
-

Figure 9. Tables of some features of sums of pairs of different column projectors s0, s1, …, s7
(from Figure 7) and of row projectors v0, v1, …, v7 (from the Rademacher matrix R8 on
Figure 8) in relation to their exponentiation. Explanations in text.
Every of cells in these tables on Figure 9 represents a sum of those projectors which
denote its column and row by analogy with Figure 4. Again we have three types of such sums
which are marked by green, red and yellow and which possess the similar properties in
comparison with the cases on Figure 4.
In each of tables on Figure 9, green cells correspond to those matrices,
exponentiations of which generate 8 cyclic groups. The left table contains 16 green cells that
correspond to the following cyclic groups with a period 8: (2-0.5*(s0+s2))n, (2-0.5*(s0+s3))n,
(2-0.5*(s1+s2))n, (2-0.5*(s1+s3))n, (2-0.5*(s4+s6))n, (2-0.5*(s4+s7))n, (2-0.5*(s5+s6))n, (2-0.5*(s5+s7))n.
The right table contains 16 green cells with the same tabular location that correspond to the

following cyclic groups with a period 8: (2-0.5*(v0+v2))n, (2-0.5*(v0+v3))n, (2-0.5*(v1+v2))n,
(2-0.5*(v1+v3))n, (2-0.5*(v4+v6))n, (2-0.5*(v4+v7))n, (2-0.5*( v5+v6))n, (2-0.5*(v5+v7))n.
Red cells in tables on Figure 9 contain those matrices which possess a doubling
property in relation to their exponentiation. The left table contains 24 red cells, matrices of
which satisfy the following feature: (s0+s1)n = 2n-1*(s0+s1), (s0+s4)n = 2n-1*(s0+s4), etc. The
right table also contains 24 red cells with the same feature but with another tabular location:
(v0+v1)n = 2n-1*(v0+v1), (v0+v4)n = 2n-1*(v0+v4), etc.
16 yellow cells in each of tables on Figure 9 contain those matrices, which have
«quadruplet property»: ((s0+s6)2)n = 4n-1*(s0+s6)2, ((v0+v4)2)n = 4n-1*(v0+v4)2, etc. The cells on
the main diagonal correspond to sum of two projectors themselves: (si+si)n = 2n*si, (vi+vi)n =
2n*vi, where i = 0, 1, 2, ..., 7.
3. GENETIC HADAMARD MATRICES AS SUMS OF PROJECTORS
The genetic Hadamard matrix H4 from Figure 1 can be also decomposed into sum of 4
sparse matrices H4 = h0+h1+h2+h3 where each of sparse matrices contains only one non-zero
column (in a case of the «column decomposition») or only one non-zero row (in a case of the
«row decomposition») (Figure 10).
	  1	  	  0	  0	  0	  
-­‐1	  	  0	  0	  0	  
H4 = h0+h1+h2+h3 = 	  1	  	  0	  0	  0	  
-­‐1	  	  0	  0	  0	  
	  
	  
1 1 -1 1
H4 = g0+g1+g2+g3 = 0 0 0 0
00 00
00 00

0001
	   0	  	  1	  	  0	  0	  
0	  0	  -­‐1	  0	  
+
+
0001
+	   0	  	  1	  	  0	  0	  
0	  0	  	  1	  	  0	  
0001
0	  -­‐1	  	  0	  0	  
0	  0	  	  1	  	  0	  
0001
0	  -­‐1	  	  0	  0	  
0	  0	  -­‐1	  	  0	  
	   	  
	   	  
	   	  
0000
0 000
0 0 00
+ -1 1 1 1 + 0 0 0 0 + 0 0 0 0
0000
1 -1 1 1
0 0 00
0000
0 000
-1 -1 -1 1

Figure 10. The «column decomposition» (upper layer) and the «row decomposition»
(bottom layer) of the Hadamard matrix H4 from Figure 1
Each of these sparse matrices h0, h1, h2, h3 and g0, g1, g2, g3 on Fugure 10 is a
projector. We will conditionally name projectors h0, h1, h2, h3 again as «column projectors»
and projectors g0, g1, g2, g3 as «row projectors».
By analogy with the previous section about the Rademacher matrix R4, one can
analyse features of sums of pairs of these column projectors and row projectors in relation to
their exponentiation. In other words, one can analyze features of matrices (h0+h1)n,
(h0+h2)n,…. and (g0+g1)n, (g0+g2)n, …. where n =1, 2, 3,… . Such analysis leads to resulting
tables on Figure 11.
h0 h1 h2 h3
g0 g1 g2 g3
h0 g0 h1
g1
h2
g2
h3
g3
-

Figure 11. Tables of some features of sums of pairs of the different «column
projectors» h0, h1, h2, h3 (in the left table) and of the «row projectors» g0, g1, g2, g3 (from the
Hadamard matrix H4 on Figure 10) in relation to their exponentiation. Explanations in text.
Both tables on Figure 11 are identical in their mosaics. Every of their cells correspond
to a sum of those column projectors (or row projectors), which denote its column and row.
12 green cells correspond to matrices, exponentiations of which lead to cyclic groups with a
period 8: (2-0.5*(h0+h1))n, (2-0.5*(h0+h2))n, … , (2-0.5*(g0+g1))n, (2-0.5*(g0+g1))n, … , where n =
1, 2, 3,… . The cells on the main diagonal correspond to sum of two projectors themselves:
(hi+hi)n = 2n*hi, (gi+gi)n = 2n*gi, where i = 0, 1, 2, 3.
Cyclic properties of these (4*4)-matrix operators exist due to a connection of these
operators with complex numbers. Figures 12 and 13 show existence of a special
decomposition of every of these (4*4)-matrices into such set of two sparse matrices e0 and e1,
which is closed relative to multiplication and which defines their multiplication table that
coincides with the known multiplication table of complex numbers.

h0+h1 =

h0+h2 =

h0+h3 =

h1+h2 =

h1+h3 =

1 1
-1 1
1 -1
-1 -1

00
00
00
00

1 0 -1 0
-1 0 1 0
10 10
-1 0 -1 0

1001
-1 0 0 1
1001
-1 0 0 1

0 1 -1 0
0 1 10
0 -1 1 0
0 -1 -1 0

0 101
0 101
0 -1 0 1
0 -1 0 1

= e0+e1=

= e0+e1=

= e0+e1=

= e0+e1=

= e0+e1=

1 0
0 1
0 -1
-1 0

0
0
0
0

0
0 100
0 + -1 0 0 0
0
1 000
0
0 -1 0 0

10 0 0
-1 0 0 0
0 0 1 0
0 0 -1 0

0 0 -1 0
+ 00 10
10 00
-1 0 0 0

1
0
1
0

0
1
0
1

0 001
+ -1 0 0 0
0 001
-1 0 0 0

0 0 -1 0
0 1 00
0 0 10
0 -1 0 0

0 1 00
+ 0 0 10
0 -1 0 0
0 0 -1 0

0100
0100
0001
0001

0 001
+ 0 001
0 -1 0 0
0 -1 0 0

0
0
0
0

0
0
0
0

e0 e1
;

e0 e0 e1
e1 e1 -e0
e0 e1

;

e0 e0 e1
e1 e1 -e0
e0 e1

;

e0 e0 e1
e1 e1 -e0
e0 e1

;

e0 e0 e1
e1 e1 -e0
e0 e1

;

e0 e0 e1
e1 e1 -e0

e0 e1
0 0 -1 1
0001
0 0 -1 0
h2+h3 = 0 0 1 1
= e0+e1=
0010
+ 0 0 0 1 ; e0 e0 e1
00 11
0010
00 0 1
e1 e1 -e0
0 0 -1 1
0001
0 0 -1 0
Figure 12. The table represents special decompositions of (4*4)-matrices (h0+h1), (h0+h2),
(h0+h3), (h1+h2), (h1+h3), (h2+h3) into sum of two matrices e0+e1. The table shows direct
relations of these matrices with matrix representations of 2-parametric complex numbers.
Here h0, h1, h2 and h3 are column projectors of the Hadamard matrix H4 from Figure 10. For
each set of matrices e0 and e1 at every tabular level, the right column of the table contains its
multiplication table, which coinsides with the multiplication table of complex numbers.

g0+g1 =

g0+g2 =

g0+g3 =

g1+g2 =

g1+g3 =

g2+g3 =

1
-1
0
0

1
0
1
0

1
1
0
0

-1
1
0
0

1
1 = e0+e1 =
0
0

1
0
-1
0

-1
0
1
0

1
0
1
0

1 0 -1 0
0101
0 1 0 1 + -1 0 1 0
00 00
0000
00 00
0000

1 001
0 1 -1 0
= e0+e1 = 0 0 0 0 + 0 0 0 0
0 -1 1 0
10 01
0 000
00 00

e0 e1
;

e0 e0 e1
e1 e1 -e0
e0 e1

;

e0 e0 e1
e1 e1 -e0

1
0
0
-1

1
0
0
-1

-1
0
0
-1

1
0 = e0+e1 =
0
1

1100
0 0 -1 1
0000 + 0 0 00 ;
0000
0 0 00
0 0 -1 1
-1 -1 0 0

0
-1
1
0

0
1
-1
0

0
1
1
0

0
0000
0 000
1 = e0+e1 = -1 1 0 0 + 0 0 1 1
1
0011
1 -1 0 0
0
0000
0 000

0
-1
0
-1

0
1
0
-1

0
1
0
-1

0
0000
0 0 00
1 = e0+e1 = 0 1 1 0 + -1 0 0 1 ;
0
0000
0 0 00
1
-1 0 0 1
0 -1 -1 0

0 0
0 0
1 -1
-1 -1

0
0
1
-1

0
0
1
1

;

0 000
0 0 00
= e0+e1 = 0 0 0 0 + 0 0 0 0 ;
1 010
0 -1 0 1
0 -1 0 1
-1 0 -1 0

e0 e1
e0 e0 e1
e1 e1 -e0

e0 e1
e0 e0 e1
e1 e1 -e0
e0 e1
e0 e0 e1
e1 e1 -e0
e0 e1
e0 e0 e1
e1 e1 -e0

Fugure 13. The table represents special decompositions of (4*4)-matrices (g0+g1), (g0+g2),
(g0+g3), (g1+g2), (g1+g3), (g2+g3) into sum of two matrices e0+e1. The table shows direct
relations of these matrices with matrix representations of 2-parametric complex numbers.
Here g0, g1, g2 and g3 are row projectors from Figure 10. For each set of matrices e0 and e1 at
every tabular level, the right column of the table contains its multiplication table, which
coinsides with the multiplication table of complex numbers.
Now let us turn to the genetic Hadamard matrix H8 from Figure 1. It can be also
decomposed into sum of 8 sparse matrices H8=u0+u1+u2+u3+u4+u5+u6+u7	   where each of
sparse matrices contains only one non-zero column (in a case of the «column
decomposition») or only one non-zero row (in a case of the «row decomposition») (Figure
14).

	  
H8=u0+u1+u2+	  
	  	  	  	  	  	  	  	  u3+u4+u5+u6+u7	  	   =

00
00
00
00
00
00
00
00

1
1
1
1
-1
-1
-1
-1

00000
00000
00000
00000
00000
00000
00000
00000

00000
00000
00000
00000
00000
00000
00000
00000

1 0
-1 0
-1 0
1 0
-1 0
1 0
1 0
-1 0

0
0
0
0
0
0
0
0

+

+

1 0000000
1 0000000
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0
1 0000000
1 0 000000
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0
000
000
000
000
000
000
000
000

-1
1
-1
1
1
-1
1
-1

0000
0000
0000
0000
0000
0000
0000
0000

000000
000000
000000
000000
000000
000000
000000
000000

10
10
10
10
10
10
10
10

+

+

+

0
0
0
0
0
0
0
0

-1
1
1
-1
-1
1
1
-1

000000
000000
000000
000000
000000
000000
000000
000000

0000
0000
0000
0000
0000
0000
0000
0000

-1
-1
1
1
1
1
-1
-1

000
000
000
000
000
000
000
000

0000000
0000000
0000000
0000000
0000000
0000000
0000000
0000000

+

+

-1
1
-1
1
-1
1
-1
1

	  
Figure	  14.	  The	  «column	  decomposition»	  H8=u0+u1+u2+u3+u4+u5+u6+u7	  of	  the	  Hadamard
(8*8)-matrix H8 (Figure 1) where every of sparse matrices u0,	  u1,	  u2,	  u3,	  u4,	  u5,	  u6,	  u7	  is a
projection operator
	  

H8=d0+d1+d2+d3+
d4+d5+d6+d7 =

0 0
0 0
-1 1
00
00
00
00
00
00
00
00
00
00
11
00
00

0 0 0 0
0 0 0 0
1 -1 1 -1
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0
0
0
0
0
-1
0
0

0
0
0
0
0
-1
0
0

0
0
0
0
0
1
0
0

0
0
0
0
0
1
0
0

0
0
1
0
0
0
0
0
0
0
0
0
0
1
0
0

0
0
-1
0
0
0
0
0
0
0
0
0
0
1
0
0

+

+

1 -1
0 0
0 0
0 0
0 0
0 0
0 0
0 0

1 -1 -1 1 1
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0

-1
0
0
0
0
0
0
0

0
0
0
-1
0
0
0
0

0 0
0 0
0 0
-1 1
0 0
0 0
0 0
0 0

0
0
0
1
0
0
0
0

0
0
0
1
0
0
0
0

0
0
0
1
0
0
0
0

0
0
0
1
0
0
0
0

0
0
0
1
0
0
0
0

0
0
0
0
0
0
-1
0

0
0
0
0
0
0
1
0

0
0
0
0
0
0
1
0

0
0
0
0
0
0
-1
0

0 0
0 0
0 0
0 0
0 0
0 0
11
0 0

0
0
0
0
0
0
-1
0

0
0
0
0
0
0
-1
0

+

+

+

0
1
0
0
0
0
0
0

0
1
0
0
0
0
0
0

0
0
0
0
1
0
0
0

0 0
0 0
0 0
0 0
-1 -1
0 0
0 0
0 0

0 0
0 0
0 0
0 0
0 0
0 0
0 0
-1 -1

0
1
0
0
0
0
0
0

0
0
0
0
0
0
0
-1

0
1
0
0
0
0
0
0

0
-1
0
0
0
0
0
0

0
-1
0
0
0
0
0
0

0
1
0
0
0
0
0
0

0 0
0 0
0 0
0 0
1 1
0 0
0 0
0 0

0
0
0
0
-1
0
0
0

0 0
0 0
0 0
0 0
1 -1
0 0
0 0
0 0

0
0
0
0
0
0
0
-1

0
0
0
0
0
0
0
-1

0
0
0
0
0
0
0
-1

0
1
0
0
0
0
0
0

0
0
0
0
0
0
0
1

0
0
0
0
0
0
0
1

	  
Figure	  15.	  The	  «row	  decomposition»	  H8=d0+d1+d2+d3+d4+d5+d6+d7	  of	  the	  Hadamard	  
(8*8)-­‐matrix	  H8	  (Figure	  1)	  where	  every	  of	  sparse	  matrices	  d0,	  d1,	  d2,	  d3,	  d4,	  d5,	  d6,	  d7	  is	  a	  
projection	  operator	  
	  
Every	  of	  these	  sparse	  matrices	  u0,	  u1,	  u2,	  u3,	  u4,	  u5,	  u6,	  u7	  and	  d0,	  d1,	  d2,	  d3,	  d4,	  d5,	  
d6,	  d7	  on	  Fugures	  14,	  15	  is	  a	  projector.	  We	  will	  conditionally	  name	  projectors	  u0,	  u1,	  u2,	  
u3,	  u4,	  u5,	  u6,	  u7	  again	  as	  «column	  projectors»	  and	  projectors	  d0,	  d1,	  d2,	  d3,	  d4,	  d5,	  d6,	  d7	  	  as	  
«row	  projectors».	  
By	  analogy	  with	  the	  previous	  sections,	  one	  can	  analyse	  features	  of	  sums	  of	  pairs	  
of	   these	   column	   projectors	   and	   row	   projectors	   in	   relation	   to	   their	   exponentiation.	   In	  
other	   words,	   one	   can	   analyze	   features	   of	   matrices	   (u0+u1)n,	   (u0+u3)n,….	   and	   (d0+d1)n,	  
(d0+d2)n,	  ….	  where	  n	  	  =1,	  2,	  3,…	  .	  Such	  analysis	  leads	  to	  resulting	  tables	  on	  Figure	  16.	  

u0
u1
u2
u3
u4
u5
u6
u7

u0 u1 u2 u3 u4 u5 u6 u7
-

d0
d1
d2
d3
d4
d5
d6
d7

d0 d1 d2 d3 d4 d5 d6 d7
-

Figure 16. Tables of some features of sums of pairs of the different column projectors
u0, u1, …, u7 (from Figure 14) and of the row projectors d0, d1, …, d7 (from Figure 15) in
relation to their exponentiation. This is the case of the Hadamard matrix H8 from Figure 1.
Explanations in text.
Both tables on Figure 16 have the identical mosaic with 32 green cells and 24 yellow
cells. The green cells in these tables correspond to those matrices, exponentiations of which
generate cyclic groups with a period 8:
•

•

(2-0.5*(u0+u1))n, (2-0.5*(u0+u2))n, (2-0.5*(u0+u4))n, (2-0.5*(u0+u6))n, (2-0.5*(u1+u3))n,
(2-0.5*(u1+u5))n, (2-0.5*(u1+u7))n, (2-0.5*(u2+u3))n, (2-0.5*(u2+u4))n, (2-0.5*(u2+u6))n,
(2-0.5*(u3+u5))n, (2-0.5*(u3+u7))n, (2-0.5*(u4+u5))n, (2-0.5*(u4+u6))n, (2-0.5*(u5+u7))n,
(2-0.5*(u6+u7))n (in the left table);
(2-0.5*(d0+d1))n, (2-0.5*(d0+d2))n, (2-0.5*(d0+d4))n, (2-0.5*(d0+d6))n, (2-0.5*(d1+d3))n,
(2-0.5*(d1+d5))n, (2-0.5*(d1+d7))n, (2-0.5*(d2+d3))n, (2-0.5*(d2+d4))n, (2-0.5*(d2+d6))n,
(2-0.5*(d3+d5))n, (2-0.5*(d3+d7))n, (2-0.5*(d4+d5))n, (2-0.5*(d4+d6))n, (2-0.5*(d5+d7))n,
(2-0.5*(d6+d7))n (in the right table).

Cyclic properties of these (8*8)-matrix operators exist due to a connection of these
operators with complex numbers. Figure 17 shows some examples of decompositions of
the (8*8)-matrices from green cells on Figure 16 into corresponding sets of two sparse
matrices, each of which is closed in relation to multiplication and each of which defines
the multiplication table of complex numbers (see some additional details about
representations of complex numbers by means of (2n*2n)-matrices in [Petoukhov,
2012b]). It should be noted here that our study in the field of matrix genetics has revealed
methods of extension of these (8*8)-genetic matrices R4, R8, H4, H8 (Figure 1) into
(2n*2n)-matrices which are also sums of "column projectors" and "row projectors" and
which give by analogy as much cyclic groups as needed to model big ensembles of cyclic
processes.

u0+u4 =

u1+u5 =

1 0 0 0 -1 0 0 0
1 0 0 0 -1 0 0 0
-1 0 0 0 1 0 0 0
-1 0 0 0 1 0 0 0
1000 1000
1000 1000
-1 0 0 0 -1 0 0 0
-1 0 0 0 -1 0 0 0

0 -1 0 0 0 1 0 0
0 1 0 0 0 -1 0 0
0 1 0 0 0 -1 0 0
0 -1 0 0 0 1 0 0
0 -1 0 0 0 -1 0 0
0 1000 100
0 1000 100
0 -1 0 0 0 -1 0 0

=

=

1 0000000
1 0000000
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0
0000 1000
0000 1000
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0

0 -1 0 0 0 0 0 0
0 1 000000
0 1 000000
0 -1 0 0 0 0 0 0
0 0 0 0 0 -1 0 0
0 0000 100
0 0000 100
0 0 0 0 0 -1 0 0

+

+

0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0
00001000
00001000
10000000
10000000
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0

0 0000 100
0 0 0 0 0 -1 0 0
0 0 0 0 0 -1 0 0
0 0000 100
0 -1 0 0 0 0 0 0
0 1000 000
0 1000 000
0 -1 0 0 0 0 0 0

e0 e4
=e0+e4;

e0 e0 e4
e4 e4 -e0

e1 e5
=e1+e5;

e1 e1 e5
e5 e5 -e1

u2+u6 =

u3+u7=

00 100010
00 100010
00 100010
00 100010
0 0 -1 0 0 0 1 0
0 0 -1 0 0 0 1 0
0 0 -1 0 0 0 1 0
0 0 -1 0 0 0 1 0
0 0 0 -1 0 0 0 -1
000 1000 1
0 0 0 -1 0 0 0 -1
000 1000 1
0 0 0 1 0 0 0 -1
0 0 0 -1 0 0 0 1
0 0 0 1 0 0 0 -1
0 0 0 -1 0 0 0 1

00 100000
00 100000
00 100000
00 100000
00000010
00000010
00000010
00000010

=

=

+

0 0 0 -1 0 0 0 0
000 1000 0
0 0 0 -1 0 0 0 0
000 1000 0
0 0 0 0 0 0 0 -1
000 0000 1
0 0 0 0 0 0 0 -1
000 0000 1

00 000010
00 000010
00 000010
00 000010
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0

+

e2 e6
= e2+e6;

0 0 0 0 0 0 0 -1
000 00001
0 0 0 0 0 0 0 -1
000 00001
000 10000
0 0 0 -1 0 0 0 0
000 10000
0 0 0 -1 0 0 0 0

e2 e2 e6
e6 e6 -e2

e3 e7
=e3+e7;

e3 e3 e7
e7 e7 -e3

Figure 17. The decomposition of the (8*8)-matrices u0+u4, u1+u5, u2+u6, u3+u7, which are
examples of (8*8)-matrices from green cells on Figure 16, into corresponding sets of two
sparse matrices e0 and e4, e1 and e5, e2 and e6, e3 and e7, each of which is closed in relation
to multiplication and each of which defines the multiplication table of complex numbers
(on the right)
Figure 17 testifies that the Hadamard (8*8)-matrix H8 = (u0+u4)+(u1+u5)+(u2+u6)
+(u3+u7) (Fig. 1) is a sum of 4 complex numbers in 8-dimensional space.
Yellow cells in tables on Figure 16 correspond to matrices with the following property:
((ui+uj)2)n = 2n-1*(ui+uj) and ((di+dj)2)n = 2n-1*(di+dj) where i≠j, i,j = 0, 1, 2, …,7, n = 1, 2,
3,… . Cells on the main diagonal correspond to matrices (ui+ui)n = 2n*ui.
4. INHERITED BIOCYCLES AND A SELECTIVE CONTROL OF CYCLIC
CHANGES OF VECTORS IN A MULTIDIMENSIONAL SPACE. PROBLEMS OF
GENETIC BIOMECHANICS
Any living organism is an object with a huge ensemble of inherited cyclic processes,
which form a hierarchy at different levels. Even every protein is involved in a cycle of the
"birth and death," because after a certain time it breaks down into its constituent amino acids
and they are then collected into a new protein. According to chronomedicine and
biorhythmology, various diseases of the body are associated with disturbances (dyssynchronization) in these cooperative ensembles of biocycles. All inherited physiological
subsystems of the body should be agreed with the structural organization of genetic coding
for their coding and transmission to descendants; in other words, they bear the stamp of its
features. We develop a "genetic biomechanics", which studies deep coherence between
inherited physiological systems and molecular-genetic structures.
Our discovery of the described cyclic groups (on basis of genetic projectors), which
are connected with phenomenological properties of molecular-genetic systems in their matrix
forms of representation, gives a mathematical approach to simulate ensembles of cyclic
processes. In this approach an idea of multi-dimensional vector space is used to simulate
inherited biological phenomena including cooperative ensembles of cyclic processes.

Multidimensional vectors of this bioinformation space can be changed under influence of
those matrix operators on the basis of genetic projectors that were decribed in previous
section. Due to special properties of these operators a useful possibility exists to provide a
selective control (or a selective coding) of cyclic changes (and some other changes) of
separate coordinates of multidimensional vectors in this space.
Let us explain this by one example. Let us take, for instance, the cyclic group of
operators Yn = (2-0.5*(s0+s2))n (see Figures 7 and 9, on the left) and an arbitrary 8-dimensional
vector X=[x0, x1, x2, x3, x4, x5, x6, x7]. Then let us analyze an expression X*Yn = [x0, x1, x2,
x3, x4, x5, x6, x7]*(2-0.5*(s0+s2))n = Zn that leads to a new vector Zn=[z0, z1, z2, z3, z4, z5, z6, z7]
(here n = 1, 2, 3, …). Figure 18 shows a cyclic transformation of coordinates of vectors Zn;
vectors X*Y1 and X*Y9 are identical because the period of this cyclic group Yn =
(2-0.5*(s0+s2))n is equal to 8.
X*Y1 = Z1 = 2-0.5*[(x0+x1-x2-x3+x4+x5-x6-x7), 0, (x0+x1+x2+x3-x4-x5-x6-x7), 0, 0, 0, 0, 0]
X*Y2 = Z2 = [(x4-x3-x2+x5), 0, (x0+x1-x6-x7), 0, 0, 0, 0, 0]
X*Y3 = Z3 = 2-0.5*[(x4-x1-x2-x3-x0+x5+x6+x7), 0, (x0+x1-x2-x3+x4+x5-x6-x7), 0, 0, 0, 0, 0]
X*Y4 = Z4 = [(x6-x1-x0+x7), 0, (x4-x3-x2+x5), 0, 0, 0, 0, 0]
X*Y5 = Z5 = 2-0.5*[(x2-x1-x0+x3-x4-x5+x6+x7), 0, (x4-x1-x2-x3-x0+x5+x6+x7), 0, 0, 0, 0, 0]
X*Y6 = Z6 =

[(x2+x3-x4-x5), 0, (x6-x1-x0+x7), 0, 0, 0, 0, 0]

X*Y7 = Z7 = 2-0.5*[(x0+x1+x2+x3-x4-x5-x6-x7), 0, (x2-x1-x0+x3-x4-x5+x6+x7), 0, 0, 0, 0, 0]
X*Y8 = Z8 = [(x0+x1-x6-x7), 0, (x2+x3-x4-x5), 0, 0, 0, 0, 0]
X*Y9 = Z9 = 2-0.5*[(x0+x1-x2-x3+x4+x5-x6-x7), 0, (x0+x1+x2+x3-x4-x5-x6-x7), 0, 0, 0, 0, 0]
Figure 18. The illustration of a selective control (or selective coding) of cyclic changes of
coordinates of a vector X*Yn = Zn where Yn is the cyclic group with its period 8.
One can see from Figure 18 that only coordinates z0 and z2 have cyclic changes in this
set of new vectors Zn, all other coordinates are equal to zero. In other words, all cycles are
realized on a 2-dimensional plane (z0, z2) inside the 8-dimensional space. If one uses another
cyclic group of operators, for example, (2-0.5*(s1+s3))n (s1 and s2 are from Figure 7) then the
same initial vector X=[x0, x1, x2, x3, x4, x5, x6, x7] will be transformed into a cyclic set of
vectors in another 2-dimensional plane (z1, z3) of the same 8-dimensional space. One should
conclude that, in this model approach, the same initial information in a form of a
multidimensional vector X could generate a few cyclic processes in different planes of
appropriate multidimensional space by means of using cyclic operators of the described type.
In other words, we have here a multi-purpose using of vector information due to such
operators (for instance, this informational vector can represent a fragment of a nucleotide
sequence that can be used to organize many cyclic processes in different planes or subspaces
of a phase space of genetic phenomena).
In the proposed model approach, one more benefit is that different cyclic processes of
such cooperative ensemble can be easy coordinated and synchronized including an

assignment of their relative phase shifts, starting times and different tempos of their cycles.
One technical remark is needed here. If we use a cyclic operator on the basis of the
“column projectors”, then a vector X should be multipled by the matrix on the right in
accordance with the sample: [x0, x1, x2, x3, x4, x5, x6, x7]*(2-0.5*(s0+s2))n. But if we use a
cyclic operator on the basis of the “row projectors” (for instance, v0 and v2 from Figure 8)
then a vector X should be multiplied by the matrix on the left in accordance with the
following sample: (2-0.5*(v0+v2))n*[x0; x1; x2; x3; x4; x5; x6; x7].
Below we will describe extensions of the genetic (4*)-matrices R4 and H4 (Figure 1)
into 2n*2n-matrices every of which consists of 2n “column projectors” (or 2n “row
projectors”); summation of projectors from this expanded set leads to new cyclic groups, etc.
by analogy with the described cases (see Figures 4, 9, 11, 16). It gives a great number of
cyclic groups of operators with similar properties of the selective control (or selective coding)
of cyclic changes of coordinates of 2n-dimensional vectors. These numerous cyclic groups are
useful to simulate big cooperative ensembles of cyclic processes, for instance, an ensemble of
cyclic motions of legs, hands and separate muscles during different gaits (walking, running,
etc.) simultaneously with heartbeats, breathing cycles, metabolic cycles, etc. Such models
and their practical applications are created in the author's laboratory. The problem of
inherited ensembles of biological cycles are closely linked to the fundamental problems of
the biological clock and time, aging, etc. Taking into account results, which were obtained in
"matrix genetics", the author puts forward "a biological concept of projectors" , which
interprets the living body as a colony of projection operators.
It should be noted that in a case of a cyclic group of vector transformations with a
period 8 (for example, in the case of the cyclic group (2-0.5*(s0+s2))n) that has only 8 discrete
stages inside one cycle, one can enlarge a quantity of stages in “k” times by changing of the
power in a form n/k: the cyclic group (2-0.5*(s0+s2))n/k has k*8 stages inside one cycle (here
"n" and "k" - integer positive numbers). The more value of "k", the less discretization of the
cycle and the more smooth (uninterrupted) type of this cyclic process.
It can be added that many gaits (which are based on cyclic movements of limbs and
corresponding muscle actuators) have genetically inherited character. So, newborn turtles and
crocodiles, when they hatched from eggs, crawl with quite coordinated movements to water
without any training from anybody; a newborn foal, after a bit time, begins to walk and run;
centipedes crawl by means of coordinated movements of a great number of their legs (this
number sometimes reaches up to 750) on the basis of inherited algorithms of control of legs.
One should emphasize that, in the previous history, gaits and locomotion algorithms were
studied in biomechanics of movements without any connection with the structures of genetic
coding and with inheritance of unified control algorithms. The projection operations are
associated with many kinds of movements and planned actions of our body to achieve the
goal by the shortest path: for example, sending a billiard ball in the goal, we use a projection
operation; directing a finger to the button of computer or piano, we make a projection action,
etc. In other words, the concept of projection operators can be additionally used to simulate a
broad class of such biomechanical actions.
Subject of genetically inherited ability of coordinating movements of body parts is
connected with fundamental problems of congenital knowledge about surrounding space and
of physiological foundations of geometry. Various researches have long put forward ideas
about the importance of kinematic organization of body and its movements in the genesis of
spatial representations of the individual. For example, H. Poincare has put these ideas into

the foundation of his teachings about the physiological foundations of geometry and about
the origin of spatial representations in individuum.
According	   to	   Poincare,	   the	   concept	   of	   space	   and	   geometry	   arises	   from	   an	  
individual	   on	   the	   basis	   of	   kinematic	   organization	   of	   his	   body	   with	   using	  
characterizations	   of	   positions	   and	   movements	   of	   body	   parts	   relative	   to	   each	   other,	   ie	   in	  
the	  kinematic	  organization	  of	  the	  body	  is	  something	  that	  precedes	  the	  concept	  of	  space	  
[Poincare,	   1913].	   Evolutionary	   development	   of	   the	   whole	   apparatus	   of	   kinematic	  
activity	   of	   our	   body	   has	   provided	   a	   coherence	   of	   this	   apparatus	   with	   realities	   of	   the	  
physical	   world.	   Because	   of	   this,	   each	   newborn	   organism	   receives	   adequate	   spatial	  
representations	  not	  only	  through	  personal	  contact	  during	  ontogeny	  with	  the	  objects	  of	  
the	  surrounding	  world,	  but	  also	  at	  the	  expense	  of	  achievements	  of	  previous	  generations	  
enshrined	   in	   the	   apparatus	   of	   body	   movements	   in	   the	   phylogenesis.	   According	   to	  
Poincare,	   for	   organism,	   which	   is	   absolutely	   immobile,	   spatial	   and	   geometric	   concepts	  
are	  excluded.	   «To	  localize	  an	  object	  simply	  means	  to	  represent	  to	  oneself	  the	  movements	  
that	   would	   be	   necessary	   to	   reach	   it.	   I	   will	   explain	   myself.	   It	   is	   not	   a	   question	   of	  
representing	  the	  movements	  themselves	  in	  space,	  but	  solely	  of	  representing	  to	  oneself	  the	  
muscular	  sensations	  which	  accompany	  these	  movements	  and	  which	  do	  not	  presuppose	  the	  
preexistence	  of	  the	  notion	  of	  space.	  [Poincare,	  1913,	  p.	  247].	  	  	  «I	  have	  just	  said	  that	  it	  is	  to	  
our	   own	   body	   that	   we	   naturally	   refer	   exterior	   objects;	   that	   we	   carry	   about	   everywhere	  
with	  us	  a	  system	  of	  axes	  to	  which	  we	  refer	  all	  the	  points	  of	  space	  and	  that	  this	  system	  of	  
axes	   seems	   to	   be	   invariably	   bound	   to	   our	   body.	   It	   should	   be	   noticed	   that	   rigorously	   we	  
could	  not	  speak	  of	  axes	  invariably	  bound	  to	  the	  body	  unless	  the	  different	  parts	  of	  this	  body	  
were	   themselves	   invariably	   bound	   to	   one	   another.	   As	   this	   is	   not	   the	   case,	   we	   ought,	   before	  
referring	  exterior	  objects	  to	  these	  fictitious	  axes,	  to	  suppose	  our	  body	  brought	  back	  to	  the	  
initial	   attitude”	   [Poincare,	   1913,	   p.	   247].	   «We	   should	   therefore	   not	   have	   been	   able	   to	  
construct	   space	   if	   we	   had	   not	   had	   an	   instrument	   to	   measure	   it;	   well,	   this	   instrument	   to	  
which	  we	  relate	  everything,	  which	  we	  use	  instinctively,	  it	  is	  our	  own	  body.	  It	  is	  in	  relation	  
to	  our	  body	  that	  we	  place	  exterior	  objects,	  and	  the	  only	  spatial	  relations	  of	  these	  objects	  
that	  we	  can	  represent	  are	  their	  relations	  to	  our	  body.	  It	  is	  our	  body	  which	  serves	  us,	  so	  to	  
speak,	   as	   system	   of	   axes	   of	   coordinates»	   [Poincare,	   1913,	   p.	   418].	   In	   times	   of	   Poincare	  
science	  did	  not	  know	  about	  the	  genetic	  code,	  but	  from	  the	  modern	  point	  of	  view	  these	  
thoughts	   by	   Poincare	   testify	   in	   favor	   the	   importance	   of	   the	   structural	   organization	   of	  
the	   genetic	   system	   for	   physiological	   foundations	   of	   geometry	   and	   innate	   notions	   of	  
space,	   which	   are	   connected	   with	   inherited	   apparatus	   and	   algorithms	   of	   body	  
movements.	   And	   they	   are	   in	   tune	   with	   the	   results	   of	   matrix	   genetics,	   which	   are	  
presented	  in	  our	  paper.	  
	  
Modern	  physiology	  makes	  a	  significant	  addition	  to	  the	  teachings	  of	  the	  Poincare	  
about	  an	  innate	  relationship	  of	  body	  and	  spatial	  representations,	  claiming	  an	  existence	  
of	   a	   priori	   notions	   about	   our	   body	   shell.	   This	   statement	   is	   due	   to	   the	   study	   of	   the	   so-­‐
called	  phantom	  sensations	  in	  disabled:	  a	  special	  sense	  of	  the	  presence	  of	  natural	  parts	  
of	   the	   body,	   which	   are	   absent	   in	   reality.	   It	   was	   found	   [Vetter,	   Weinstein,	   1967;	  
Weinstein,	   Sersen,	   1961]	   that	   phantom	   sensations	   occur	   not	   only	   in	   cases	   of	   disabled	  
with	  amputees,	  but	  also	  in	  people	  with	  congenital	  absence	  of	  limbs.	  Hence,	  the	  notion	  of	  
the	   individual	   scheme	   of	   our	   body	   is	   not	   conditioned	   by	   our	   experiences,	   but	   has	   an	  
innate	  character.	  
Additional materials relating to innate spatial representations, including the concept of B.
Russell [Russel, 1956] about an innate character of ideas of projective geometry for each

person, as well as an overview of works E. Schroedinger and other researchers about the
geometry of spaces of visual perception, can be found in the book [Petoukhov, 1981].
We note here that although the concept of space is the primary concept for most physical
theories, one can develop a meaningful theory in theoretical physics, in which it serves as
only one of secondary notions, which are deduced from primary bases of a numeric system
of a discrete character. We mean the "binary geometrophysics" [Vladimirov, 2008], ideas of
which generate some associations with the ability of animal organisms (initially endowed
with discrete molecular genetic information) to receive spatial representations and to create
spatial movements on the basis of this primary information of discrete character.
5. ABOUT A DIRECTION OF ROTATION OF VECTORS UNDER
INFLUENCE OF THE CYCLIC GROUPS OF THE OPERATORS
In configurations and functions of biological objects frequently one direction of
rotation is preferable (it concerns the famous problem of biological dissymmetry). Taking
this into account, it is interesting what one can say about directions of rotation of
4-dimensional and 8-dimensional vectors under influence of the cyclic groups described in
previous sections. Figure 19 gives answer and shows directions of cyclic rotation of vectors
[x0, x1, x2, x3]*(2-0.5*(ci+cj))n, (2-0.5*(ri+rj))n*[x0, x1, x2, x4], [x0, x1, x2, x3, x4, x5, x6, x7]*
(2-0.5*(si+sj))n, (2-0.5*(vi+vj))n*[x0, x1, x2, x3, x4, x5, x6, x7] under enlarging “n” (i≠j; all these
cyclic operators correspond to green cells in tables on Figure 19, they are based on
summation of pairs of the projectors of the Rademacher matrices R4 and R8 from Figure 1).
c0

c0
c1
c2
c3

c1
Q
Q -

c2

c3

- Q
Q -

r0
r1
r2
r3

r0 r1 r2 r3
- P
P - P
P -

s0 s1 s2 s3 s4 s5 s6 s7
v0 v1 v2 v3 v4 v5 v6 v7
Q Q
P P
s0 v0 s1
- Q Q
v1
- P P
s2 Q Q v2 P P s3 Q Q
v3 P P
Q Q
P P
s4
v4
s5
- Q Q
v5
- P P
Q Q P P s6
v6
Q Q
P P
s7
v7
Figure 19. In addition to Figures 4 and 9, the tables show directions of rotations of
4-dimensional and 8-dimensional vectors under influence of the cyclic groups of operators,
which correspond to green cells and which are based on summation of pairs of the “column
projectors” (on the left, see Figures 2, 4, 7, 9) and of the “row projectors” (on the right, see
Figures 2, 4, 8, 9) of the Rademacher matrices R4 and R8 (Figure 1). The symbol Q means
counter-clockwise rotation, the symbol P means clockwise rotation.
(2

-0.5

Figure 20 shows directions of cyclic rotation of vectors [x0, x1, x2, x3]*(2-0.5*(hi+hj))n,
*(gi+gj))n*[x0, x1, x2, x4], [x0, x1, x2, x3, x4, x5, x6, x7]*(2-0.5*(ui+uj))n, (2-0.5*(di+dj))n*

[x0, x1, x2, x3, x4, x5, x6, x7] under enlarging “n” (i≠j; all these operators correspond to green
cells in tables on Figure 19, they are based on summation of pairs of projectors of the
Rademacher matrices R4 and R8 from Figure 1).).
h0
h1
h2
h3

h0
Q
P
Q

h1 h2
Q P
- Q
Q Q Q

h3
Q
Q
Q
-

g0
g1
g2
g3

g0
P
Q
P

g1
P
P
P

g2
Q
P
P

g3
P
P
P
-

u0 u1 u2 u3 u4 u5 u6 u7
d0 d1 d2 d3 d4 d5 d6 d7
P
Q
Q
P
u0 - P Q
d0 - Q P
Q
P
Q
P
Q
P
u1 P d1 Q Q
P
u2 Q
- P Q
d2 P
- Q P
Q P Q
Q
P Q P
P
u3
d3
Q
P
u4 P
- P Q
d4 Q
- Q P
P
Q P Q
Q
P Q P
u5
d5
Q
Q
P
P
u6 Q
- P
d6 P
- Q
Q
Q
Q P P
P
P Q u7
d7
Figure 20. In addition to Figures 11 and 16, the tables show directions of rotations of
4-dimensional and 8-dimensional vectors under influence of the cyclic groups of operators,
which correspond to green cells and which are based on summation of pairs of the “column
projectors” (on the left, see Figures 10, 11, 14, 16) and of the “row projectors” (on the right,
see Figures 10, 11, 15, 16) of the Hadamard matrices H4 and H8 (Figure 1). The symbol Q
means counter-clockwise rotation, the symbol P means clockwise rotation.
Each of tables on Figures 19 and 20 contains completely different (asymmetrical)
number of rotations in the clockwise and counterclockwise. These facts give evidences in
favor of an idea that living matter at its basic level of genetic information has certain
informational reasons to provide dissymmetry of inherited biological structures and
processes. Taking this into account, the author thinks about a possibility of informational
reasons for biological dis-symmetry. Here one can remind for a comparison that usually
scientists look for reasons of biological dis-symmetry in physical or chemical sciences but
not in informatic science.
6. HAMILTON’S QUATERNIONS, COCKLE’S SPLIT-QUATERNIONS,
THEIR EXTENSIONS AND PROJECTION OPERATORS
In previous sections we described cases of summation of pairs of the oblique
projectors. Now let us consider cases of summation of 4 of these projectors and cases of
summation of 8 of these projectors.
The matrix H4 (Figure 1) is sum of the four “column projectors” or the four “row
projector” (Figure 10). But H4 has also another decomposition in a form of four sparse
matrices H40, H41, H42 and H43 (Figure 21). This set is closed in relation to multiplication and
it defines their multiplication table (Figure 21, bottom level) that is identical to the known
multiplication table of quaternions by Hamilton. From this point of view, the matrix H4 is the

quaternion by Hamilton with unit coordinates. (Such type of decompositions is termed a
dyadic-shift decomposition because it corresponds to structures of matrices of dyadic shifts,
well known in technology of signals processing [Ahmed, Rao, 1975]).
1
0
0
0

0
1
0
0

H4 = H40 + H41 + H42 + H43 =
0 0
0 1 0
0 0 + -1 0 0
1 0
0 0 0
0 1
0 0 -1

0
0
1
0

+

0
0
1
0

0
0
0
-1

-1
0
0
0

0
1
0
0

0
0
0
-1

+

0
0
-1
0

0
1
0
0

1
0
0
0

1
H41 H42 H43
1
H41 H42 H43
H41 - 1
H43 - H42
H42 - H43 - 1
H41
H43 H42 - H41 - 1

1
H41
H42
H43

Figure 21. The dyadic-shift decomposition of the (4*4)-matrix H4 (from Figure 1) gives the
set of 4 sparse matrices H40, H41, H42 and H43, which corresponds to the multiplication table
of quatrnions by Hamilton (bottom row). The matrix H40 is identity matrix
Here one can mention that Hamilton quaternions are closely related to the Pauli
matrices, the theory of the electromagnetic field (Maxwell wrote his equation on the language
of quaternions Hamilton), the special theory of relativity, the theory of spins, quantum theory
of chemical valency, etc. In the twentieth century thousands of works were devotes to
quaternions in physics [http://arxiv.org/abs/math-ph/0511092]. Now Hamilton quaternions
are manifested in the genetic code system. Our scientific direction - "matrix genetics" - has
led to the discovery of an important bridge among physics, biology and computer science for
their mutual enrichment. In our studies, we have received a new example of the effectiveness
of mathematics: abstract mathematical structures, which have been derived by
mathematicians at the tip of the pen 160 years ago, are embodied long ago in the information
basis of living matter - the system of genetic coding. The mathematical structures, which are
discovered by mathematicians in a result of painful reflections (like Hamilton, who has
wasted 10 years of continuous thought to reveal his quaternions), are already represented in
the genetic coding system.
Let us turn now to the (8*8)-matrix H8 (Figure 1) that can be represented as sum of
two matrices HL8 = u0+u2+u4+u6 and HR8 = u1+u3+u5+u7 (Figure 22). Here u0, u1, …, u7 are
the «column projectors» from Figure 14.
H8 = HL8+HR8 =
1 0 1
1 0 1
-1 0 1
-1 0 1
1 0 -1
1 0 -1
-1 0 -1
-1 0 -1

0
0
0
0
0
0
0
0

-1
-1
1
1
1
1
-1
-1

0
0
0
0
0
0
0
0

1
1
1
1
1
1
1
1

0
0 -1
0
0 1
0
0 1
0 + 0 -1
0
0 -1
0
0 1
0
0 1
0
0 -1

0
0
0
0
0
0
0
0

-1
1
-1
1
1
-1
1
-1

0
0
0
0
0
0
0
0

1
-1
-1
1
-1
1
1
-1

0
0
0
0
0
0
0
0

-1
1
-1
1
-1
1
-1
1

Figure 22. The representation of the Hadamard matrix H8 (from Figure 1) as sum of two

sparse matrices HL8 and HR8
Figure 23 shows a decomposition of the matrix HL8 (from Figure 22) as a sum of
4 matrices: HL8 = HL80 + HL81 + HL82 + HL83. The set of matrices HL80, HL81, HL82 and
HL83 is closed in relation to multiplication and it defines the multiplication table that is
identical to the multiplication table of quaternions by Hamilton. General expression for
quaternions in this case can be written as QL = a0*HL80 + a1*HL81 + a2*HL82 + a3*HL83,
where a0, a1, a2, a3 are real numbers. From this point of view, the (8*8)-genomatrix HL8 is the
4-parametric quaternion by Hamilton with unit coordinates.
HL8 = HL80 + HL81 + HL82 + HL83 =
10000000
1 0 1 0 -1 0 1 0
10000000
1 0 1 0 -1 0 1 0
00100000
-1 0 1 0 1 0 1 0
=
00100000
-1 0 1 0 1 0 1 0
00001000
1 0 -1 0 1 0 1 0
00001000
1 0 -1 0 1 0 1 0
00000010
-1 0 -1 0 -1 0 1 0
00000010
-1 0 -1 0 -1 0 1 0

+

	  
HL80	  
HL81	  
HL82	  
HL83	  

HL80	  
HL80	  
HL81	  
HL82	  
HL83	  

+

0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0
00 00 00 10
00 00 00 10
+
10 00 00 00
10 00 00 00
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
HL81	   HL82	   HL83	  
	  	  HL81	   	  	  HL82	   	  	  HL83	  
-­‐	  HL80	   	  	  HL83	   -­‐	  HL82	  
-­‐	  HL83	   -­‐	  HL80	   	  	  HL81	  
	  	  HL82	   -­‐	  HL81	   -­‐	  HL80	  

0010 0 0 00
0010 0 0 00
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0
000 0 0 0 10
000 0 0 0 10
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0
00 00
00 00
00 00
00 00
0 0 -1 0
0 0 -1 0
-1 0 0 0
-1 0 0 0

0010
0010
10 00
10 00
00 00
00 00
00 00
00 00

Figure 23. Upper rows: the decomposition of the matrix HL8 (from Figure 22) as sum of
4 matrices: HL8 = HL80 + HL81 + HL82 + HL83. Bottom row: the multiplication table of these
4 matrices HL80, HL81, HL82 and HL83, which is identical to the multiplication table of
quaternions by Hamilton. The matrix HL80 represents the real unit for this matrix set
The similar situation holds true for the matrix HR8 (from Figure 22). Figure 24 shows
a decomposition of the matrix HR8 as a sum of 4 matrices: HR8 = HR80 + HR81 + HR82 +
HR83. The set of matrices HR80, HR81, HR82 and HR83 is closed in relation to multiplication
and it defines the multiplication table that is identical to the same multiplication table of
quaternions by Hamilton. General expression of quaternions in this case can be written as QR
= a0*HR80 + a1*HR81 + a2*HR82 + a3*HR83, where a0, a1, a2, a3 are real numbers. From this
point of view, the (8*8)-genomatrix HR8 is the quaternion by Hamilton with unit coordinates.

HR8 = HR80 + HR81 + HR82 + HR83 =

0 -1
0 1
0 1
0 -1
0 -1
0 1
0 1
0 -1

0 -1 0 1 0 -1
0 1 0 -1 0 1
0 -1 0 -1 0 -1
0 10 10 1
0 1 0 -1 0 -1
0 -1 0 1 0 1
0 1 0 1 0 -1
0 -1 0 -1 0 1

=

+

	  
HR80	  
HR81	  
HR82	  
HR83	  

0 -1 0
0 10
0 00
0 00
0 00
0 00
0 00
0 00

00 0
00 0
-1 0 0
10 0
0 0 -1
00 1
00 0
00 0

0 0
0 0
0 0
0 0
0 0
0 0
0 -1
0 1

0 0 0 00 1 0 0
0 0 0 0 0 -1 0 0
0 0 0 0 0 0 0 -1
0 0 0 00 0 0 1
0 -1 0 0 0 0 0 0
0 1 0 00 0 0 0
0 0 0 10 0 0 0
0 0 0 -1 0 0 0 0
HR80	  
HR80	  
HR81	  
HR82	  
HR83	  

HR81	  
	  	  HR81	  
-­‐	  HR80	  
-­‐	  HR83	  
	  	  HR82	  

HR82	  
	  	  HR82	  
	  	  HR83	  
-­‐	  HR80	  
-­‐	  HR81	  

+

+

0 0 0 -1 0 0 0 0
0 00 10 00 0
0 10 00 00 0
0 -1 0 0 0 0 0 0
0 0 0 0 0 0 0 -1
0 0 0 000 0 1
0 0 0 00 10 0
0 0 0 0 0 -1 0 0
0 0 0 0 0 0 0 -1
0 00 00 00 1
0 0 0 0 0 -1 0 0
0 00 00 1 0 0
0 00 10 0 0 0
0 0 0 -1 0 0 0 0
0 10 0 0 0 0 0
0 -1 0 0 0 0 0 0

HR83	  
	  	  HR83	  
-­‐	  HR82	  
	  	  HR81	  
-­‐	  HR80	  

Figure 24. upper rows: the decomposition of the matrix HR8 (from Figure 22) as sum of
4 matrices: H8R = H08R + H18R + H28R + H38R. Bottom row: the multiplication table of these
4 matrices HR80, HR81, HR82 and HR83, which is identical to the multiplication table of
quaternions by Hamilton. HR80 represents the real unit for this matrix set
The initial (8*8)-matrix H8 (Figure 1) can be also decomposed in another way on the
base of dyadic-shift decomposition. Figure 25 shows such dyadic-shift decomposition H8 =
H80+H81+H82+H83+H84+H85+H86+H87, when 8 sparse matrices H80, H81, H82, H83, H84, H85,
H86, H87 arise (H80 is identity matrix). The set H80, H81, H82, H83, H84, H85, H86, H87 is closed
in relation to multiplication and it defines the multiplication table on Figure 25. This
multiplication table is identical to the multiplication table of 8-dimensional hypercomplex
numbers that are termed as biquaternions by Hamilton (or Hamiltons’ quaternions over the
field of complex numbers). General expression for biquaternions in this case can be written
as Q8 = a0*H80+a1*H81+a2*H82+a3*H83+ a4*H84 +a5*H85+a6*H86+a7*H87, where a0, a1, a2, a3,
a4, a5, a6, a7 are real numbers. From this point of view, the (8*8)-genomatrix H8 is Hamilton’s
biquaternion with unit coordinates.

H8 = H80+H81+H82+H83+H84+H85+H86+H87 =
1
0
0
0
0
0
0
0

0
1
0
0
0
0
0
0

0
0
1
0
0
0
0
0
0
0
0
0
1
0
0
0

0
0
0
1
0
0
0
0
0
0
0
0
0
1
0
0

0
0
0
0
1
0
0
0

0
0
0
0
0
1
0
0

0 0
0 0
0 0
0 0
0 0
0 0
-1 0
0 -1

0
0
0
0
0
0
1
0
-1
0
0
0
0
0
0
0

0
0
0
0
0
0
0
1
0
-1
0
0
0
0
0
0

+

0
0
1
0
0
0
0
0

0
0
0
1
0
0
0
0

1
H81
H82
H83
H84
H85
H86
H87

0 -1 0 0
1 0 0 0
0 0 0 -1
0 0 1 0
0 0 0 0
0 0 0 0
0 0 0 0
00 0 0

+

0 0
0 0
0 0
0 0
0 -1
1 0
0 0
0 0

0 0
0 0
0 0
0 0
0 -1
1 0
0 0
0 0

0 0
0 0
0 0
0 0
0 0
0 0
0 -1
1 0

0
0
0
0
0
0
0
-1

0
-1
0
0
0
0
0
0

0
0
0
0
0
0
1
0

+

1
0
0
0
0
0
0
0

0
0
0
1
0
0
0
0

1
H81 H82
1
H81 H82
H81 -1
H83
H82 H83
-1
H83 - H82 - H81
H84 H85 H86
H85 - H84 H87
H86 H87 - H84
H87 - H86 - H85

0
0
-1
0
0
0
0
0

0
0
-1
0
0
0
0
0

+

0
0
0
-1
0
0
0
0

1
0
0
0
0
0
0
0

0
1
0
0
0
0
0
0

0 0
0 0
0 0
0 0
0 0
0 0
-1 0
0 -1

0 0
0 0
0 0
0 0
0 0
0 0
-1 0
0 -1

0
0
0
0
-1
0
0
0

H83 H84
H83 H84
- H82 H85
- H81 - H86
1
- H87
H87
-1
- H86 - H81
- H85 H82
H84 H83

0
0
0
0
1
0
0
0

0
0
0
0
0
-1
0
0

0
0
1
0
0
0
0
0

0
0
0
0
0
1
0
0
0
0
0
1
0
0
0
0

+

1
0
0
0
0
0
0
0

0
1
0
0
0
0
0
0

0
0
0
-1
0
0
0
0

+

H85 H86
H85 H86
- H84 H87
- H87 H84
H86 H85
- H81 - H82
1
- H83
H83
-1
- H82 - H81

0
0
1
0
0
0
0
0

0
1
0
0
0
0
0
0

-1
0
0
0
0
0
0
0

0 0
0 0
0 0
0 0
0 0
0 0
0 1
-1 0

0 0
0 0
0 0
0 0
0 0
0 0
0 1
-1 0

0
0
0
0
0
1
0
0

0
0
0
0
0
-1
0
0

0 0
0 0
0 -1
1 0
0 0
0 0
0 0
0 0

0
0
0
0
1
0
0
0

0
0
0
0
-1
0
0
0

+

0 -1
1 0
0 0
0 0
0 0
0 0
0 0
0 0

H87
H87
- H86
H85
- H84
- H83
H82
- H81
1

Figure 25. Upper rows: the decomposition of the matrix H8 (from Figure 1) as sum of
8 matrices: H8 = H80+H81+H82+H83+H84+H85+H86+H87. Bottom row: the multiplication table
of these 8 matrices H80, H81, H82, H83, H84, H85, H86, H87, which is identical to the
multiplication table of biquaternions by Hamilton (or Hamiltons’ quaternions over the field
of complex numbers). H80 is identity matrix
One can analyze the Rademacher genomatrices R4 and R8 (From Figure 1) by a similar
way [Petoukhov, 2012b]). In particular, in this case the following results arise:
•

•
•

The Rademacher (4*4)-matrix R4 represents split-quaternion by J.Cockle with unit
coordinates (http://en.wikipedia.org/wiki/Split-quaternion) in the case of its dyadicshift decomposition;
The Rademacher (8*8)-matrix R8 represents bisplit-quaternion by J.Cockle with unit
coordinates in the case of its dyadic-shift decomposition;
If the Rademacher (4*4)-matrix R4 is represented as sum of two sparse matrices
(c0+c2) + (c1+c3) (here c0, c1, c2, c3 are the column projectors from Figure 2), then the
matrix R4 is sum of two hyperbolic numbers with unit coordunates because each of
summands (c0+c2) and (c1+c3) is hyperbolic number with unit coordinates. A similar
is true for the case of the “row projectors” r0, r1, r2, r3 from Figure 2.

Now let us pay a special attention to the Rademacher (8*8)-matrix R8 as a sum of the
following two sparse matrices RL8 and RR8, the first of which is a sum of 4 projectors with
even indexes s0, s2, s4, s6 and the second of which is a sum of 4 projectors with odd indexes
s1, s3, s5, s7: R8 = (s0+s2+s4+s6) + (s1+s3+s5+s7) = RL8 + RR8 (here s0, s1, …, s7 are the column
projectors from Figure 7). Below this decomposition will be useful for analysis of a

correspondence between 64 triplets and 20 amino acids with stop-codons.
	  
	  
	  
R8	  =	  RL8	  +	  RR8	  =	  

1	  0	  1	  0	  1	  0	  -­‐1	  0	  
1	  0	  1	  0	  1	  0	  -­‐1	  0	  
-­‐1	  0	  1	  0	  -­‐1	  0	  -­‐1	  0	  
-­‐1	  0	  1	  0	  -­‐1	  0	  -­‐1	  0	  
1	  0	  -­‐1	  0	  1	  0	  1	  0	  
1	  0	  -­‐1	  0	  1	  0	  1	  0	  
-­‐1	  0	  -­‐1	  0	  -­‐1	  0	  1	  0	  
-­‐1	  0	  -­‐1	  0	  -­‐1	  0	  1	  0	  

	  
	  
	  
+	  

0	  1	  0	  1	  0	  1	  0	  -­‐1	  
0	  1	  0	  1	  0	  1	  0	  -­‐1	  
0	  -­‐1	  0	  1	  0	  -­‐1	  0	  -­‐1	  
0	  -­‐1	  0	  1	  0	  -­‐1	  0	  -­‐1	  
0	  1	  0	  -­‐1	  0	  1	  0	  1	  
0	  1	  0	  -­‐1	  0	  1	  0	  1	  
0	  -­‐1	  0	  -­‐1	  0	  -­‐1	  0	  1	  
0	  -­‐1	  0	  -­‐1	  0	  -­‐1	  0	  1	  

Figure 26. The decomposition of the Rademacher (8*8)-genomatrix R8 from Figure 1
Each of these sparse matrices RL8 and RR8 can be decomposed into a set of 4 sparse
matrices: RL8= RL80+ RL81+ RL82+RL83 and RR8= RR80+ RR81+ RR82+RR83 (Figures 27 and
28). The first set of matrices RL80, RL81, RL82, RL83 is closed relative to multiplication and it
defines a known multiplication table of split-quaternions by J. Cockle
(http://en.wikipedia.org/wiki/Split-quaternion) on Figure 27. The second set of matrices
RR80, RR81, RR82, RR83 is also closed relative to multiplication and it defines the same
multiplication table of split-quaternions by J. Cockle (Figure 28). Consequently, each of
matrices RL8 and RR8 is split-quaternion by Cockle with unit coordinates.

RL8= RL80+ RL81+ RL82+RL83 =

+

00 0010 00
00 0010 00
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
10 0000 00
10 0000 00
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0

+

10000000
10000000
00100000
00100000
00001000
00001000
00000010
00000010

0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0

;

+

0010 0 0 00
0010 0 0 00
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0
000 0 0 0 10
000 0 0 0 10
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0

RL80
RL81
RL82
RL83

RL80
RL80
RL81
RL82
RL83

RL81
RL81
- RL80
- RL83
RL82

+

RL82
RL83
RL83
RL80
RL81

RL83
RL83
- RL82
- RL81
RL80

Figure 27. The decomposition of the matrix RL8 from Figure 26 into the set of 4 matrices
RL80, RL81, RL82, RL83, which defines the known multiplication table of split-quaternions by
J. Cockle (http://en.wikipedia.org/wiki/Split-quaternion)

RR8= RR80+ RR81+ RR82+RR83 =

01000000
01000000
00010000
00010000
00000100
00000100
00000001
00000001

+

0 0010
0 0010
0 -1 0 0 0
0 -1 0 0 0
0 0000
0 0000
0 0000
0 0000

0
0
0
0
0
0
-1
-1

00
00
00
00
01
01
00
00

+

+

000 0010 0
000 0010 0
0 0 0 0 0 0 0 -1
0 0 0 0 0 0 0 -1
010 00000
010 00000
0 0 0 -1 0 0 0 0
0 0 0 -1 0 0 0 0

+

0 0 0 0 0 0 0 -1
0 0 0 0 0 0 0 -1
0 0 0 0 0 -1 0 0
0 0 0 0 0 -1 0 0
0 0 0 -1 0 0 0 0
0 0 0 -1 0 0 0 0
0 -1 0 0 0 0 0 0
0 -1 0 0 0 0 0 0

;

RR80
RR81
RR82
RR83

RR80
RR80
RR81
RR82
RR83

RR81
RR81
- RR80
- RR83
RR82

RR82
RR83
RR83
RR80
RR81

RR83
RR83
- RR82
- RR81
RR80

Figure 28. The decomposition of the matrix RR8 from Figure 26 into the set of 4
matrices RR80, RR81, RR82, RR83, which defines the same multiplication table of splitquaternions by J. Cockle (http://en.wikipedia.org/wiki/Split-quaternion)
But each of the same (8*8)-matrices RL8 and RR8 (Figure 26)) can be decomposed in
another way, which leads to its representation in a form of sum of two hyperbolic numbers:
RL8= (s0+s4)+(s2+s6) and RR8=(s1+s5)+(s3+s7), where is s0, s1, …, s7 are column projectors
from the decomposition of R8 on Figure 7. Figure 29 shows that each of sums (s0+s4), (s2+s6),
(s1+s5), (s3+s7) in these decompositions for RL8 and RR8 is a (8*8)-matrix representation of
hyperbolic number, whose coordinates are equal to 1. It means also that the whole (8*8)matrix R8 is sum of 4 hyperbolic numbers, whose coordinates are equal to 1, in an 8dimensional space. These decompositions are useful for analyzing the degeneration of the
genetic code in next Sections.

s0+s4 =

1000 1000
1000 1000
-1 0 0 0 -1 0 0 0
-1 0 0 0 -1 0 0 0
1000 1000
1000 1000
-1 0 0 0 -1 0 0 0
-1 0 0 0 -1 0 0 0

=

1000 0000
1000 0000
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0
0000 1000
0000 1000
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0

+

0000 1000
0000 1000
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0
1000 0000
1000 0000
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0

e0 e4
= e0+e4;

e0 e0 e4
e4 e4 e0

	  

s2+s6 =

0 0 1 0 0 0 -1 0
0 0 1 0 0 0 -1 0
0 0 1 0 0 0 -1 0
0 0 1 0 0 0 -1 0
0 0 -1 0 0 0 1 0
0 0 -1 0 0 0 1 0
0 0 -1 0 0 0 1 0
0 0 -1 0 0 0 1 0

=

00100000
00100000
00100000
00100000
00000010
00000010
00000010
00000010

+

0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0

e2 e6
= e2+e6;

e2 e2 e6
e6 e6 e2

	  

s1+s5 =

0 1000 100
0 1000 100
0 -1 0 0 0 -1 0 0
0 -1 0 0 0 -1 0 0
0 1000 100
0 1000 100
0 -1 0 0 0 -1 0 0
0 -1 0 0 0 -1 0 0

=

0 1000000
0 1000000
0 -1 0 0 0 0 0 0
0 -1 0 0 0 0 0 0
0 0000100
0 0000100
0 0 0 0 0 -1 0 0
0 0 0 0 0 -1 0 0

+

00000 100
00000 100
0 0 0 0 0 -1 0 0
0 0 0 0 0 -1 0 0
0 1000 000
0 1000 000
0 -1 0 0 0 0 0 0
0 -1 0 0 0 0 0 0

e1 e5
= e1+e5;

e1 e1 e5
e5 e5 e1

s3+s7 =

0 0 0 1 0 0 0 -1
0 0 0 1 0 0 0 -1
0 0 0 1 0 0 0 -1
0 0 0 1 0 0 0 -1
0 0 0 -1 0 0 0 1
0 0 0 -1 0 0 0 1
0 0 0 -1 0 0 0 1
0 0 0 -1 0 0 0 1

=

00010000
00010000
00010000
00010000
00000001
00000001
00000001
00000001

+

0 0 0 0 0 0 0 -1
0 0 0 0 0 0 0 -1
0 0 0 0 0 0 0 -1
0 0 0 0 0 0 0 -1
0 0 0 -1 0 0 0 0
0 0 0 -1 0 0 0 0
0 0 0 -1 0 0 0 0
0 0 0 -1 0 0 0 0

e3 e7
= e3+e7;

e3 e3 e7
e7 e7 e3

Figure 29. Decompositions of sums of projectors (s0+s4), (s2+s6), (s1+s5), (s3+s7), which show
that each of these sums is an (8*8)-matrix representation of hyperbolic numbers, whose
coordinates are equal to 1, in an 8-dimensional space.
7. GENETIC MATRICES AS SUMS OF TENSOR PRODUCTS OF OBLIQUE
(2*2)-PROJECTORS. EXTENSIONS OF GENETIC MATRICES INTO (2N*2N)MATRICES
The Rademacher matrices R4 and R8 and also Hadamard matrices H4 and H8 (Figure 1)
are interconnected by means of the following expressions:
R4 U [1 1; 1 1] = R8,

H4 U [1 -1; 1 1] = H8

(1)

where U means tensor multiplication; the matrix [1 1; 1 1] is a traditional (2*2)-matrix
representation of hyperbolic number with unit coordinates; the matrix [1 -1; 1 1] is a
traditional (2*2)-matrix representation of complex number with unit coordinates.
The following extensions of the expressions (1) lead to (2n*2n)-matrices RK and HK
(where K=2n, n = 4, 5, 6,…; (n-2) means a tensor power):
R4 U [1 1; 1 1](n-2) = RK,

H4 U [1 -1; 1 1](n-2) = HK

(2)

In this algorithmic way we get a great set of (2n*2n)-matrices RK and HK, each of
which can be represented as a sum of 2n «column projectors» (or 2n «row projectors») by
analogy with cases described above. Summations of these new «column projectors» (and also
«row projectors») in different combinations (in pairs, in fours, in eights, etc.) give many new
operators, exponentiation of which generates a great number of cyclic groups and other kind
of operators. They also give many new representations of complex numbers, hyperbolic
numbers, Hamilton’s quaternion, split-quaternions and their extensions in a form of (2n*2n)matrices that correspond to 2n-dimensional spaces. These new operators possess many similar
properties, including a selective control (or coding) of different subspaces in 2n-dimensional
space, in analogy with operators described in previous sections.
Why one can declare that each of matrices in the «column decomposition» (or in the
«row decomposition») of any of matrices Rk and Hk in the expressions (2) is a projection
operator? It can be declared on basis of the following simple theorem, taking into account
that main diagonals of all matrices Rk and Hk contains only entries +1.
Theorem: any sparse square matrix P, which contains only a single non-zero column
or a single non-zero row and which has its entry +1 on the main diagonal, is a projection
operator (it satisfies the criterion P2=P).

Proof. When multiplying two matrices |Aik| and |Bkj|, the elements of the rows in the
first matrix are multiplied with corresponding columns in the second matrix to receive the
resulting matrix (AB)ij| = !
!!! Aik*Bkj (http://en.wikipedia.org/wiki/Matrix_multiplication ).
Let us consider a case of a square matrix |Pij| (here i,j = 1, 2,…, m) with only a single nonzero column Pis ≠ 0, which is numerated by an index “s” and which contains +1 in its cell on
the main diagonal of this matrix: Pss = 1. It means that all entries Pik = 0 if k≠s. The second
degree of this matrix gives a square matrix:
!
!!! Pik*Pkj

!
!!! Pik*Pks

=

(3)

But among all Pik only one column differs from zero: Pis≠0. In the equation (3), Pis
corresponds to the second factor Pss = 1. By these reasons we have Pis*Pss = Pis for the
equation (3). So the sparse square matrix |Pij|2 contains only the same single non-zero column
Pis like as the matrix |Pij|. Consequently |Pij|2=|Pij|; in other words, this matrix |Pij| is a
projection operator, Q.E.D. The case of similar representations of such 2n*2n-matrices on
basis of a sum of “row projectors” has its proof by analogy.
This theorem allows making the following conclusion about any variant of matrix
presentations of complex numbers, hyperbolic numbers and their extensions into 2ndimensional numerical systems (including Hamilton's quaternions and biquaternions, splitquaternions and bisplit-quaternions by Cockle, etc.): if the real part of such 2n-dimensional
number is equal to +1, then its matrix presentation is a sum of 2n «column projectors» (and
«row projectors»). It is provided by the fact that real parts of such multidimensional
numerical systems are represented by matrix diagonal that contains only entries +1. Figure 30
shows an example of one of matrix presentations of Hamilton quaternions in a case when
their real parts are equal to +1.
1
-b
-c
-d

b
1
d
-c

c
-d
1
b

d
1 0
c = -b 0
-b
-c 0
1
-d 0

0
0
0
0

0
0 b
0 + 0 1
0
0 d
0
0 -c

0
0
0
0

0
0 0 c
0 + 0 0 -d
0
0 0 1
0
0 0 b

0
0 0
0 + 0 0
0
0 0
0
0 0

0
0
0
0

d
c
-b
1

Figure 30. The "column decomposition" of the classical (4*4)-matrix representation of
Hamilton's quaternions (http://en.wikipedia.org/wiki/Quaternion#Matrix_representations) in
cases when their real parts are equal to +1. Each of 4 matrices (on the right) is a projection
operator in accordance with the described theorem. Here b, c, d are real numbers.
So, many kinds of hypercomplex numbers are based on sums of projectors. In this
sense the notion "projectors" can be considered as more fundemental than the notion
"hypercomplex numbers" of the mentioned types. Many of these hypercomplex numbers are
applied widely in different fields of science: physics, chemistry, informatics, etc. Awareness
of the fact that these systems of hypercomplex numbers are based on sums of projectors may
help in a rethinking of existing theories and in developing new theories in the field of
mathematical natural science. In particularly, it concerns Hamilton's quaternions. For
example, Maxwell has used them in creation of his equations of electro-magnetic field. Could
one develop an alternative description and development of the theory of electro-magnetic
field on basis of sums of appropriate projectors? It is one of many open questions in
theoretical aplications of projectors.

Now we show that each of genetic Rademacher and Hadamard matrices (including
R2, R8, H4, H8 from Figure 1 and their extensions into 2n*2n-matrices RK and HK in
expressions (2)) can be expressed as sums and tensor multiplications of four (2*2)-matrices
of «column projectors» (or of analogical «row projectors»). Figure 31 shows these 4 basic
(2*2)-projectors, which are marked by 4 different colours for visibility, and some examples
of expressions of a few Rademacher and Hadamard matrices by means of their using.
1 0
1 0
0 -1
0 1
1 0 ; -1 0 ; 0 1 ; 0 1
11
1 0
0 1
11 = 1 0 + 0 1 ;

1 -1
1 0
0 -1
1 1 = 1 0 + 0 1

10
10
01
10
10
01
0 -1
01
V
V
V
V
R4= 1 0
-1 0 + 0 1
-1 0 + -1 0
01 + 0 1
01
H4 =

10
10
1 0 V -1 0

0 -1
+ 0 1

V

10
-1 0

10
+ -1 0

01
V 0 1

01
+ 01

01
V 0 1

Figure 31. Examples of using the 4 basic (2*2)-projectors (upper level) to express
(2*2)-matrix representations of hyperbolic number and of complex number with unit
coordinates (the second level) and to express the Rademacher (4*4)-matrix R4 and the
Hadamard (4*4)-matrix H4 from Figure 1 (two lower levels)
One can also note that every of the genetic “column (2n*2n)-projectors” and the “row
(2n*2n)-projectors” can be expressed by means of tensor multiplications of appropriate (2*2)projectors from their basic set of the 4 projectors (Figure 31, upper level). It means that cases
of 2-dimensional spaces can be considered as basic in this model approach. It is interesting
because of the known fact that namely 2-dimensional sub-spaces play a fundamental role in
morphological organization and development of living bodies (see for example about a
fundamental role of primary tissue layers or primary germ layers in
http://en.wikipedia.org/wiki/Germ_layer; in accordance with germ layer theory, for example,
all different organs of human bodies develop from one of the 3 germ layers).
8. AN APPLICATION OF OBLIQUE PROJECTORS TO SIMULATE
ENSEMBLES OF PHYLLOTAXIS PATTERNS IN LIVING BODIES
In the field of mathematical biology, phyllotaxis phenomena are one of the most
known
[Adler,
Barabe,
Jean,
1997;
Jean,
1995;
http://www.goldenmuseum.com/0604Phillotaxis_engl.html]. Usually phyllotaxis laws are
described as those inherited spiral-like dislocations of leaves and some other parts of plants,
which are connected with Fibonacci numbers. But the similar phyllotaxis laws dictate also
inherited configurations of some biological molecules, parts of animal bodies, etc. (see, for
example, a review in [Jean, 1995]). In other words, phyllotaxis laws appear in inherited
morphological structures at very different levels and branches of biological evolution. Figure
32 shows a few examples of phyllotaxis spirals.

1

4

2

3

5

6

Figure 32. Examples of phyllotaxis patterns: 1) sunflower; 2) alloe (from
http://radiolus.com/index.php/nepoznannoe/255-paradoksy-posledovatelnosti-chiselfibonachchi );
3) a pine cone (from http://www.maths.surrey.ac.uk/hostedsites/R.Knott/Fibonacci/fibnat.html);
4)
a
seashell
(from
http://www.eb.tuebingen.mpg.de/?id=476 ); 5) a fractal vegetable Romanesco Broccoli
(Brassica oleracea) (from http://egregores.blogspot.ru/2010/12/extremely-cool-naturalfractals.html ); 6) a spruce with cones (from http://foto.rambler.ru/users/nadezhdarodnaja/albums/53780408/photo/4e9c302c-1a1a-3e9d-c61e-db70c258d714/ )
On Figure 32, images 5 and 6 illustrate that a whole organism can contain many parts
with similar phyllotaxis patterns in each (like as a spruce with many phyllotaxis cones). For
physicist or mathematician is natural to think that such organism can be modelled as a
multidimensional phase space (or a configuration space) with an appropriate number of
similar subspaces, each of which receives the same phyllotaxis pattern due to a selective
control of subspaces or their selective genetic coding. Such selective control or coding in this
phase space should be based on an appropriate system of operators (about a phase space see
http://en.wikipedia.org/wiki/Phase_space).
Our model approach allows such modelling due to a discovered system of operators
based on described sums of oblique projectors (including 2n*2n-dimensional matrices Rk and
Hk in expressions (2)), which have such properties of a selective control (or coding) of
subspaces of 2n-dimensional space. In other words, we propose an approach to model
ensembles of phyllotaxis patterns (or other patterns and processes) inside a multidmensional
phase space that represents a whole organism. The described system of operators for a

selective control or coding can be conditionally named briefly as a «genetic system of
operators» (or more briefly, «G-system of operators). As we can judge, in the field of
phyllotaxis study, other authors didn’t simulate such ensembles of phyllotaxis patterns
though many different models of separate patterns (without their ensembles in a joint phase
space) exist. In addition, known models of inherited phyllotaxis patterns don’t associate them
with structural properties of the genetic coding system in contrast to our genetic approach.
Let us explain our model approach to phyllotaxis phenomena in more details.
It is known that classical phyllotaxis patterns arise in the result of iterative rotations of
initial object approximately on an angle 1370 with a simultaneous increase of its distance
from the center of the phyllotaxis pattern. On a complex plane such iterative operations can
be simulated by means of iterative multiplication of an initial vector (or a point) with
appropriate complex number z = x+i*y, which provides such angle of rotation (due to its
appropriate argument) and increase (due to its appropriate modulus) in accordance with
known properties of complex numbers. The described G-system of operators, which contains
many variants of sparse 2n*2n-matrix presentations of complex numbers on basis of sums of
some genetic projectors (from "column decompositions" of 2n*2n-matrices RK and HK in
expressions (2)), allows generating many phyllotaxis patterns, each of which belong to its
own 2-dimensional plane inside a whole phase space. In these cases, each of phyllotaxis
patterns in a separate phase plane can have its own degree of maturation (or development)
and its own type of a phyllotaxis picture; it depends on a kind of complex numbers, which is
chosen for its iterative generating.
This model approach does not pretend to a new explanation for existence of Fibonacci
numbers in phyllotaxis patterns. But this model approach give abilities to simulate bunches of
phyllotaxis patterns in separate organisms. Concerning to Fibonacci or Luca numbers in
phyllotaxis laws, one should remind here that “the phyllotaxis rules … cannot be taken as
applying to all circumstances, like a law of nature. Rather, in the words of the famous
Canadian mathematician Coxeter, they are 'only a fascinatingly prevalent tendency"
(http://goldenratiomyth.weebly.com/phyllotaxis-the-fibonacci-sequence-in-nature.html ). One
can think that the role of iterative operations in living nature is much more important than
particular realizations of Fibonacci or Luca numbers.
To simulate an ensemble of phyllotaxis 3d-patterns (an ensemble of many cones of a
spruce, etc.), each of which belongs to a separate subspace of a whole 2n*2n-dimensional
phase space, an iterative application of Hamilton's quaternions can be used in their 2n*2nmatrix forms of presentation in the described G-system of operators.
In addition the author reminds here about cyclic groups on basis of Hamilton’s
quaternion and biquaternion with unit coordinates: these cyclic groups allow simulating some
heritable biological phenomena including color perception, properties of which correspond to
the Newton’s color circle (see [Petoukhov, 2011b] and Section 17 in [Petoukhov, 2012a]).
Using Hamilton’s quaternions and biquaternions as 2n*2n-operators from the described
G-system allows simulating some inherited ensembles of biological patterns including some
inherited ensembles of color patterns and color changes of biological bodies.
9. HYPERBOLIC NUMBERS, GENETIC PROJECTORS AND THE
WEBER-FECHNER LAW OF PSYCHOPHYSICS
This Section is devoted to hyperbolic numbers in separate planes of 2N-dimensional
spaces, their connections with some genetic projectors (from Figures 2, 4-6, 8 and 9) and

with inherited psychophysical phenomena. The name «hyperbolic» for this kind of 2dimensional numbers is traditionally used because of their connection with hyperbolas and
hyperbolic
rotations
(http://en.wikipedia.org/wiki/Split-complex_number,
http://www.physicsinsights.org/hyperbolic_rotations.html ). Hyperbolic numbers have
properties corresponding to Lorentz group of two-dimensional Special Relativity
(www.springer.com/.../9783642179761-c1.pdf?,
,
http://garretstar.com/secciones/publications/docs/HYP2.PDF ).
	  
	  
	  
	  
	  
	  
	   	  
	  
x,	  	  y	   	  
1	  0	   	  
0	  1	   	   	   1	   i	  
Gxy	  =	  x*1+y*i	  =	  	   y,	  	  x	   =	  x*	   0	  1	   +	  y*	   1	  0	   ;	   1	   1	   i	  
i	   i	   1	  
	  

	  
	  
	  
	  
	  
	  
	  
	  	  x,	  	  	  	  	  	  	  	  	  	  	  	  (x2-­‐a)0.5	   	  
1	  0	   	  
0	  1	  
2
0.5
2
0.5
2
0.5
J	  =	  x*1+(x -­‐a) *i	  =	  	   (x -­‐a) ,	  	  x	  
=	  x*	   0	  1	   +	  (x -­‐a) *	   1	  0	  
Figure 33. Upper level: the matrix representation of hyperbolic numbers, where two
sparse (2*2)-matrices represent real and imaginary units (1 and i) of these numbers. The
multiplication table of these basic elements 1 and i is shown on the right side. Bottom level:
the special case of the set of hyperbolic numbers J (with the fixed value “a”) describes a
hyperbola x2+y2=a, where “x” is a variable.
Hyperbolic numbers Gxy = x*1+y*i (where «i» is the imaginary unit of hyperbolic
numbers with its property i2=+1) have a known (2*2)-matrix form of their representation
shown on Figure 33. A special case of hyperbolic numbers
J=[x, (x2-a)0.5; (x2-a)0.5, x]

(4)

(where “x” is a variable and the parameter “a” is fixed) describes a hyperbola, which
corresponds to the equation x2+y2=a. This equation describes the hyperbola in the coordinate
system (x,y), axes of which coincide with axes of symmetry of the hyperbole. In another
coordinate system, axes of which coincide with asymptotes of the hyperbola, the same
hyperbola is described by the equation y=a/x (Figure 34). Any point of any hyperbola can be
transformed into a new point of the same hyperbola by means of so called hyperbolic
rotation, which is described by the same matrix representation of hyperbolic numbers [x, y; y,
x] if its determinant is equal to 1.
It is known that hyperbolic numbers and hyperbolic operators are closely connected with
natural logarithms, which can be defined on the base of hyperbolic rotations because of their
relations
with
values
of
area
under
hyperbolas
(http://mathworld.wolfram.com/NaturalLogarithm.html). By this reason natural logarithm
«was formerly called hyperbolic logarithm as it corresponds to the area under a hyperbola»
(http://en.wikipedia.org/wiki/Natural_logarithm ). Area s of a curvilinear trapezoid inside
boundaries, which are created by the hyperbola x*y = a, the x-axis and the lines x = x0 and x
= x1, is equal to
s = a*ln(x1/x0) = a*{ln(x1)-ln(x0)},

(5)

where ln – natural (or hyperbolic) logarithm (Figure 34). History of hyperbolic logarithms is
described for example in the book [Klein, 2009].

Figure 34. The function a*ln(x1/x0) is illustrated as the area under the hyperbola y = a/x
from x0 to x1.
But a wide class of genetically inherited physiological phenomena is organized by the
nature by means of the same logarithmic law (5) and it can be described mathematically on
the base of hyperbolic numbers. We mean here the main psychophysiologic law by WeberFechner (http://en.wikipedia.org/wiki/Weber–Fechner_law): the intensity of the perception is
proportional to the logarithm of stimulus intensity; it is expressed by the equation
p = k*ln(V/V0) = k*{ln(V) - ln(V0)},

(6)

where p - the intensity of perception, V - stimulus, V0 - threshold stimulus, ln - natural
logarithm. Proportionality factor k in the expression (6) is different for different channels of
sensory perception (vision, hearing, etc.); this difference of values «k» is associated with
different values "a" in the equation of the hyperbola: x*y = a. The threshold stimulus V0 in
(5) is also different for different channels of sensory perception.
The identity of expressions (5) and (6) allows to propose a geometric model of the
Weber-Fechner law on the base of the described matrix representation of hyperbolic numbers
in connection with a phenomenology of the molecular-genetic system. In this model the
threshold stimulus V0 in the expression (6) is interpreted as the value x0 from the expression
(5); the proportionality factor “k” in (6) is interpreted as the value “a” from (5); the stimulus
V(t), which is varied in time, is interpreted as the variable x(t) from (5) and the perception
“p" in (6) is interpreted as the area “s” from (5). Taking into account the type of hyperbolic
numbers J from the expression (4), it is obvious that the hyperbolic number J0=[x0, (x02-a)0.5;
(x02-a)0.5, x0] corresponds to the fixed area s0=a*ln(x0) of the curvilinear trapezoid, points of
which have their x-coordinates inside the interval from 1 till x0; another hyperbolic number
J=[x, (x2-a)0.5; (x2-a)0.5, x0] corresponds to the area sx=a*ln(x) of the curvilinear trapezoid
with its x-coordinates inside the bigger interval from 1 till x. The total area s of the third
curvilinear trapezoid, points of which have their x-coordinates inside the interval from x0 till
x, is equal to difference sx-s0, that is
s = sx-s0 = a*ln(x) - a*ln(x0) = a*ln(x1/x0)

(7)

This curvilinear trapezoid with its area s corresponds to the hyperbolic number, which is
equal to the following:
J - J0 = [(x-x0), ((x-x0)2-a)0.5; ((x-x0)2-a)0.5, x0]

(8)

We have described the geometric model for the case of one sensory channel. Let us

generalize now this geometric model for a case of a multi-dimensional space with different 2dimensional planes inside it, each of which contains the described hyperbolic model of the
Weber-Fechner law for one of many sensory channels of an organism. It is known that
different types of inherited sensory perception are subordinated to this law: sight, hearing,
smell, touch, taste, etc. One can suppose that the Weber–Fechner law is the law specially for
nervous system. But it is not true since its meaning is much more wider because it is realized
in many kinds of lower organisms without a nervous system in them: “this law is applicable
to chemo-tropical, helio-tropical and geo-tropical movements of bacteria, fungi and
antherozoids of ferns, mosses and phanerogams .... The Weber-Fechner law, therefore, is not
the law of the nervous system and its centers, but the law of protoplasm in general and its
ability to respond to stimuli" [Shultz, 1916, p. 126]. So the whole system of perception of an
organism demonstrates itself as a multi-parametric system with many sub-systems of
perception, which are subordinated to the logarithmic Weber-Fechner law. A generalized
model of multi-dimensional space with appropriate sub-spaces is needed to describe this
inherited multi-channel organization of the logarithmic perception in the case of the whole
living organism. Let us show that our approach on the base of sums of genetic projectors
allows to create such generalized model.
Hyperbolic numbers Gxy=x*1+y*i have the multiplication table of their real and
imaginary units shown on Figure 33. But the same multiplication table of hyperbolic numbers
we have already received above:
•
•

on Figures 5 and 6 for sums (c0+c2), (c1+c3), (r0+r3), (r1+r2) of genetic (4*4)projectors c0, c1, c2, c3, r0, r1, r2, r3 from Figure 2;
on Figure 29 for sums (s0+s4), (s1+s5), (s2+s6), (s3+s7) of genetic (8*8)-projectors s0,
s1,…, s7 from Figure 7.

It means that these sums of genetic (4*4)- and (8*8)-projectors are matrix representations
of hyperbolic numbers with unit coordinates in corresponding 2-dimensional planes of
4-dimensional and 8-dimensional spaces. On the basis of each of these sums, one can
construct a general representation of hyperbolic numbers (with an arbitrary values of their
coordinates) in an appropriate hyperbolic plane of such multi-dimensional space. For
example, if e0 and e4 are (8*8)-matrices taken from the decomposition of the (8*8)-matrix
s0+s4 on Figure 29, then the expression G04=a0*e0+b4*e4 represents the hyperbolic number
with real coordinates «a0» and «b4» in the plane (x0, x4) inside an 8-dimensional space with
its coordinate system (x0, x1, …, x7). Similar situations holds true for expressions
G15=a1*e1+b5*e5, G26=a2*e2+b6*e6, G37=a3*e3+b7*e7, each of which represents hyperbolic
number in an appropriate plane inside (8*8)-dimensional space, if e1, e2, e3, e5, e6, e7 are
(8*8)-matrices taken from decompositions on Figure 29. The (8*8)-matrix G04+G15+G26+G37
represents an operator of an 8-dimensional space with a set of 4 hyperbolic planes (x0, x4),
(x1, x5), (x2, x6), (x3, x7) inside it.
For each of these four 2-dimensional planes (x0, x4), (x1, x5), (x2, x6), (x3, x7) of an
8-dimensional space one can choose an individual hyperbola x2-y2=a and an individual
threshold stimulus x0 to create the hyperbolic model of the Weber-Fechner law in the united
set of four perception channels of the organism. In this case we have the following expression
of the model for each of the planes, if we take (8*8)-matrices e0, e1, …, e7 from Figure 29 to
express real and imaginary units of hyperbolic numbers (here V0, V1, V2, V3 mean stimulus
variables on x0-, x1-, x2-, x3-axis correspondingly; V00, V01, V02, V03 mean threshold
stimuluses on the same x0-, x1-, x2-, x3-axis correspondingly; parameters a0, a1, a2, a3 for

corresponding planes mean the parameter “a” from the general equation x2-y2=a of
hyperbola; S04, S15, S26, S37 mean area of corresponding trapezoids defined by the hyperbolic
numbers in these four planes; parameters k0, k1, k2, k3 for corresponding planes mean the
parameter k from (6)):
•

•

•

•

for the plane (x0, x4): G04=(V0-V00)*e0+{(V0-V00)2-a0)0.5}*e4; this hyperbolic number
G04 corresponds to the area S04= k0*ln(V0/V00), which simulates the Weber-Fechner
law in the plane (x0, x4);
for the plane (x1, x5): G15=(V1-V01)*e1+{(V1-V01)2-a1)0.5}*e5; this hyperbolic number
G15 corresponds to the area S15= k1*ln(V1/V01), which simulates the Weber-Fechner
law in the plane (x1, x5);
for the plane (x2, x6): G26=(V2-V02)*e2+{(V2-V02)2-a2)0.5}*e6; this hyperbolic number
G26 corresponds to the area S26= k2*ln(V2/V02), which simulates the Weber-Fechner
law in the plane (x2, x6);
for the plane (x3, x7): G37=(V3-V03)*e3+{(V3-V03)2-a0)0.5}*e7; this hyperbolic number
G37 corresponds to the area S37= k3*ln(V3/V03), which simulates the Weber-Fechner
law in the plane (x3, x7).

Figure 35 shows the (8*8)-matrix W, which represents the sum of the (8*8)-matrix
representations of these hyperbolic numbers: W=G04+G15+G26+G37.
{(V0V00)2a0)0.5}
{(V0V00)2a0)0.5}
-{(V0V00)2a0)0.5}
-{(V0V00)2a0)0.5}
(V0-V00)

{(V1-V01)2a1)0.5}

-{(V2V02)2-a2)0.5}

-{(V3V03)2-a0)0.5}

{(V1-V01)2a1)0.5}

-{(V2V02)2-a2)0.5}

-{(V3V03)2-a0)0.5}

-{(V1V01)2-a1)0.5}

-{(V2V02)2-a2)0.5}

-{(V3V03)2-a0)0.5}

-{(V1V01)2-a1)0.5}

-{(V2V02)2-a2)0.5}

-{(V3V03)2-a0)0.5}

(V1-V01)

(V2-V02)

(V3-V03)

-{(V3-V03)2a0)0.5}

(V0-V00)

(V1-V01)

(V2-V02)

(V3-V03)

-{(V3-V03)2a0)0.5}

-(V0-V00)

-(V1-V01)

(V2-V02)

(V3-V03)

-{(V3-V03)2a0)0.5}

-(V0-V00)

-(V1-V01)

(V2-V02)

(V3-V03)

(V0-V00)

(V1-V01)

(V2-V02)

(V3-V03)

(V0-V00)

(V1-V01)

(V2-V02)

(V3-V03)

-(V0-V00)

-(V1-V01)

(V2-V02)

(V3-V03)

-(V0-V00)

-(V1-V01)

(V2-V02)

(V3-V03)

{(V0V00)2a0)0.5}
{(V0V00)2a0)0.5}
-{(V0V00)2a0)0.5}
-{(V0V00)2a0)0.5}

{(V1V01)2a1)0.5}
{(V1V01)2a1)0.5}
-{(V1V01)2a1)0.5}
-{(V1V01)2a1)0.5}

-{(V2V02)2a2)0.5}
-{(V2V02)2a2)0.5}
-{(V2V02)2a2)0.5}
-{(V2V02)2a2)0.5}

-{(V3-V03)2a0)0.5}

Figure 35. The matrix representation of the sum W=G04+G15+G26+G37 of the
hyperbolic numbers G04, G15, G26, G37, which belong to four planes (x0, x4), (x1, x5), (x2, x6),
(x3, x7) inside the 8-dimensional space (explanation in the text).
One can see that the (8*8)-matrix W on Figure 35 has a special structure: its both
(4*4)-quadrants along each diagonals are identical to each other. This fact allows expressing
the matrix W in the following form:
W = [1 0; 0 1]VM0 + [0 1; 1 0]VM1 ,

(9)

where [1 0; 0 1] and [0 1; 1 0] are matrix representations of real and imaginary units of
hyperbolic numbers; M0 is the (4*4)-matrix, which reproduces each of (4*4)-quadrants along
the main diagonal; M1 is the (4*4)-matrix, which reproduces each of (4*4)-quadrants along
the second diagonal. The expression (9) means that the matrix W belongs to so called
«tensornumbers» (more precisely, to a category of «tensorhyperbolic numbers»), which will
be introduced below in a special Section.
Our approach, which was described above on the base of genetic matrices, allows
natural modeling such kind of 2N-parametric systems with its 2-parametric hyperbolic subsystems by means of the described type of a (2N*2N)-matrix operator of a 2N-dimensional
space with appropriate quantity of hyperbolic planes inside it (in this case each of hyperbolic
planes corresponds to an individual channel of perception with its own coefficient k and the
threshold value V0 in the expression (6)). This (2N*2N)-matrix operator also belongs to the
category of tensorhyperbolic numbers, because it can be expressed by means of the
expression (9), where M0 and M1 are (2N-1*2N-1)-matrices.
So we have two important facts:
•
•

the logarithmic Weber-Fechner law has a total meaning for different sub-systems of
perception inside the whole perception system of organism;
this unity of all subsystems of perception inside the whole organism, which are
subordinated to the Weber-Fechner law, can be expressed by means of 2Ndimensional tensorhyperbolic numbers by analogy with the expression (9).

These facts allow the author to put forward the following statement (or hypothesis): a
living organism percepts an external world as a multi-parametric system, which belongs to a
tensorhyperbolic category. In other words, for the whole perception system of a living
organism, the external world is a life of tensorhyperbolic numbers in time. Correspondingly,
interrelations of a living organism with the external world are realized on the base of
processing of percepted tensorhyperbolic numbers, which are systematically changed over
time in accordance with changes of external stimuluses (in addition, the author believes that a
living organism can be regarded as a life of tensornumbers over time; in this approach
tensorcomplex numbers and their extensions deserve special attention). This mathematical
approach to phenomenology of perception of the world is closely connected with the multiparametric system of the genetic coding in its matrix form of representation; such connection
allows a genetical transfer of this general biological property along a chain of generations.
10. REFLECTION OPERATORS AND GENETIC PROJECTORS.
By definition, a linear operator L is the reflection operator (or briefly, a "reflection")
if and only if it satisfies the following criterion: L2 = E, where E is the identity operator (it is
also denoted as «1»), that is the real unit (see for example [Vinberg, 2003, Chapter 6]). The
imaginary unit «i» of hyperbolic numbers satisfies this criterion and consequently it is the
reflection operator: i2=+1 (see Figure 33). Hyperbolic number with unit coordinates (1+i) is
sum of the identity operator «1» and the reflection operator «i». The well-known (2*2)matrix represenation of the imaginary unit is the following: [0 1; 1 0] (Figure 33). The acion
of this reflection operator on a voluntary 2-dimensional vector generates a new vector, which
is a mirror-symmetrical analogue of the initial vector relative to the bisector of the angle
between the x-axis and y-axis of the coordinate system (x, y). For example, [3, 5]*[0 1; 1 0] =
[5, 3]. A reflection is an involution: when applied twice in succession, every point returns to
its original location, and every geometrical object is restored to its original state.

But we have shown above that many of sums of genetic projectors are the (2N*2N)matrix representation of hyperbolic numbers, which have their own real and imaginary units
in respective planes inside 2N-dimensional space (see for example Figures 5, 6 and 29).
Correspondingly, imaginary units of these hyperbolic numbers are (2N*2N)-operators of
reflections in these planes inside 2N-dimensional space. It gives evidences in favor of that the
system of genetic coding actively uses also reflection operators. It is interesting because
mirror reflections exist in many genetically inherited biological structures, including left and
right halves of human and animal bodies. In the author's laboratory, the genetic (2N*2N)matrices of reflection operators are used to analyze mirror symmetries in molecular-genetic
systems including long genetic sequences, genetic palindromes, chromosomal inversion, etc.
11. THE SYMBOLIC MATRICES OF GENETIC DUPLETS AND TRIPLETS
In Section 1 the author promised to explain a relation of numeric matrices R4, R8, H4,
H8 (Figure 1), which were the initial matrices in this article, with a phenomenology of the
genetic coding system in matrix forms of its representation. This Section is devoted to the
explanation. Theory of noise-immunity coding is based on matrix methods. For example,
matrix methods allow transferring high-quality photos of Mar’s surface via millions of
kilometers of strong interference. In particularly, tensor families of Hadamard matrices are
used for this aim. Tensor multiplication of matrices is the well-known operation in fields of
signals processing technology, theoretical physics, etc. It is used for transition from spaces
with a smaller dimension to associated spaces of higher dimension.
By analogy with theory of noise-immunity coding, the 4-letter alphabet of RNA
(adenine A, cytosine C, guanine G and uracil U) can be represented in a form of the symbolic
(2*2)-matrix [C U; A G] (Figure 36) as a kernel of the tensor family of symbolic matrices [C
U; A G](n), where (n) means a tensor power (Figure 36). Inside this family, this 4-letter
alphabet of monoplets is connected with the alphabet of 16 duplets and 64 triplets by means
of the second and third tensor powers of the kernel matrix: [C U; A G](2) and [C U; A G](3),
where all duplets and triplets are disposed in a strict order (Figure 36). We begin with the
alphabet A, C, G, U of RNA here because of mRNA-sequences of triplets define protein
sequences of amino acids in a course of its reading in ribosomes.
Figure 36 contains not only 64 triplets but also amino acids and stop-codons encoded
by the triplets in the case of the Vertebrate mitochondrial genetic code that is the most
symmetrical
among
known
variants
of
the
genetic
code
(http://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi). Let us explain the black-andwhite mosaics of [C U; A G](2) and [C U; A G](3) (Figure 36) which reflect important features
of the genetic code. These features are connected with a specificity of reading of mRNAsequences in ribosomes to define protein sequences of amino acids (this is the reason, why
we use the alphabet A, C, G, U of RNA in matrices on Figure 36; below we will consider the
case of DNA-sequences separately).
	  
C	  
A	  
	  

	  
U	  
G	  
	  

	  
	  
	  
	  

CC	  
CA	  
AC	  
AA	  

CU	  
CG	  
AU	  
AG	  

UC	  
UA	  
GC	  
GA	  

UU	  
UG	  
GU	  
GG	  

CCC	  
Pro	  
CCA	  
Pro	  
CAC	  
His	  
CAA	  
Gln	  
ACC	  
Thr	  
ACA	  
Thr	  
AAC	  
Asn	  
AAA	  
Lys	  

CCU	  	  
Pro	  
CCG	  
Pro	  
CAU	  
His	  
CAG	  
Gln	  
ACU	  
Thr	  
ACG	  
Thr	  
AAU	  
Asn	  
AAG	  
Lys	  

CUC	  
Leu	  
CUA	  
Leu	  
CGC	  
Arg	  
CGA	  
Arg	  
AUC	  
Ile	  
AUA	  
Met	  
AGC	  
Ser	  
AGA	  
Stop	  

CUU	  
Leu	  
CUG	  
Leu	  
CGU	  
Arg	  
CGG	  
Arg	  
AUU	  
Ile	  
AUG	  
Met	  
AGU	  
Ser	  
AGG	  
Stop	  

UCC	  
Ser	  
UCA	  
Ser	  
UAC	  
Tyr	  
UAA	  
Stop	  
GCC	  
Ala	  
GCA	  
Ala	  
GAC	  
Asp	  
GAA	  
Glu	  

UCU	  
Ser	  
UCG	  
Ser	  
UAU	  
Tyr	  
UAG	  
Stop	  
GCU	  
Ala	  
GCG	  
Ala	  
GAU	  
Asp	  
GAG	  
Glu	  

UUC	  
Phe	  
UUA	  
Leu	  
UGC	  
Cys	  
UGA	  
Trp	  
GUC	  
Val	  
GUA	  
Val	  
GGC	  
Gly	  
GGA	  
Gly	  

UUU	  
Phe	  
UUG	  
Leu	  
UGU	  
Cys	  
UGG	  
trp	  
GUU	  
Val	  
GUG	  
Val	  
GGU	  
Gly	  
GGG	  
Gly	  

Figure 36. The first three representatives of the tensor family of RNA-alphabetic matrices [C
U; A G](n). Black color marks 8 strong duplets in the matrix [C U; A G](2) (at the top) and 32
triplets with strong roots in the matrix [C U; A G](3) (bottom). 20 amino acids and stopcodons, which correspond to the triplets, are also shown in the matrix [C U; A G](3) for the
case of the Vertebrate mitochondrial genetic code
A combination of letters on the two first positions of each triplet is ususally termed as
a “root” of this triplet [Konopelchenko, Rumer, 1975a,b; Rumer, 1968]. Modern science
recognizes many variants (or dialects) of the genetic code, data about which are shown on the
NCBI’s website http://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi. 19 variants (or
dialects) of the genetic code exist that differ one from another by some details of
correspondences between triplets and objects encoded by them (these dialects are known at
July 10, 2013, but perhaps later their list be increased). Most of these dialects (including the
so called Standard Code and the Vertebrate Mitochondrial Code) have the symmetric general
scheme of these correspondences, where 32 “black” triplets with “strong roots” and 32
“white” triplets with “weak” roots exist (the next Section shows all of these 19 dialects in
details). In this basic scheme, the set of 64 triplets contains 16 subfamilies of triplets, every
one of which contains 4 triplets with the same two letters on the first positions (an example of
such subsets is the case of four triplets CAC, CAA, CAT, CAG with the same two letters CA
on their first positions). In the described basic scheme, the set of these 16 subfamilies of NNtriplets is divided into two equal subsets. The first subset contains 8 subfamilies of so called
“two-position” NN-triplets, a coding value of which is independent on a letter on their third
position: (CCC, CCT, CCA, CCG), (CTC, CTT, CTA, CTG), (CGC, CGT, CGA, CGG),
(TCC, TCT, TCA, TCG), (ACC, ACT, ACA, ACG), (GCC, GCT, GCA, GCG), (GTC, GTT,
GTA, GTG), (GGC, GGT, GGA, GGG). An example of such subfamilies is the four triplets
CGC, CGA, CGT, CGC, all of which encode the same amino acid Arg, though they have
different letters on their third position. The 32 triplets of the first subset are termed as
“triplets with strong roots” [Konopelchenko, Rumer, 1975a,b; Rumer, 1968]. The following
duplets are appropriate 8 strong roots for them: CC, CT, CG, AC, TC, GC, GT, GG (strong
duplets). All members of these 32 NN-triplets and 8 strong duplets are marked by black color
in the matrices [C U; A G](3) and [C U; A G](2) on Figure 36.
The second subset contains 8 subfamilies of “three-position” NN-triplets, the coding
value of which depends on a letter on their third position: (CAC, CAT, CAA, CAG), (TTC,
TTT, TTA, TTG), (TAC, TAT, TAA, TAG), (TGC, TGT, TGA, TGG), (AAC, AAT, AAA,
AAG), (ATC, ATT, ATA, ATG), (AGC, AGT, AGA, AGG), (GAA, GAT, GAA, GAG). An
example of such subfamilies is the four triplets CAC, CAA, CAT, CAC, two of which (CAC,
CAT) encode the amino acid His and the other two (CAA, CAG) encode another amino acid

Gln. The 32 triplets of the second subset are termed as “triplets with weak roots”
[Konopelchenko, Rumer, 1975a,b; Rumer, 1968]. The following duplets are appropriate 8
weak roots for them: CA, AA, AT, AG, TA, TT, TG, GA (weak duplets). All members of
these 32 NN-triplets and 8 weak duplets are marked by white color in the matrices
[C U; A G](3) and [C U; A G](2) on Figure 36.
From the point of view of its black-and-white mosaic, each of columns of genetic
matrices [C U; A G](2) and [C U; A G](3) has a meander-like character and coincides with
one of Rademacher functions that form orthogonal systems and well known in discrete
signals processing. These functions contain elements “+1” and “-1” only. Due to this fact,
one can construct Rademacher representations of the symbolic genomatrices [C U; A G](2)
and [C U; A G](3) (Figure 36) by means of the following operation: each of black duplets and
of black triplets is replaced by number “+1” and each of white duplets and white triplets is
replaced by number “-1”. This operation leads immediately to the matrices R4 and R8 from
Figure 1, that are the Rademacher representations of the phenomenological genomatrices
[C U; A G](2) and [C U; A G](3).
If columns of the matrix [C U; A G](3) on Figure 36 are numerated from left to right
by indexes 0, 1, 2, …, 7, one can see that 4 columns with even indexes 0, 2, 4, 6 contain 32
triplets, each of which has nitrogenous bases C or A on its third position, that is in its suffix
(these C and A are usually termed “amino bases”). Other 4 columns with odd indexes 1, 3, 5,
7 contain other 32 triplets, each of which has nitrogenous bases T or G on its third position
(these T and G are usually termed “keto bases”). The following important phenomen is
connected with this separation of the matrix [C U; A G](3) in columns with even and odd
indexes: adjacent columns with indexes “0 and 1”, “2 and 3”, “4 and 5” and “6 and 7”
contain identical list of amino acids and stop-codons (these adjacent columns are twins from
this point of view). Consequently the symbolic matrix [C U; A G](3) can be represented as a
sum of two sparse matrices with identical lists of amino acids and stop-codons: the first of
these two matrices coincides with the matrix [C U; A G](3) in columns with even indexes and
has zero columns with odd indexes; the second one coincides with the matrix [C U; A G](3) in
columns with odd indexes and has zero columns with even indexes.
By analogy the Rademacher representation R8 of this symbolic matrix [C U; A G](3)
can be also decomposed into two sparse matrices RL8 and RR8 (Figure 26), the first of which
has all non-zero columns with even indexes and the second one has all non-zero columns
with odd indexes. As it was shown above, each of these numeric (8*8)-matrices RL8 and RR8
represents split-quaternion by Cockle, whose coordinates are equal to 1, in an 8-dimensional
space. It means that the system of correspondences between the set of 64 triplets (with their
internal separation into subsets of triplets with strong and weak roots) and the set of 20 amino
acids and stop-codon is created by the nature in accordance with the layout of these two splitquaternions RL8 and RR8 in an 8-dimensional space. In some extend this double numeric
construction resembles double helix of DNA.
But each of these (8*8)-matrices RL8 and RR8 consists of two hyperbolic numbers
(Figure 29): RL8= (e0+e4)+(e2+e6) and RR8=(e1+e5)+(e3+e7). In other words the system of
correspondences between the set of triplets and the set of amino acids and stop-codons is
based on the mentioned 4 hyperbolic numbers in an 8-dimensional space. One can mention
that here we are meeting again with a set of 4 elements in some analogy with the sets of 4
elements in the genetic alphabets of nitrogenous bases in DNA and RNA - A, C, G, T/U (and
also with the Ancient set of Pythagorean Tetraktys - http://en.wikipedia.org/wiki/Tetractys).

Whether any symmetry exists between structures of these 4 hyperbolic numbers and the
phenomenological disposition of amino acids and stop-codons in the genomatrix [C U; A
G](3) on Figure 36? To receive an answer on this question, let us compare a content of
corresponding cells of the symbolic genomatrix [C U; A G](3) (Figure 36) with non-zero cells
of matrices (e0+e4), (e2+e6), (e1+e5) and (e3+e7), which represent these 4 hyperbolic numbers
(Figure 29). Figure 37 shows results of such comparison for the hyperbolic numbers (e0+e4)
and (e2+e6) with even indexes of their column projectors; results of such comparison for the
hyperbolic numbers (e1+e5) and (e3+e7) with odd indexes are identical because in the matrix
[C U; A G](3) (Figure 36) adjacent columns with indexes “0 and 1”, “2 and 3”, “4 and 5” and
“6 and 7” contain identical lists of amino acids and stop-codons. Those amino acids, which
belong to matrix cells with triplets of strong roots, are marked by bold letters on Figure 37.
One can see here the following symmetrical feature: each of real and imagine parts of these
hyperbolic numbers (e0+e4) and (e2+e6) contains an equal quantity of amino acids marked by
bold letters and also an equal quantity of amino acids of another type. By such way we
receive a special separation of the set of 20 amino acids into a few groups, which belong to
real parts or to imagine parts of these hyperbolic numbers and which should be analized in
future more attentively.

e0+e4 =

e2+e6 =

1000 0000
1000 0000
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0
0000 1000
0000 1000
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0

+

00100000
00100000
00100000
00100000 +
00000010
00000010
00000010
00000010

0000 1000
0000 1000
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0
1000 0000
1000 0000
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0

Pro 0 0 0 0 0 0 0
Pro 0 0 0 0 0 0 0
His 0 0 0 0 0 0 0
è Gln 0 0 0 0 0 0 0
0 0 0 0 Ala 0 0
0 0 0 0 Ala 0 0
0 0 0 0 Asp 0 0
0 0 0 0 Glu 0 0

0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0 è
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0

0 0 Leu 0 0 0 0 0
0 0 Leu 0 0 0 0 0
0 0 Arg 0 0 0 0 0
0 0 Arg 0 0 0 0 0
0 0 0 0 0 0 Val 0
0 0 0 0 0 0 Val 0
0 0 0 0 0 0 Gly 0
0 0 0 0 0 0 Gly 0

+

+

0 0 0 0 Ser 0 0 0
0 0 0 0 Ser 0 0 0
0 0 0 0 Tyr 0 0 0
0 0 0 0 Stop 0 0 0
Thr 0 0 0 0 0 0 0
Thr 0 0 0 0 0 0 0
Asn 0 0 0 0 0 0 0
Lys 0 0 0 0 0 0 0

0 0 0 0 0 0 Phe 0
0 0 0 0 0 0 Leu 0
0 0 0 0 0 0 Cys 0
0 0 0 0 0 0 Trp 0
0 0 Ile 0 0 0 0 0
0 0 Met 0 0 0 0 0
0 0 Ser 0 0 0 0 0
0 0 Stop 0 0 0 0 0

Figure 37. The separation of 20 amino acids and stop-codons in accordance with real
and imagine parts of hyperbolic numbers of e0+e4 and e0+e4. Those amino acids, which
belong to matrix cells with triplets of strong roots, are marked by bold letters.
Now let us pay attention to Figure 38, where beginnings of appropriate tensor family
of matrices [C T; A G](n) for the case of the DNA alphabet (adenine A, cytosine C, guanine G
and thymine T) are shown. What kind of black-and-white mosaics (or a disposition of
elements “+1” and “-1” in numeric representations of these symbolic matrices) can be
appropriate in the case of the DNA alphabet for the basic matrix [C T; A G] and [C T; A
G](2)? The important phenomenological fact is that the thymine T is a single nitrogenous base
in DNA which is replaced in RNA by another nitrogenous base U (uracil) for unknown
reason (this is one of the mysteries of the genetic system). In other words, in this system the
letter T is the opposition in relation to the letter U, and so the letter T can be symbolized by
number “-1” (instead of number “+1” for U). Taking this into account, a simple algorithm

exists, which transforms the black-and-white mosaics of matrices [C U; A G](2) and [C U; A
G](3) into other mosaics of matrices [C T; A G](2) and [C T; A G](3) that are shown on Figure
38. Concerning to their mosaics, the matrices [C T; A G](2) and [C T; A G](3) coincide with
mosaics of the Hadamard matrices H4 and H8 (Figure 1), which are their Hadamard
represenations (here one should remind that Hadamard matrices contain only entries +1 and
-1). The mentioned algorithm was desribed in a few author's works (see for example
[Petoukhov, 2012a,b]). The Appendix 3 describes another way to construct Hadamard (4*4)and (8*8)-matrices on the base of the unique status of the letter T in the genetic alphabet A,
C, G and T in DNA.

C

T

A

G
;

CC

CT

TC

TT

CA

CG

TA

TG

AC

AT

GC

GT

AA

AG

GA

GG

CCC	  
Pro
CCA	  
Pro
CAC	  
His
CAA	  
Gln
ACC	  
Thr
ACA	  
Thr
AAC	  
Asn
AAA	  
Lys

CCT	  
Pro
CCG	  
Pro
CAT	  
His
CAG	  
Gln
ACT	  
Thr
ACG	  
Thr
AAT	  
Asn
AAG	  
Lys

CTC	  
Leu
CTA	  
Leu
CGC	  
Arg
CGA	  
Arg
ATC	  
Ile
ATA	  
Met
AGC	  
Ser
AGA	  
Stop

CTT	  
Leu
CTG	  
Leu
CGT	  
Arg
CGG	  
Arg
ATT	  
Ile
ATG	  
Met
AGT	  
Ser
AGG	  
Stop

TCC	  
Ser
TCA	  
Ser
TAC	  
Tyr
TAA	  
Stop
GCC	  
Ala
GCA	  
Ala
GAC	  
Asp
GAA	  
Glu

TCT	  
Ser
TCG	  
Ser
TAT	  
Tyr
TAG	  
Stop
GCT	  
Ala
GCG	  
Ala
GAT	  
Asp
GAG	  
Glu

TTC	  
Phe
TTA	  
Leu
TGC	  
Cys
TGA	  
Trp
GTC	  
Val
GTA	  
Val
GGC	  
Gly
GGA	  
Gly

TTT	  
Phe
TTG	  
Leu
TGT	  
Cys
TGG	  
Trp
GTT	  
Val
GTG	  
Val
GGT	  
Gly
GGG	  
Gly

Figure 38. The first three representatives [C T; A G], [C T; A G](2) and [C T; A G](3)
of the tensor family of DNA-alphabetic matrices [C T; A G](n). These symbolic matrices
[C T; A G](2) and [C T; A G](3) have mosaics, which coincide with the mosaics of their
Hadamard representations H4 and H8 on Figure 1. All amino acids and stop-codons are shown
for the case of the Vertebrate mitochondrial genetic code by analogy with Figure 36.
12. GENETIC PROJECTORS AND THE EXCLUSION PRINCIPLE FOR
EVOLUTIONARY CHANGES OF DIALECTS OF THE GENETIC CODE
This Section describes an exclusion principle of evolution of dialects of the genetic
code. This principle, which was discovered by the author, shows that evolutionary changes of
dialects of the genetic code are related with the genetic projectors. One should note that
discovering of exclusion principles of nature is a significant task of mathematical natural
science (the exclusion principle by Pauli in quantum mechanics is one of examples).
The following list contains all known 19 dialects of the genetic code presented at July
10, 2013 on the NCBI’s website http://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi:

The Standard Code
1	  
The Vertebrate Mitochondrial Code
2	  
The Yeast Mitochondrial Code
3	  
The Mold, Protozoan, and Coelenterate Mitochondrial Code and the
4	  
Mycoplasma/Spiroplasma Code
	  
The Invertebrate Mitochondrial Code
5	  
The Ciliate, Dasycladacean and Hexamita Nuclear Code
6	  
The Echinoderm and Flatworm Mitochondrial Code
7	  
The Euplotid Nuclear Code
8	  
The Bacterial, Archaeal and Plant Plastid Code
9	  
10	   The Alternative Yeast Nuclear Code
11	   The Ascidian Mitochondrial Code
12	   The Alternative Flatworm Mitochondrial Code
13	   Blepharisma Nuclear Code
14	   Chlorophycean Mitochondrial Code
15	   Trematode Mitochondrial Code
16	   Scenedesmus Obliquus Mitochondrial Code
17	   Thraustochytrium Mitochondrial Code
18	   Pterobranchia Mitochondrial Code
19	   Candidate Division SR1 and Gracilibacteria Code
Figure 39 shows these dialects in typical forms of black-and-white genetic matrices
[C U; A G](3), where black cells correspond to triplets with strong roots and white cells
correspond to triplets with weak roots in cases of each individual dialect. One can see that the
vast majority of dialects (13 dialect from the set of 19 dialects) possesses the identical blackand-white mosaics though some triplets have different code meanings in different dialects
(they encode different amino acid or stop-signal in different dialects) in comparison with
their meanings in the vertebrate mitochondria genetic code (the author takes the case of the
vertebrate mitochondria genetic code as the basic case because this dialect is the most
symmetrical). All such triplets, which change their code meaning, are marked by red letters
on Figure 39. From the list of 19 dialects only the following 6 dialects have their matrix
[C U; A G](3) with atypical black-and-white mosaics (see Figure 39): 5)	   The	   Invertebrate	  
Mitochondrial	   Code;	   7)	   The	   Echinoderm	   and	   Flatworm	   Mitochondrial	   Code; 10)	   The	  
Alternative	   Yeast	   Nuclear	   Code;	   12)	   The	   Alternative	   Flatworm	   Mitochondrial	   Code;
15)	  Trematode	  Mitochondrial	  Code; 16)	  Scenedesmus	  Obliquus	  Mitochondrial	  Code.
By analogy with the Rademacher presentation R8 (see above Figures 1, 36, and
Section 10), one can again replace black triplets by elements «+1» and white triplets by
elements «-1» to receive numeric representations of these genetic matrices [C U; A G](3) of
all dialects. Such numeric representations of genetic matrices can be conditionally called as
«±1-represenations». The result is the following: this numeric ±1-representation of matrices
[C U; A G](3) of every of 19 dialects is decomposed into a sum of 8 sparse (8*8)-matrices of
«column projectors» (or «row projectors») (see Figure 39). It is connected with the fact that
all cells on main diagonals of these numeric matrices contain only «+1» (see the theorem in
Section 7). This general feature of all dialects is a consequence of the following
phenomenologic fact: biological evolution never changes code meaning of 16 black triplets,
which occupies (2*2)-sub-quadrants along the main diagonal of these matrices (CCC, CCU,
CCA, CCG, CGC, CGU, CGA, CGG, GCC, GCU, GCA, GCG, GGC, GGU, GGA, GGG).
From the point of view of algebra of projection operators, the described facts mean
that biologic evolution of dialects of the genetic code is connected with a condition of
conservation of the numeric ±1-representation of the genetic matrix [C U; A G](3) as a sum of

8 column projectors (or 8 row projectors). In other words, algebra of projectors shows an
existence of an algebraic invariant of biological evolution.
One can formulate here the phenomenologic exclusion principle for evolutionary
changes of dialects of the genetic code: it is forbidden for biological evolution to violate a
separation of the set of 64 triplets into two subsets of triplets with strong and weak roots
(black and white triplets) in a such way that a black-and-white mosaic of the genetic matrix
[C U; A G](3) in its «±1-representation» ceases to be a sum of 8 column projectors (or 8 row
projectors).
The Vertebrate Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Met
AGC
Ser
AGA
Stop

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Stop

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Trp
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Stop
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

The Standard Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

The Yeast Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Thr
CUU
Thr
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Met
AGC
Ser
AGA
Arg

CUA
Thr
CUG
Thr
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Trp
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

The Mold, Protozoan, and Coelenterate Mitochondrial Code and the
Mycoplasma/Spiroplasma Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Trp
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Trp
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

The Invertebrate Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Met
AGC
Ser
AGA
Ser

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Ser

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

The Ciliate, Dasycladacean and Hexamita Nuclear Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Gln
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Gln
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Stop
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

The Echinoderm and Flatworm Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Asn

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Ser

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Ser

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Trp
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Cys
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

The Euplotid Nuclear Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

The Bacterial, Archaeal and Plant Plastid Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Stop
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Stop
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Trp
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

The Alternative Yeast Nuclear Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Ser
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

The Ascidian Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Met
AGC
Ser
AGA
Gly

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Gly

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

The Alternative Flatworm Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Asn

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Ser

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Ser

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Trp
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Gln
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Stop
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Leu
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Stop
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

Blepharisma Nuclear Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

Chlorophycean Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

Trematode Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Asn

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Met
AGC
Ser
AGA
Ser

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Ser

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Trp
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Leu
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Stop
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Stop
UGC
Cys
UGA
Stop
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

Scenedesmus Obliquus Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Stop
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

Thraustochytrium Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

Pterobranchia Mitochondrial Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Ser

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Lys

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Trp
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

Candidate Division SR1 and Gracilibacteria Code:
CCC
Pro
CCA
Pro
CAC
His
CAA
Gln
ACC
Thr
ACA
Thr
AAC
Asn
AAA
Lys

CCU
Pro
CCG
Pro
CAU
His
CAG
Gln
ACU
Thr
ACG
Thr
AAU
Asn
AAG
Lys

CUC
Leu
CUA
Leu
CGC
Arg
CGA
Arg
AUC
Ile
AUA
Ile
AGC
Ser
AGA
Arg

CUU
Leu
CUG
Leu
CGU
Arg
CGG
Arg
AUU
Ile
AUG
Met
AGU
Ser
AGG
Arg

UCC
Ser
UCA
Ser
UAC
Tyr
UAA
Stop
GCC
Ala
GCA
Ala
GAC
Asp
GAA
Glu

UCU
Ser
UCG
Ser
UAU
Tyr
UAG
Stop
GCU
Ala
GCG
Ala
GAU
Asp
GAG
Glu

UUC
Phe
UUA
Leu
UGC
Cys
UGA
Gly
GUC
Val
GUA
Val
GGC
Gly
GGA
Gly

UUU
Phe
UUG
Leu
UGU
Cys
UGG
trp
GUU
Val
GUG
Val
GGU
Gly
GGG
Gly

Figure 39. The matrices [C U; A G](3) show 19 known dialects of the genetic code.
Black (white) cells contain triplets with strong (weak) roots. Red color shows triplets, which
have different code meanings in a considered dialect in comparison with their code meanings
in the Vertebrate Mitochondrial Code, which is the most symmetrical among all dialects.
13 ABOUT «TENSORCOMPLEX» NUMBERS
	  
This	   Section describes a system of multidimensional numbers, which seem to be a
new one for mathematical natural sciences and which are constructed on the basis of sums of
genetic projectors described above. Here the author will take some data from his work
[Petoukhov, 2012b].
First of all, let us return to two sums of genetic projectors h0+h2 and h1+h3 (from
Figure 10), which were received from the Hadamard matrix H4 (Figure 1). The first sum
h0+h2 is decomposed into two basic matrices e0 = [1 0 0 0; -1 0 0 0; 0 0 1 0; 0 0 -1 0] and e2 =
[0 0 -1 0; 0 0 1 0; 1 0 0 0; -1 0 0 0], the set of which is closed relative to multiplication and
defines the multiplication table of complex numbers. The second sum h1+h3 is decomposed
into other basic matrices e1 = [0 1 0 0; 0 1 0 0; 0 0 0 1; 0 0 0 1] and e3 = [0 0 0 1; 0 0 0 1;

0 -1 0 0; 0 -1 0 0], the set of which is closed relative to multiplication and also defines the
multiplication table of complex numbers (see Figure 10). Now one can consider linear
compositions CL and GR on basis of these basic matrices (Figure 37, upper level). The work
[Petoukhov, 2012b] shows that each of CL and CR is a (4*4)-matrix representation of
2-parametric complex numbers over field of real numbers but these representations concern
different 2-dimensional planes (x0, x2) and (x1, x3) of a 4-dimensional vector space.
Many people know that the sum of two complex numbers gives a new complex
number and that the product of two complex numbers is commutative. This is true when
these complex numbers belong to the same complex plane. But the sum of these (4x4)representations of two complex numbers CL and CR, which belong to different planes of
4-dimensional space, is not equal to a new complex number, and their product is not
commutative: CL*CR ≠ CR*CL. Each of these products CL*CR and CR*CL gives a new
complex number. Figure 40 (two middle levels) show expressions CL*CR and CR*CL with
their decompositions into sets of two matrices, which correspond to the multiplication table
of complex numbers. Figure 40 (bottom level) also shows an expression of a corresponding
commutator. One should note here that the expression of the commutator CL*CR-CR*CL on
Figure 40 belongs to so called “tensorcomplex numbers”, which will be introduced below
(Figures 41 and 42) with marks of their quadrants by means of yellow and green colors to
emphasise a special cross-like structure of this type of numbers.
	  
a0	   0	  
	  
-­‐a0	   0	  
CL=a0*e0+a2*e2=	   a2	   0	  
-­‐a2	   0	  

CL*CR=

CR*CL=

-­‐a2	  
a2	  
a0	  
-­‐a0	  

0, a0*a1+a2*a3, 0, a0*a3-a1*a2
0, -a0*a1-a2*a3, 0, a1*a2-a0*a3
0, a1*a2-a0*a3, 0, a0*a1+a2*a3
0, a0*a3-a1*a2, 0, -a0*a1-a2*a3
-a0*a1-a2*a3, 0, a1*a2-a0*a3, 0
-a0*a1-a2*a3, 0, a1*a2-a0*a3, 0
a0*a3-a1*a2, 0, -a0*a1-a2*a3, 0
a0*a3-a1*a2, 0, -a0*a1-a2*a3, 0

0	   	  
0	   	  
0	   ;	  	  	  	  	  CR=a1*e1+a3*e3=	  
0	  

= -(a0*a1+a2*a3)*

=-(a0*a1+a2*a3)*

a0*a1+a2*a3, a0*a1+a2*a3
CL*CR-CR*CL= a0*a1+a2*a3, -a0*a1-a2*a3
a1*a2-a0*a3, a1*a2-a0*a3
a1*a2-a0*a3, a0*a3-a1*a2

	  0	  
	  0	  
0	  
0	  

a1	  
a1	  
-­‐a3	  
-­‐a3	  

0	  
0	  
0	  
0	  

a3	  
a3	  
a1	  
a1	  

0 -1 0 0
0 1 0 0 +(a1*a2-a0*a3)*
0 0 0 -1
0 00 1

1000
1000
0010
0010

- ( a1*a2-a0*a3)*

0
0
1
1

0 0 0 -1
0 00 1
0 10 0
0 -1 0 0
0 -1 0
0 -1 0
0 0 0
0 0 0

a0*a3-a1*a2, a0*a3-a1*a2
a0*a3-a1*a2, a1*a2-a0*a3
a0*a1+a2*a3, a0*a1+a2*a3
a0*a1+a2*a3, -a0*a1-a2*a3

Figure 40. Upper level: CL is a (4*4)-matrix representation of complex numbers z = a0 + a2*i
on a 2-dimensional plane (x0, x2) in a 4-dimensional space (x0, x1, x2, x3); here i is imaginary
unit of complex numbers (i2 = -1). CR is a (4*4)-matrix representation of complex numbers
z = a1 + a3*i on another 2-dimensional plane (x1, x3) in the same 4-dimensional space (x0, x1,
x2, x3). Here a0, a1, a2 and a3 are real numbers. Two middle levels: expressions of products
CL*CR and CR*CL; in both cases two basic matrices define the multiplication table of
complex numbers. Bottom level: the expression of the commutator CL*CR-CR*CL.

Now let us take a sum V = CL + CR of these (4*4)-matrix representations of complex
numbers, which are related with different planes of the 4-dimensional space (Figure 41).
	  
a0	  
V	  =	  CL	  +	  CR	  =	   -­‐a0	  
a2	  
-­‐a2	  

a1	  
a1	  
-­‐a3	  
-­‐a3	  

a0
V = (2*(a0 + a2 )) * 0
-a2
0
-1

2

2

-1

-a0
0
a2
0

-­‐a2	  
a2	  
a0	  
-­‐a0	  
a2
0
a0
0

a3	   	  
a3	   =	  [1	  0;	  0	  1]UM	  +	  [0	  1;	  -­‐1	  0]UP	  
a1	  
a1	  
-a2
0 + (2*(a12 + a32))-1 *
-a0
0

0
a1
0
a3

0
a1
0
a3

0
-a3
0
a1

0
-a3
0
a1

Figure 41. Upper level: the sum V = CL + CR (see Figure 40). Here M=[a0 a1; -a0 a1]
and P=[-a2 a3; a2 a3]; U is a symbol of tensor (or Kronecker) multiplication. Bottom level: the
expression of the inverse matrix V-1.
Figure 41 shows that V=CL+CR is a (4*4)-matrix of a special type, where both
quadrants (marked by yellow color) along the main diagonal are identical each other, and two
other quadrants (marked by green color) differ each from other only by inversion of sign in
their entries. This matrix can be written in a form V = [1 0; 0 1]UM + [0 1; -1 0]UP, where
M=[a0 a1; -a0 a1] and P=[-a2 a3; a2 a3]; U is a symbol of tensor multiplication; [1 0; 0 1] – a
matrix representation of real unit; [0 1; -1 0] – a matrix representation of imaginary unit; a0,
a1, a2 and a3 are real numbers. Such form of denotation resembles a well-known matrix
representation of usual complex numbers: z = [1 0; 0 1]*a + [0 1; -1 0]*b, where a and b are
real numbers. But it differs in the following aspects:
1)
2)
3)

the expression V = [1 0; 0 1]UM + [0 1; -1 0]UP includes tensor
multiplication U instead of usual multiplication in the matrix representation
of complex numbers;
in the case of V, multipliers of the basic elements are square matrices M
and P instead of real numbers «a» and «b» in the case of complex numbers.
The order of the factors inside V is essential since tensor multiplication is
not commutative.

Let us consider a set of matrices, which includes all matrices of this kind V together
with their inverse matrices V-1 and together with all products of matrices of this kind. This set
of matrices has properties of multi-dimensional numeric system as it is described below.
What one can say about algebraic properties of matrices of such type V (Figure 41)?
Matrices of this type can be added and subtracted. The matrix V has its inverse matrix V-1
(Figure 42), which is defined on the basis of the condition V*V-1=V-1*V=E4, where E4 is
identity matrix [1 0 0 0; 0 1 0 0; 0 0 1 0; 0 0 0 1]. Product of two different matrices of this
type (for example G and S on Figure 42) generates a new (4*4)-matrix W=G*S (Figure 42),
where both (2*2)-quadrants (marked by yellow color) along the main diagonal are identical
each other, and two other (2*2)-quadrants (marked by green color) differ each from other
only by inversion of sign in their entries. This matrix can be written in a form W = [1 0; 0
1]UQ + [0 1; -1 0]UK, where Q=[ a*k-c*k-b*n-d*n, a*m+c*m+b*p-d*p; b*n-c*k-a*kd*n, c*m-a*m-b*p-d*p] and K=[c*n-a*n-d*k-b*k, a*p-b*m+d*m+c*p; b*k+a*n-d*k+c*n,

b*m-a*p+d*m+c*p]; U is a symbol of tensor multiplication; [1 0; 0 1] – a matrix
representation of real unit; [0 1; -1 0] – a matrix representation of imaginary unit; a, b, c, d, k,
m, n and p are real numbers. Such form of denotation resembles the known matrix
representation of usual complex numbers: z = [1 0; 0 1]*a + [0 1; -1 0]*b, where a and b are
real numbers. But it differs again in the following aspects:
1)
the expression W = [1 0; 0 1]UQ + [0 1; -1 0]UK includes tensor
multiplication U instead of usual multiplication in the matrix representation
of complex numbers;
2)
in the case of W, multipliers of the basic elements are square matrices Q
and K instead of real numbers «a» and «b» in the case of complex numbers.
3)
The order of the factors inside W is essential since tensor multiplication is
not commutative.
Taking into account a significant role of tensor multiplication U in W, the author names
algebraic constructions in a form W as “tensorcomplex numbers” because such matrices W
have the following algebraic properties in relation to usual operations of addition,
subtraction, multiplication and division:
•

•

Addition and subtraction of two different matrices of this type W create a new matrix
of the same type. Multiplication of different matrices of this type with each other is
noncommutative and it gives a new matrix of the same type (Figure 42).
Each non-zero matrix W=G*S has an inverse matrix W-1 = G-1*S-1 (expressions for
G-1 and S-1 were shown on Figure 41). It allows a definition of operation of division
of two matrices of this type as a multiplication with an inverse matrix.

Such properties of tensorcomplex numbers resemble algebraic properties of quaternions
by
Hamilton,
which
represent
noncommutative
division
algebra
(http://en.wikipedia.org/wiki/Quaternion). Here one should emphasize that tensorcomplex
numbers cardinally differ from hypercomplex numbers x0+x1*i1+…+xn*in, where x0, x1,…,
xn are real numbers, because, in the case of tensorcomplex numbers, multipliers of the basic
elements are square matrices but not real numbers. By this reason, the famous Frobenius
theorem
(http://en.wikipedia.org/wiki/Frobenius_theorem_(real_division_algebras))
for
hypercomplex numbers is not related to tensorcomplex numbers. This theorem says that any
finite-dimensional associative division algebra is isomorphic to one of the following algebras:
the real numbers, the complex numbers, the quaternions by Hamilton.
a
G= -a
b
-b

c
c
-d
-d

-b
b
a
-a

d
d ; S=
c
c

k
-k
n
-n

m
m
-p
-p

-n
n
k
-k

p
p
m
m

	  
a*k-c*k-b*n-d*n
G*S= b*n-c*k-a*k-d*n
b*k+a*n+d*k-c*n
d*k-a*n-b*k-c*n

a*m+c*m+b*p-d*p
c*m-a*m-b*p-d*p
b*m-a*p-d*m-c*p
a*p-b*m-d*m-c*p

c*n-a*n-d*k-b*k
b*k+a*n-d*k +c*n
a*k-c*k-b*n-d*n
b*n-c*k-a*k-d*n

a*p-b*m+d*m+c*p
b*m-a*p+d*m+c*p
a*m+c*m+b*p-d*p
c*m-a*m-b*p-d*p

Figure 42. Multiplication of two matrices G and S gives a new matrix W = G*S, which
belong to so called «tensorcomplex numbers». Here a, b, c, d, k, m, n and p are real numbers.

This set of tensorcomplex numbers is one of examples of numeric systems, where real
numbers exist only inside matrices in a form of whole ensembles but not as individual
multipliers (or as individual personages) inside such numeric systems. It is one of differences
of tensorcomplex numbers from hypercomplex systems. One can mention that the
commutator CL*CR-­‐CR*CL	  (Figure	  40)	  belongs	  to	  tensorcomplex	  numbers.
Till now in this Section we considered the case of tensorcomplex numbers, which
were represented by means of the expression W = [1 0; 0 1]UQ + [0 1; -1 0]UK, where Q
and K are (2*2)-matrices. But our work [Petoukhov, 2012b,….] describes that complex
numbers can be also represented by means of sparse (2N*2N)-matrices on the basis of sums of
projectors (here N = 2, 3, 4, …). One can take sum of two complex numbers, which belong to
different planes of the same 2N-dimensional space and which are represented by means of
appropriate (2N*2N)-matrices. In this case new types of tensorcomplex numbers arise. Theory
and expressions for such tensorcomplex numbers in spaces of higher dimensions are
developed now for a publication in the nearest future.
The author hopes that tensorcomplex numbers, which seem to be a new type of
multidimensional numbers for mathematical natural sciences, will be useful not only in
bioinformatics, but also in physics, theory of communication, logic and other fields.
14 ABOUT «TENSORHYPERBOLIC» NUMBERS
Now let us return to the Rademacher (4*4)-matrix R4, which is a sum of 4 column
projectors c0, c1, c2, c3: R4 = c0+c1+c2+c3 (Figures 1 and 2). Our work [Petoukhov, 2012b,
Figures 11-13] shows that sum c0+c2 is decomposed into basic matrices e0 = [1 0 0 0; -1 0 0
0; 0 0 1 0; 0 0 -1 0] and e2 = [0 0 1 0; 0 0 -1 0; 1 0 0 0; -1 0 0 0], the set of which is closed
relative to multiplication and defines the multiplication table of hyperbolic numbers; their
known synonyms are “split-complex numbers”, “double numbers” or “Lorentz numbers”
(http://en.wikipedia.org/wiki/Split-complex_number). In this paper we will prefer using the
name «hyperbolic numbers» for such type of 2-dimensional numbers. Another sum c1+c3 is
decomposed into basic matrices e1 = [0 1 0 0; 0 1 0 0; 0 0 0 1; 0 0 0 1] and e3 = [0 0 0 -1; 0 0
0 -1; 0 -1 0 0; 0 -1 0 0]. Now one can consider linear compositions DL and DR on basis of
these basic matrices (Figure 43). The work [Petoukhov, 2012b, Figures 12, 13] shows that
each of DL and DR is a (4*4)-matrix representation of 2-parametric hyperbolic numbers over
field of real numbers but these representations concern different 2-dimensional planes (x0, x2)
and (x1, x3) of a 4-dimensional vector space.
	  
a0	   0	  
	  
-­‐a0	   0	  
DL=a0*e0+a2*e2=	   a2	   0	  
-­‐a2	   0	  

a2	  
-­‐a2	  
a0	  
-­‐a0	  

0	   	  
0	   	  
0	   ;	  	  	  	  	  DR=a1*e1+a3*e3=	  
0	  

	  0	  
	  0	  
0	  
0	  

a1	  
a1	  
-­‐a3	  
-­‐a3	  

0	  
0	  
0	  
0	  

-­‐a3	  
-­‐a3	  
a1	  
a1	  

Figure 43. Left side: DL is a (4*4)-matrix representation of hyperbolic (or split-complex)
numbers z = a0 + a2*j on a 2-dimensional plane (x0, x2) in a 4-dimensional space (x0, x1, x2,
x3); here j is imaginary unit of hyperbolic numbers (j2=1). Right side: DR is a (4*4)-matrix
representation of hyperbolic numbers z = a1 + a3*j on another 2-dimensional plane (x1, x3) in
the same 4-dimensional space (x0, x1, x2, x3). Here a0, a1, a2 and a3 are real numbers.
	  
Now	   let	   us	   take	   a	   sum	   DL+DR	   of	   these	   (4*4)-­‐matrix	   representations	   of	  
hyperbolic	  numbers,	  which	  are	  related	  with	  different	  planes	  of	  the	  4-­‐dimensional	  space	  
(Figure	  44).	  

	  
a0	  
D	  =	  DL	  +	  DR	  =	   -­‐a0	  
a2	  
-­‐a2	  

a1	  
a1	  
-­‐a3	  
-­‐a3	  

a2	  
-­‐a2	  
a0	  
-­‐a0	  

-­‐a3	   	  
-­‐a3	   =	  [1	  0;	  0	  1]UM	  +	  [0	  1;	  1	  0]UK	  
a1	  
a1	  

	  
	  	  a	  	  0	  	  a	  	  0	   	  
-­‐a	  	  0	  	  a	  	  0	   *	  
	  a	  	  0	  	  	  a	  	  0	  
-­‐a	  	  0	  -­‐a	  	  0	  

	  0	  	  	  c	  	  0	  	  -­‐c	   	  
	  0	  	  	  c	  	  0	  	  -­‐c	   =	  
	  0	  -­‐c	  	  0	  	  	  	  c	  
	  0	  -­‐c	  	  0	  	  	  	  c	  

0	  0	  0	  0	  
0	  0	  0	  0	  
0	  0	  0	  0	  	  
0	  0	  0	  0	  	  

	  
	  
	  a0	  	  -­‐a0	  	  -­‐a2	  	  	  a2	   	  
-­‐1
2
2
-­‐1	  
D 	  =	  (2*(a0 	  –	  a2 )) *	   	  	  0	  	  	  	  0	  	  	  	  	  0	  	  	  	  0	   +	  (2*(a12	  –	  a32))-­‐1	  *	  
-­‐a2	  	  	  a2	  	  	  a0	  	  -­‐a0	  
	  	  0	  	  	  	  0	  	  	  	  	  0	  	  	  	  0	  

	  0	  	  	  	  0	  	  	  	  	  0	  	  	  	  	  	  0	  
	  a1	  	  	  a1	  	  	  -­‐a3	  	  	  -­‐a3	  
	  	  0	  	  	  	  0	  	  	  	  	  0	  	  	  	  	  	  0	  
-­‐a3	  	  	  -­‐a3	  	  	  a1	  	  	  	  	  	  a1	  

	  
Figure	  44.	  Upper	  level:	  the	  sum	  D	  =	  DL+DR	  (see	  Figure	  43).	  Here	  M=[a0	  a1;	  -­‐a0	  a1]	  and	  
K=[a2	  -­‐a3;	  -­‐a2	  -­‐a3];	  U	  is	  a	  symbol	  of	  tensor	  multiplication.	  Middle	  level:	  the	  example	  of	  
zero	  divizors	  in	  this	  type	  of	  matrices.	  Bottom	  level:	  the	  inverse	  matix	  D-­‐1.	  
	  
Figure 44 shows that D = DL+DR is a (4*4)-matrix of a special type, where both
quadrants along each of diagonals are identical (they are marked by yellow and blue colors).
This matrix can be written in a form D = [1 0; 0 1]UM + [0 1; 1 0]UK, where M=[a0 a1; -a0
a1] and K=[a2 -a3; -a2 -a3], where [1 0; 0 1] – a matrix representation of real unit; [0 1; 1 0] – a
matrix representation of imaginary unit j of hyperbolic numbers (j2=1); a0, a1, a2 and a3 are
real numbers. Such form of denotation resembles a well-known matrix representation of
usual hyperbolic numbers: y = [1 0; 0 1]*a + [0 1; 1 0]*b, where «a» and «b» are real
numbers. But it differs again in the following aspects:
1)
2)
3)

the expression D = [1 0; 0 1]UM + [0 1; 1 0]UK includes tensor
multiplication U instead of usual multiplication in the matrix representation
of hyperbolic numbers;
in the case of D, multipliers of the basic elements are square matrices M
and K instead of real numbers «a» and «b» in the case of hyperbolic
numbers;
The order of factors inside D is essential since tensor multiplication is not
commutative.

The set of matrix D has zero divisors, examples of which are shown on Figure 44.
Figure 44 also shows a general expression of the inverse matrix D-1 for the matrix D.
Multiplication of two matrices D0 and D1 of this type gives a new matrix L (Figure 45),
where both quadrants along each of diagonals are identical (they are marked by yellow and
blue colors). This matrix can be represented in the following form: L = [1 0; 0 1]UQ +
[0 1; 1 0]UK, where Q = [a*k-c*k+b*n+d*n, a*m+c*m-b*p+d*p; d*n-c*k-b*n-a*k, c*m-a*m
+b*p +d*p], K=[a*n+b*k-c*n+d*k, b*m-a*p-c*p-d*m; d*k-b*k-c*n-a*n, a*p-b*m-c*p-d*m].

Taking into account a significant role of tensor multiplication U in L, the author names
algebraic constructions in a form L (Figure 45) as “tensorhyperbolic numbers” because such
matrices L have the following algebraic properties in relation to usual operations of addition,
subtraction, multiplication and division:

•

•

Addition, subtraction and multiplication of two different matrices of this type create a
new matrix of the same type. Multiplication of different matrices of this type with
each other is noncommutative. The set of matrices L has zero divisors.
Each non-zero matrix L=D0*D1, if it is not a zero divisor, has an inverse matrix L-1 =
D0-1*D1-1 (expressions for D-1 was shown on Figure 44). It allows a definition of
operation of division of two matrices of this type as a multiplication with an inverse
matrix.
	  
	  a	  	  	  	  c	  
D0=	   -­‐a	  	  	  	  c	  
	  
	  b	  	  -­‐d	  
-­‐b	  	  -­‐d	  

L=D0*D1=

a*k-c*k+b*n+d*n,
d*n-c*k-b*n-a*k,
a*n+b*k-c*n+d*k,
d*k-b*k-c*n-a*n,

	  b	  	  -­‐d	   	  
-­‐b	  	  -­‐d	   ;	  	  	  	  	  D1=	  	  
	  a	  	  	  	  c	   	  
-­‐a	  	  	  	  c	  

a*m+c*m-b*p+d*p
c*m-a*m+b*p+d*p
b*m-a*p-c*p-d*m
a*p-b*m-c*p-d*m

	  k	  	  	  m	  
-­‐k	  	  m	  
	  n	  	  -­‐p	  
-­‐n	  	  -­‐p	  

	  n	  	  	  -­‐p	  
-­‐n	  	  	  -­‐p	  
	  k	  	  	  	  m	  	  	  
-­‐k	  	  	  m	  

a*n+b*k-c*n+d*k,
d*k-b*k-c*n-a*n,
a*k-c*k+b*n+d*n,
d*n-c*k-b*n-a*k,

b*m-a*p-c*p-d*m
a*p-b*m-c*p-d*m
a*m+c*m-b*p+d*p
c*m-a*m+b*p+d*p

Figure 45. Multiplication of two matrices D0 and D1 (of the type D from Figure 44) gives
a new matrix L = D0*D1, which belongs to so called «tensorhyperbolic numbers». Here a, b,
c, d, k, m, n and p are real numbers.
This Section has described the case of tensorhyperbolic numbers in the form of (4*4)matrices for 4-dimensional spaces. But tensorhyperbolic numbers and their generalization can
be expressed in forms of (2N*2N)-matrices for 2N-dimensional spaces. These materials will be
published later together with data about «tensordual» numbers, «tensorquaternions», etc.
Different types of such multidimensional numbers can be combined under a brief
name «tensornumbers». Tensornumbers [1]UM0+[i1]UM1+…+[in]UMn (here Mn are square
matrices) are a generalization of hypercomplex numbers in the case when the following
changes are made in the usual denotation of hypercomplex numbers 1*x0+i1*x1+…+in*xn:
•
•

Real multipliers x0, x1, …, xn are replaced by square matrices M0, M1,…, Mn;
Usual multiplication is replaced by tensor multiplication.

It is obvious that hypercomplex numbers 1*x0+i1*x1+…+in*xn are a degenerate case of
tensornumbers when their matrices Mn have the first order: 1) (1x1)-matrices Mn = [xn] are
real numbers xn; 2) tensor multiplication [in]U[xn] of (1x1)-matrix [xn] with the matrix
representation [in] of any of the basic elements is commutative and it coincides with usual
multiplication.
By
these
reasons
the
following
equation
is
true:
[1]U[x0]+[i1]U[x1]+…+[in]U[xn] = [1]*x0+[i1]*x1+…+[in]*xn.
What one can say at this initial stage about a future of tensornumbers in mathematical
natural sciences and technologies? Two extreme points of view are possible here:
1) tensorcomplex numbers will have no applications; 2) tensorcomplex numbers will have a
great significance for mathematical natural sciences including a creation of new theories of
physical fields and their generalization, new laws of conservation, generalization of many
physical and other rules and knowledge, new approaches in engineering and biological
informatics, mathematical logics, etc. The author believes that the second point of view will
coincide with a real future in a higher extent.

SOME CONCLUDING REMARKS
As it was noted in the beginning of the article, living organism is a machine for
coding and processing of information. For example, visual information about external objects
is transmitted through the nerves from the eye retina to the brain already in a logarithmically
encoded form. This article shows some evidences that oblique projection operators and their
combinations, which are connected with matrix representations of the genetic coding system,
can be a basis of adequate approaches to simulate ensembles of inherited biological
phenomena. Only some of such phenomena were considered in this article. Some other
phenomena will be described from the proposed point of view later. In addition, the author
reminds about fractal genetic nets (FGN), which can be represented as a construction on a
base of orthogonal projectors and which lead to new genetic rules in structures of long
nucleotide sequences [Petoukhov, 2012; Petoukhov, Svirin, 2012].
The revealed genetic system of operators connected with oblique projectors allows
modeling multi-dimensional phase spaces with many subspaces, processes in which can be
selectively determined and controled. Speaking about importance of projectors in the nature,
the following points should be noted (it seems that the nature «likes» projectors):
•

•
•

•
•
•
•

Most people are familiar with the idea of projectors due to sun rays (and light rays in
general) that are distributed in a straight line and provide shade from the subjects
(from the ancient time sundials were constructed on the use of this). Light rays have
the projection property;
Electromagnetic vectors are the sum of their projections in the form of their electric
and magnetic vectors;
Evolution of living organisms is associated with the consumption of solar energy that
is projected by means of sun rays to surfaces of living bodies (photosynthesis, which
is for living matter one of its basic mechanisms, is the conversion of sunlight energy
into biochemical energy for activity of organisms; circadian biorhythms are connected
with external light cycles "day-night");
Projection phenomena of birefringence in biological tissues and crystals exist;
A great variety of living organisms has polarization eyesight;
Our vision is based on the projection of images on the retina;
Religious people may ask whether there is any indication in the Bible on this subject?
Especially for them, it may be recalled the following. According to the Bible, God's
creation of the world began with the creation of the light: "Let there be light." Many
thinkers suggested previously for various reasons that, figuratively speaking, the body
is woven from the light. This has some associations with our hypothesis that the body
is woven from the projectors.

Now projectors and their combinations become interesting instruments to study and
simulate genetic phenomena and inherited structures and processes in living matter. A new
conceptual notion with appropriate mathematical formalisms are proposed about a multidimensional control space (or coding space) with subspaces of a selective control in each on
basis of a participation of projection operators in such control. Here one can remember the
statement: “Profound study of nature is the most fertile source of mathematical discoveries”
(Fourier, 2006, Chapter 1, p. 7).
Using this ideology of projection operators, one can get many unexpected results and
approaches. In author's opinion, one of many promising applications of projectors in

mathematical biology and bioinformatics is the study of connections between genetic
projectors and Boolean algebra. It is known that every family of commutative projectors
generates a Boolean algebra of projectors. The Boolean algebra plays a great role in the
modern science because of its connections with many scientific branches: mathematical
logic, the problem of artificial intelligence, computer technologies, bases of theory of
probability, etc. G.Boole was creating such algebra of logics (or logical operators), which
would reflect inherited laws of human thought. One should note here that some of genetic
projectors (which are not described in this article) form commutative pairs; this fact provokes
thoughts about Boolean algebras in genetics and bioinformatics and also about genetic basis
of logics of human thought.
Genetic molecules are subordinated to laws of quantum mechanics, which has begun
from matrix mechanics by W. Heisenberg. Till this pioneer work by Heisenberg, matrices
were not used in physics where specialists operated only with numbers to study physical
systems. It was very unexpected for scientific community that applying whole ensembles of
numbers in a form of matrices can be useful and appropriate to describe natural phenomena
and systems. that matrices were not used in physics till a creation of the matrix mechanics by
W. Heisenberg (modern quantum mechanics was begun. Previously physicists operated with
numbers in physical tasks. It was very unexpected that using whole ensembles of numbers in
a form of matrices can be useful and appropriate to describe natural phenomena and systems.
Contemporary science uses matrices widely in many fields, and our work uses matrices to
study molecular-genetic systems.
Materials of this article reinforce the author’s point of view that living matter in its
informational fundamentals is an algebraic essence. The author believes that a development
of algebraic biology, elements of which are contained in this and other author’s articles, is
possible. By analogy with the known fact that molecular foundations of molecular genetics
turned up unexpectedly very simple, perhaps algebraic foundations of living matter are also
relative simple. In the infinite set of matrices, we find a small subset, which simulates the
world of molecular genetic coding with many of its phenomenologic features; this discovery
was possible due to studying the family of alphabets in the molecular-genetic system.
Concerning	  the	  new	  theme	  of	  tensornumbers,	  which	  were	  revealed	  in	  our	  study	  
of	  genetic	  projectors,	  one	  can	  remind	  that	  the	  idea	  of	  multi-­‐dimensional	  numbers	  and	  
multi-­‐dimensional	   spaces	   works	   intensively	   for	   a	   long	   time	   in	   the	   theoretical	   physics	  
and	   other	   fields	   of	   science	   for	   modeling	   the	   phenomena	   of	   our	   physical	   world.	   Our	  
results	   add	   mathematical	   formalisms,	   first	   of	   all,	   into	   the	   fields	   of	   molecular	   genetics	  
and	   bioinformatics.	   After	   the	   discovery	   of	   non-­‐Euclidean	   geometries	   and	   of	   Hamilton	  
quaternions,	   it	   is	   known	   that	   different	   natural	   systems	   can	   possess	   their	   own	   geometry	  
and	  their	  own	  algebra	  (see	  about	  this	  [Kline,	  1980]).	  The	  genetic	  code	  is	  connected	  with	  
its	  own	  multi-­‐dimensional	  numerical	  systems	  or	  the	  multi-­‐dimensional	  algebras.	  These	  
algebras	  allow	  revealing	  hidden	  peculiarities	  of	  the	  structure	  of	  the	  genetic	  code	  and	  its	  
evolution.	   It	   seems	   that	   many	   difficulties	   of	   modern	   bioinformatics	   and	   mathematical	  
biology	   are	   connected	   with	   utilizing	   for	   their	   natural	   structures	   inadequate	   algebras,	  
which	   were	   developed	   for	   completely	   other	   natural	   systems.	   Hamilton	   had	   similar	  
difficulties	   in	   his	   attempts	   to	   describe	   3D-­‐space	   transformations	   by	   means	   of	   3-­‐
dimensional	  numbers	  while	  this	  description	  needs	  quaternions.	  The	  author	  hopes	  that	  
proposed	   tensornumbers	   will	   help	   to	   make	   progress	   not	   only	   in	   bioinformatics	   and	  
mathematical	  biology,	  where	  algebraization	  of	  biology	  seems	  to	  be	  possible,	  but	  also	  in	  
many	  fields	  of	  sciences	  and	  technologies.	  

“Complexity of a civilization is reflected in complexity of numbers used by this
civilization” [Davis, 1967]. Whether modern civilization will use tensornumbers or not? It is
the open question. Pythagoras has formulated the idea: “all things in the world are numbers”
or “number rules the world”. B. Russell noted that that he did not know other person who
would exert such influence on thinking of people as Pythagoras. From this viewpoint, there is
no more fundamental scientific idea in the world, than this idea about a basic meaning of
numbers. Our researches of oblique projectors in the field of matrix genetics have led to new
systems of multidimensional numbers and have given new materials to the great idea by
Pythagoras in its modernized formulating: “All things are multi-dimensional numbers”.
This article proposes a new mathematical approach to study “a partnership between
genes and mathematics” (see Section 1 above). In the author’s opinion, this kind of
mathematics is beautiful and it can be used for further developing of algebraic biology and
theoretical physics in accordance with the famous statement by P. Dirac, who taught that a
creation of a physical theory must begin with the beautiful mathematical theory: “If this
theory is really beautiful, then it necessarily will appear as a fine model of important
physical phenomena. It is necessary to search for these phenomena to develop applications of
the beautiful mathematical theory and to interpret them as predictions of new laws of
physics” (this quotation is taken from [Arnold, 2007]). According to Dirac, all new physics,
including relativistic and quantum, are developing in this way. One can suppose that this
statement is also true for mathematical biology.
	  
	  
APPENDIX 1. COMPLEX NUMBERS, CYCLIC GROUPS AND SUMS OF
GENETIC PROJECTORS
This Appendix shows a connection between complex numbers and cyclic groups on
the base of sums of (8*8)-projectors s0+s2, s0+s3, s1+s2, s1+s3, s4+s6, s4+s7, s5+s6, s5+s7 from
Fig. 7 on the base of the Rademacher (8*8)-matrix R8 (on Fig. 9 these sums were marked by
green color and they corresponded to cyclic groups, if the weight coefficient 2-0.5 was used
for them). Each of these 8 sums can be decomposed into two matrices e2k and e2k+1 (k=0, 1,
…7), a set of whose is closed relative to multiplication and has a multiplication table, which
coincides with the multiplication table of basic elements of complex numbers (Fig. 46). It
means that these matrices e2k and e2k+1 represent basic elements of complex numbers in
corresponding 2-dimensional planes of a 8-dimensional vector space. Sets of matrices a2k*e2k
+ a2k+1*e2k+1 (here a2k and a2k+1 are real numbers; each of matrices e2k plays a role of unitary
matrix inside the appropriate set a2k*e2k + a2k+1*e2k+1) represent complex numbers inside
these 2-dimensional planes of the 8-dimensional space.

s0+s2 =

10100000
10100000
-1 0 1 0 0 0 0 0
-1 0 1 0 0 0 0 0
1 0-1 0 0 0 0 0
1 0-1 0 0 0 0 0
-1 0-1 0 0 0 0 0
-1 0-1 0 0 0 0 0

=e0+e1=

10 000000
10 000000
00 100000
00 100000
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0

00100000
00100000
-1 0 0 0 0 0 0 0
+ -1 0 0 0 0 0 0 0 ;
10000000
10000000
0 0-1 0 0 0 0 0
0 0-1 0 0 0 0 0

e0 e1
e0 e0 e1
e1 e1 -e0

s0+s3 =

s1+s2 =

s1+s3 =

s4+s6 =

s4+s7 =

100 10000
100 10000
-1 0 0 1 0 0 0 0
-1 0 0 1 0 0 0 0
1 0 0 -1 0 0 0 0
1 0 0 -1 0 0 0 0
-1 0 0 -1 0 0 0 0
-1 0 0 -1 0 0 0 0
0 1 100000
0 1 100000
0 -1 1 0 0 0 0 0
0 -1 1 0 0 0 0 0
0 1 -1 0 0 0 0 0
0 1 -1 0 0 0 0 0
0 -1 -1 0 0 0 0 0
0 -1 -1 0 0 0 0 0
01010000
01010000
0-1 0 1 0 0 0 0
0-1 0 1 0 0 0 0
0 1 0-1 0 0 0 0
0 1 0-1 0 0 0 0
0-1 0-1 0 0 0 0
0-1 0-1 0 0 0 0
0 0 0 0 1 0-1 0
0 0 0 0 1 0-1 0
0 0 0 0-1 0-1 0
0 0 0 0-1 0-1 0
00001010
00001010
0 0 0 0-1 0 1 0
0 0 0 0-1 0 1 0

=e2+e3=

=e4+e5=

=e6+e7=

=e8+e9=

100 00000
100 00000
000 10000
000 10000
0 0 0 -1 0 0 0 0
0 0 0 -1 0 0 0 0
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0
01 000000
01 000000
00 100000
00 100000
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
0 -1 0 0 0 0 0 0
0 -1 0 0 0 0 0 0

00010000
00010000
-1 0 0 0 0 0 0 0
+ -1 0 0 0 0 0 0 0 ;
10000000
10000000
0 0 0-1 0 0 0 0
0 0 0-1 0 0 0 0

+

00100000
00100000
0 -1 0 0 0 0 0 0
0 -1 0 0 0 0 0 0 ;
0 1000000
0 1000000
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0

01000000
01000000
00010000
00010000 +
0 0 0-1 0 0 0 0
0 0 0-1 0 0 0 0
0-1 0 0 0 0 0 0
0-1 0 0 0 0 0 0

00010000
00010000
0-1 0 0 0 0 0 0
0-1 0 0 0 0 0 0 ;
01000000
01000000
0 0 0-1 0 0 0 0
0 0 0-1 0 0 0 0

0 0 0 0 0 0-1 0
0 0 0 0 0 0-1 0
0 0 0 0-1 0 0 0
0 0 0 0-1 0 0 0 +
00001000
00001000
00000010
00000010

00001000
00001000
0 0 0 0 0 0-1 0
0 0 0 0 0 0-1 0 ;
00000010
00000010
0 0 0 0-1 0 0 0
0 0 0 0-1 0 0 0

0 0 0 0 1 0 0-1
0 0 0 0 0 0 0-1
0 0 0 0 1 0 0-1
0 0 0 0 0 0 0-1
0 0 0 0-1 0 0-1
0 0 0 0-1 0 0 0
0 0 0 0-1 0 0-1 =e10+e11= 0 0 0 0-1 0 0 0
00001001
00001000
00001001
00001000
0 0 0 0-1 0 0 1
00000001
0 0 0 0-1 0 0 1
00000001

0000100 0
0000100 0
0 0 0 0 0 0 0 -1
+ 0 0 0 0 0 0 0 -1 ;
0000000 1
0000000 1
0 0 0 0-1 0 0 0
0 0 0 0-1 0 0 0

e2 e3
e2 e2 e3
e3 e3 -e2

e4 e5
e4 e4 e5
e5 e5 -e4

e6 e7
e6 e6 e7
e7 e7 -e6

e8 e9
e8 e8 e9
e9 e9 -e8

e10 e11
e10 e10 e11
e11 e11

e10

s5+s6 =

s5+s7 =

0 0 0 0 0 1 -1 0
0 0 0 0 0 1 -1 0
0 0 0 0 0 -1 -1 0
0 0 0 0 0 -1 -1 0
00000 1 10
00000 1 10
0 0 0 0 0 -1 1 0
0 0 0 0 0 -1 1 0

0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
0 0 0 0 0 -1 0 0
=e12+e13= 0 0 0 0 0 -1 0 0
00000 100
00000 100
00000 010
00000 010

000001 00
000001 00
0 0 0 0 0 0 -1 0
+ 0 0 0 0 0 0 -1 0
000000 10
000000 10
0 0 0 0 0 -1 0 0
0 0 0 0 0 -1 0 0

0 0 0 0 0 1 0 -1
0 0 0 0 0 1 0 -1
0 0 0 0 0 -1 0 -1
0 0 0 0 0 -1 0 -1
00000 10 1
00000 10 1
0 0 0 0 0 -1 0 1
0 0 0 0 0 -1 0 1

0 0 0 0 0 0 0 -1
0 0 0 0 0 0 0 -1
0 0 0 0 0 -1 0 0
=e14+e15= 0 0 0 0 0 -1 0 0
00000 100
00000 100
00000 001
00000 001

00000 10 0
00000 10 0
0 0 0 0 0 0 0 -1
+ 0 0 0 0 0 0 0 -1 ;
00000 00 1
00000 00 1
0 0 0 0 0 -1 0 0
0 0 0 0 0 -1 0 0

e12 e13
;

e12 e12 e13
e13 e13

e12

e14 e15
e14 e14 e15
e15 e15

e14

Fig. 46. The decomposition of each of (8*8)-matrices s0+s2, s0+s3, s1+s2, s1+s3, s4+s6,
s4+s7, s5+s6, s5+s7 from Fig. 7 into a set of two matrices e2k and e2k+1 (k=0, 1, …7), a set of
whose is closed relative to multiplication and gives the multiplication table of complex
numbers (on the right)
In a general case, the described approach allows constructing selective operators of a
2n-dimensional vector space with a set of different 2-dimensional planes, each of which can
contain a function of complex numbers (parameters of these functions in different planes can
be independent or interrelated). Such selective operator allows simulating a combinatory
behaviour of a multi-parametric system, which contains different 2-parametric subsystems,
whose independent or interrelated behaviours can be simulated by means of functions of
complex numbers. If these functions of complex numbers are cyclic, such selective operator
describes a behaviour of a multi-parametric system, which contains an appropriate ensemble
of 2-parametric subsystems with cyclic behaviours.

APPENDIX 2. HYPERBOLIC NUMBERS AND SUMS OF GENETIC
PROJECTORS
Let us show now a connection between hyperbolic numbers and sums of (8*8)projectors s0+s1, s0+s4, s0+s5, s1+s4, s1+s5, s2+s3, s2+s6, s2+s7, s3+s6, s3+s7, s4+s5, s6+s7 from
Fig. 7 on the base of the Rademacher (8*8)-matrix R8 (on Fig. 9 these sums were marked by
red color). Each of these 12 sums can be decomposed into two matrices j2k and j2k+1 (k=0, 1,
2, …, 11), a set of whose is closed relative to multiplication and has a multiplication table,
which coincides with the multiplication table of basic elements of hyperbolic numbers (Fig.
47). It means that these matrices j2k and j2k+1 represent basic elements of hyperbolic numbers
in corresponding 2-dimensional planes of a 8-dimensional vector space. Sets of matrices
a2k*j2k + a2k+1*j2k+1 (here a2k and a2k+1 are real numbers; each of matrices j2k plays a role of
unitary matrix inside the appropriate set a2k*j2k + a2k+1*j2k+1) represent hyperbolic numbers
inside these 2-dimensional planes of the 8-dimensional space.

	  

s0+s1 =

s0+s4 =

s0+s5 =

s1+s4 =

s1+s5 =

1 1000000
1 1000000
-1 -1 0 0 0 0 0 0
-1 -1 0 0 0 0 0 0 = j0+j1=
1 1000000
1 1000000
-1 -1 0 0 0 0 0 0
-1 -1 0 0 0 0 0 0

1 0000000
0 1000000
-1 0 0 0 0 0 0 0
0 -1 0 0 0 0 0 0
1 0000000
0 1000000
-1 0 0 0 0 0 0 0
0 -1 0 0 0 0 0 0

0 1000000
1 0000000
0 -1 0 0 0 0 0 0
+ -1 0 0 0 0 0 0 0
0 1000000
1 0000000
0 -1 0 0 0 0 0 0
-1 0 0 0 0 0 0 0

1000 1000
1000 1000
-1 0 0 0 -1 0 0 0
-1 0 0 0 -1 0 0 0
1000 1000
1000 1000
-1 0 0 0 -1 0 0 0
-1 0 0 0 -1 0 0 0

1000 0000
1000 0000
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0
0000 1000
0000 1000
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0

0000 1000
0000 1000
-1 0 0 0 0 0 0 0
+ -1 0 0 0 0 0 0 0
1000 0000
1000 0000
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0

10000 100
10000 100
-1 0 0 0 0 -1 0 0
-1 0 0 0 0 -1 0 0
10000 100
10000 100
-1 0 0 0 0 -1 0 0
-1 0 0 0 0 -1 0 0
0 100 1000
0 100 1000
0 -1 0 0 -1 0 0 0
0 -1 0 0 -1 0 0 0
0 100 1000
0 100 1000
0 -1 0 0 -1 0 0 0
0 -1 0 0 -1 0 0 0
0 1000 100
0 1000 100
0 -1 0 0 0 -1 0 0
0 -1 0 0 0 -1 0 0
0 1000 100
0 1000 100
0 -1 0 0 0 -1 0 0
0 -1 0 0 0 -1 0 0

= j2+j3=

=j4+j5=

= j6+j7=

= j8+j9=

;

;

10000000
10000000
0 0 0 0 0-1 0 0
0 0 0 0 0-1 0 0 +
00000100
00000100
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0

00000 100
00000 100
-1 0 0 0 0 0 0 0
-1 0 0 0 0 0 0 0
10000 000
10000 000
0 0 0 0 0 -1 0 0
0 0 0 0 0 -1 0 0

0 1000000
0 1000000
0 0 0 0-1 0 0 0
0 0 0 0-1 0 0 0
0 0001000
0 0001000
0 -1 0 0 0 0 0 0
0 -1 0 0 0 0 0 0

0 000 1000
0 000 1000
0 -1 0 0 0 0 0 0
0 -1 0 0 0 0 0 0 ;
0 100 0000
0 100 0000
0 0 0 0 -1 0 0 0
0 0 0 0 -1 0 0 0

01000 000
01000 000
0 0 0 0 0 -1 0 0
0 0 0 0 0 -1 0 0
00000 100
00000 100
0-1 0 0 0 0 0 0
0-1 0 0 0 0 0 0

+

+

;

0 0000 100
0 0000 100
0 -1 0 0 0 0 0 0
0 -1 0 0 0 0 0 0 ;
0 1000 000
0 1000 000
0 0 0 0 0 -1 0 0
0 0 0 0 0 -1 0 0

j0

j1

j0

j0

j1

j1

j1

j0

j2

j3

j2

j2

j3

j3

j3

j2

j4

j5

j4

j4

j5

j5

j5

j4

j6

j7

j6

j6

j7

j7

j7

j6

j8

j9

j8

j8

j9

j9

j9

j8

s2+s3=

s2+s6 =

s2+s7 =

s3+s6 =

s3+s7 =

00 110000
00 110000
00 110000
00 110000
0 0 -1-1 0 0 0 0
0 0 -1-1 0 0 0 0
0 0 -1-1 0 0 0 0
0 0 -1-1 0 0 0 0
0 0 1 0 0 0 -1 0
0 0 1 0 0 0 -1 0
0 0 1 0 0 0 -1 0
0 0 1 0 0 0 -1 0
0 0 -1 0 0 0 1 0
0 0 -1 0 0 0 1 0
0 0 -1 0 0 0 1 0
0 0 -1 0 0 0 1 0

= j10+j11=

=j12+j13=

00 1 00000
00 0 10000
00 1 00000
00 0 10000
0 0 -1 0 0 0 0 0
0 0 0 -1 0 0 0 0
0 0 -1 0 0 0 0 0
0 0 0 -1 0 0 0 0

00 0 10000
00 1 00000
00 0 10000
+ 00 1 00000
0 0 0 -1 0 0 0 0
0 0 -1 0 0 0 0 0
0 0 0 -1 0 0 0 0
0 0 -1 0 0 0 0 0

00 1000 00
00 1000 00
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
00 0000 10
00 0000 10
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0

0 0 0 0 0 0-1 0
0 0 0 0 0 0-1 0
00100000
00100000
0 0-1 0 0 0 0 0
0 0-1 0 0 0 0 0
00000010
00000010

0 0 1 0 0 0 0 -1
0 0 1 0 0 0 0 -1
0 0 1 0 0 0 0 -1
0 0 1 0 0 0 0 -1
0 0 -1 0 0 0 0 1
0 0 -1 0 0 0 0 1
0 0 -1 0 0 0 0 1
0 0 -1 0 0 0 0 1

00 10000 0
00 10000 0
0 0 0 0 0 0 0 -1
=j14+j15= 0 0 0 0 0 0 0 -1
00 00000 1
00 00000 1
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0

0 0 0 1 0 0 -1 0
0 0 0 1 0 0 -1 0
0 0 0 1 0 0 -1 0
0 0 0 1 0 0 -1 0
0 0 0 -1 0 0 1 0
0 0 0 -1 0 0 1 0
0 0 0 -1 0 0 1 0
0 0 0 -1 0 0 1 0

000 100 00
000 100 00
0 0 0 0 0 0 -1 0
=j16+j17= 0 0 0 0 0 0 -1 0
000 000 10
000 000 10
0 0 0 -1 0 0 0 0
0 0 0 -1 0 0 0 0

0 0 0 1 0 0 0 -1
0 0 0 1 0 0 0 -1
0 0 0 1 0 0 0 -1
0 0 0 1 0 0 0 -1
0 0 0 -1 0 0 0 1
0 0 0 -1 0 0 0 1
0 0 0 -1 0 0 0 1
0 0 0 -1 0 0 0 1

000 1000 0
000 1000 0
0 0 0 0 0 0 0 -1
=j18+j19= 0 0 0 0 0 0 0 -1
000 0000 1
000 0000 1
0 0 0 -1 0 0 0 0
0 0 0 -1 0 0 0 0

+

0 0 0 0 0 0 0 -1
0 0 0 0 0 0 0 -1
00 10000 0
+ 00 10000 0
0 0 -1 0 0 0 0 0
0 0 -1 0 0 0 0 0
00 00000 1
00 00000 1

+

+

j10 j11
;

j11 j11 j10

j12 j13
;

j12 j12 j13
j13 j13 j12

j14 j15
;

j14 j14 j15
j15 j15 j14

0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
000 100 00
000 100 00 ;
0 0 0 -1 0 0 0 0
0 0 0 -1 0 0 0 0
000 000 10
000 000 10

0 0 0 0 0 0 0 -1
0 0 0 0 0 0 0 -1
0001000 0
0001000 0
0 0 0-1 0 0 0 0
0 0 0-1 0 0 0 0
0000000 1
0000000 1

j10 j10 j11

j16 j17
j16 j16 j17
j17 j17 j16

j18 j19
;

j18 j18 j19
j19 j19 j18

s4+s5 =

s6+s7 =

0000 1 1 00
0000 1 1 00
0 0 0 0 -1 -1 0 0
0 0 0 0 -1 -1 0 0
0000 1 1 00
0000 1 1 00
0 0 0 0 -1 -1 0 0
0 0 0 0 -1 -1 0 0

=j20+j21=

0 0 0 0 0 0 -1 -1
0 0 0 0 0 0 -1 -1
0 0 0 0 0 0 -1 -1
0 0 0 0 0 0 -1 -1 =j22+j23=
000000 1 1
000000 1 1
000000 1 1
000000 1 1

00001000
00000100
0 0 0 0-1 0 0 0
0 0 0 0 0-1 0 0 +
00001000
00000100
0 0 0 0-1 0 0 0
0 0 0 0 0-1 0 0
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 0 -1
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 0 -1
000000 1 0
000000 0 1
000000 1 0
000000 0 1

00000100
00001000
0 0 0 0 0-1 0 0
0 0 0 0-1 0 0 0 ;
00000100
00001000
0 0 0 0 0-1 0 0
0 0 0 0-1 0 0 0

0 0 0 0 0 0 0 -1
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 0 -1
+ 0 0 0 0 0 0 -1 0
000000 0 1
000000 1 0
000000 0 1
000000 1 0

j20 j21
j20 j20 j21
j21 j21 j20

j22 j23
;

j22 j22 j23
j23 j23 j22

Fig. 47. The decomposition of each of (8*8)-matrices s0+s1, s0+s4, s0+s5, s1+s4, s1+s5,
s2+s3, s2+s6, s2+s7, s3+s6, s3+s7, s4+s5, s6+s7 from Fig. 7 into a set of two matrices j2k and j2k+1
(k=0, 1, …, 11), a set of whose is closed relative to multiplication and gives the
multiplication table of hyperbolic numbers (on the right)

APPENDIX 3. ANOTHER TENSOR FAMILY OF GENETIC HADAMARD
MATRICES
Hadamard	   matrices	   are	   well-­‐known	   in	   noise-­‐immunity	   coding,	   quantum	  
mechanics,	   etc.	   Their	   rows	   are	   Walsh	   functions,	   which	   are	   widely	   used	   in	  
radiocommunication	   for	   a	   code	   division	   in	   systems	   with	   many	   channels,	   etc.,	   for	  
example,	  in	  cellular	  standards	  such	  as	  IS-­‐95,	  CDMA2000	  or	  UMTS.	  Walsh	  functions	  and	  
corresponding	   series	   and	   transforms	   find	   various	   applications	   in	   physics	   and	  
engineereing,	   in	   particular,	   in	   digital	   signal	   processing.	   They	   are	   used	   in	   speech	  
recognition,	  in	  medical	  and	  biological	  image	  processing,	  in	  digital	  holography,	  and	  other	  
areas.	  
Above we have described the variant of the relation of the molecular-genetic system
with the special tensor family of Hadamard matrices H4, H8, etc. (Fig. 1 and 38). This variant
uses the phenomenological fact of existence of triplets with strong and weak roots; in other
words this variant is based on a specifity of the degeneracy of the genetic code. This
Appendix shows second variant of a relation of the genetic alphabets with another tensor
family of Hadamard matrices. This new family of genetic Hadamard matrices is based only
on properties of the genetic alphabet A, C, G, T and doesn't depend on the degeneracy of the
genetic code. On the author's opinion, this new variant is more interesting and fundamental
for further using in future genetic researches.
Fig. 48 shows the beginning of this new tensor family of Hadamard matrices P(n) = [1
1; -1 1](n) together with genetic matrices [C T; A G](m) (m=1, 2, 3) of monoplets, duplets and
triplets with their black-and-white mosaics which coincide with mosaics of the Hadamard
matrices.

1
1
1 -1 -1 1
1
1 -1
1 1 -1 -1
1
P2 = 1 1 ; P4 = 1 -1 1 -1 ; P8 = 1
1 1 1 1
1
1
1

-1
1
-1
1
-1
1
-1
1

	   	  
	  
	   	  
	   CC	  
	  
C	   T	   	   CA	  
	  
A	   G	   ;	  	   AC	  
AA	  
	  

CT	  
CG	  
AT	  
AG	  

	  
	  
TC	   TT	   	  
	  
TA	   TG	  
;	  	  
GC	   GT	  
GA	   GG	  

-1
-1
1
1
-1
-1
1
1

1
-1
-1
1
1
-1
-1
1

-1
-1
-1
-1
1
1
1
1

1
-1
1
-1
-1
1
-1
1

1
1
-1
-1
-1
-1
1
1

-1
1
1
-1
1
-1
-1
1

CCC	  
CCA	  
CAC	  
CAA	  
ACC	  

CCT	  
CCG	  
CAT	  
CAG	  
ACT	  

CTC	  
CTA	  
CGC	  
CGA	  
ATC	  

CTT	  
CTG	  
CGT	  
CGG	  
ATT	  

TCC	  
TCA	  
TAC	  
TAA	  
GCC	  

TCT	  
TCG	  
TAT	  
TAG	  
GCT	  

TTC	  
TTA	  
TGC	  
TGA	  
GTC	  

TTT	  
TTG	  
TGT	  
TGG	  
GTT	  

ACA	  

ACG	  

ATA	  

ATG	  

GCA	  

GCG	  

GTA	  

GTG	  

AAC	  

AAT	  

AGC	  

AGT	  

GAC	  

GAT	  

GGC	  

GGT	  

AAA	  

AAG	  

AGA	  

AGG	  

GAA	  

GAG	  

GGA	  

GGG	  

Fig. 48. Upper level: the beginning of the tensor family of Hadamard matrices P(n) =
[1 1; -1 1](n), where P4 = [1 1; -1 1](2) and P8 = [1 1; -1 1](3). Bottom level: genetic matrices
[C T; A G], [C T; A G](2) and [C T; A G](3) of monoplets, duplets and triplets with their
black-and-white mosaics, which coincide with mosaics of the Hadamard matrices P2, P4, P8.
On Fig. 48 the black-and-white matrices P2, P4, P8 are Hadamard matrices because
they satisfy the criterium Hn*HnT=n*E [Ahmed, Rao,1975]. The genetic matriices
[C T; A G], [C T; A G](2) and [C T; A G](3) algorithmically have the same black-and-white
mosaics on the base of fundamental properties of the DNA alphabet (adenine A, cytosine C,
guanine G and thymine T). These properties contrapose the letter T against three other letters
of the DNA-alphabet by the following phenomenological facts:
• the thymine T is a single nitrogenous base in DNA which is replaced in RNA
by another nitrogenous base U (uracil) for unknown reason;
• the thymine T is a single nitrogenous base in DNA without the amino-group
NH2 (Fig. 49), which plays an important role in molecular genetics. For
instance, the amino-group in amino acids provides a function of recognition of
the amino acids by ferments [Chapeville, Haenni, 1974]. A detachment of
amino-groups in nitrogenous bases A and C in RNA under action of nitrous
acid HNO2 determines a property of amino-mutating of these bases, which
was used to divide the set of 64 triplets into eight natural subsets with 8
triplets in each [Wittmann, 1961].

	  
Fig. 49. The complementary pairs of the four nitrogenous bases in DNA. A-T (adenine and
thymine), C-G (cytosine and guanine). Amino-groups NH2 are marked by big circles. Black
circles are atoms of carbon; small white circles are atoms of hydrogen; squares with the letter
N are atoms of nitrogen; triangles with the letter O are atoms of oxygen.
From the point of view of these two facts, the letters A, C, G are identical to each	  
other and the letter T is opposite to them. Correspondingly this binary-oppositional division
inside the DNA-alphabet can be reflected by the symbol “+1” for each of the letters A, C, G
and by the opposite symbol “-1” for the letter T. Concerning the genetic matrices [C T; A
G](n) this approach leads to a simple algorithm for assigning a sign «+1» or «-1» to each of
multiplets (monoplets, duplets, triplets, etc.): each multiplet is considered as a product of the
signs «+1» or «-1» of its letters (A=C=G=1, T=-1). For example, the triplet CTG has the sign
«-1» because 1*(-1)*1=-1; the triplet CTT has the sign «+1» because 1*(-1)*(-1)=+1, etc.
Inside of the genetic matrices [C T; A G](n) on Fig. 48, all multiplets with the symbol «+1»
are denoted by black color and all multiplets with the symbol «-1» are denoted by white
color. In the result we have the connection of the genetic matrices [C T; A G](n) with
Hadamard matrices P(n) = [1 1; -1 1](n) on the base of fundamental molecular-genetic
properties, which can be used in genetic computers of living organisms.
The Hadamard matrices P4 and P8 (Fig. 48) can be correspondingly decomposed into
4 and 8 sparse matrices by analogy with the «column» decompositions of the Hadamard
matrices H4 and H8 on Fig. 10 and 14. Results of such decompositions are shown on Fig. 50
and 51.
1 000
0 -1 0 0
0 0 -1 0
000 1
1 000
0 1 00
0 0 -1 0
0 0 0 -1
P4 = K0+K1+K2+K3 = 1 0 0 0 + 0 -1 0 0 + 0 0 1 0 + 0 0 0 -1
1 000
0 1 00
00 1 0
000 1
Fig. 50. The «column» decomposition of the Hadamard matrix P4 from Fig. 48 into 4
sparse matrices K0, K1, K2 and K3, each of which is a projector.

	  
P8=J0+J1+J2+J3+J4+J5+J6+J7	  	   =

1
1
1
1
1
1
1
1

0000000
0000000
0 000000
0 000000
0000000
0 000000
0 000000
0 000000

+

0
0
0
0
0
0
0
0

-1
1
-1
1
-1
1
-1
1

000000
000000
000000
000000
000000
000000
000000
000000

+

00
00
00
00
00
00
00
00

-1
-1
1
1
-1
-1
1
1

00000
00000
00000
00000
00000
00000
00000
00000

00000
00000
00000
00000
00000
00000
00000
00000

1 0
-1 0
1 0
-1 0
-1 0
1 0
-1 0
1 0

0
0
0
0
0
0
0
0

+

+

000
000
000
000
000
000
000
000

1 0000
-1 0 0 0 0
-1 0 0 0 0
1 0000
1 0000 +
-1 0 0 0 0
-1 0 0 0 0
1 0000

000000 10
000000 10
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
0 0 0 0 0 0 -1 0
000000 10
000000 10

+

0000
0000
0000
0000
0000
0000
0000
0000

-1
-1
-1
-1
1
1
1
1

000
000
000
000
000 +
000
000
000

0000000
0000000
0000000
0000000
0000000
0000000
0000000
0000000

-1
1
1
-1
1
-1
-1
1

Fig.	   51.	   The	   «column»	   decomposition	   of	   the	   Hadamard	   matrix	   P8	   from	   Fig.	   48	  
into	  8	  sparse	  matrices	  J0, J1, J2, J3, J4, J5, J6 and J7, each of which is a projector.	  
Each	   of	   these	   sparse	   matrices	   K0, K1, K2, K3	   and	   J0, J1, .., J7 is a projector. Now
one can analyze properties of sums of pairs of these new projectors in relation to their
exponentiation: (K0+K1)n, (K0+K2)n, …, (K2+K3)n, (J0+J1)n, (J0+J2)n, …, (J6+J7)n. By
analogy with the similar analysis of sums of projectors from the first variant of the Hadamard
matrices H4 and H8 (Fig. 1, 10-14, 16 and 38), we have got results of such analysis shown in
tabular forms on Fig. 52 in the case of the Hadamard matrices P4 and P8.

K0
K1
K2
K3

KO K1 K2 K3
-

J0
J1
J2
J3
J4
J5
J6
J7

J0 J1 J2 J3 J4 J5 J6 J7
-

Fig. 52. Bi-symmetrical tables of features of sums of pairs of projectors K0,	   K1,	   K2,	   K3	   and	   J0,	  
J1,	  ..,	  	  J7	  (shown on Fig. 50 and 51) from the Hadamard matrices P4 and P8 in relation to their
exponentiation: (K0+K1)n,	  (K0+K2)n,	  …,	  (K2+K3)n,	  (J0+J1)n,	  	  (J0+J2)n,	  	  …,	  (J6+J7)n.
By analogy with Fig. 4, 9, 11, 16 and 19, tabular cells with green color on Fig. 52
correspond to those matrices, exponentiations of which generate cyclic groups with a period
8 in the case of using the normalizing factor 2-0.5. For example, (2-0.5*(K0+K1))n =
(2-0.5*(K0+K1))n+8. One can show that the matrices in cells with green color represent

complex numbers with unit coordinates inside appropriate 2-dimensional planes of
4-dimensional or 8-dimensional spaces correspondingly. Tabular cells with yellow color on
Fig. 52 correspond to matrices with the «quadruplet property»: for example, ((K0+K3)2)n =
4n-1*(K0+K3)2 and ((J0+J3)2)n = 4n-1*( J0+J3)2, where n = 1, 2, 3… Similar tabular results can
be also obtained for the case of «row» decompositions of Hadamard matrices P4 and P8.
By analogy with the equation (2) the following equation holds true to receive Hadamard
(2n*2n)-matrices PK (where K=2n, n = 4, 5, 6,…): P4 U [1 -1; 1 1](n-2) = PK.
APPENDIX 4. ABOUT SOME APPLICATIONS IN ROBOTICS
Turning once more to tensornumbers (first of all, to tensorcomplex numbers), which
were described above, one can note their possible application in some tasks of robotics when
movement control of a group of robots is needed. In this case a special class of multiparametric system of a tensornumber organization is under consideration. Control and
encoding in these systems can be organized so that each of the representative set of
subsystems may be selectively controlled and coded independently from other subsystems.
An example of such a multi-parameter system is a group of robots, each of which moves
along a certain trajectory plane in accordance with the program from a matrix operator,
whose components are functions of time; the entire set of these individual operators
incorporated into a single matrix operator, whose multiplication with another matrix operator
of a similar structure generates a new matrix operator, endowed with the same property
independent motion control of each robot in a new regime (This is the problem of collective
motion control of a set of robots, each of which can move quite independently of the others
due to the fact that the management of its movement is carried by its "personal" sub-operator
from a general matrix operator, allowing collective restructuring of all sub-operators by
means of simple multiplication of the general operator with a matrix operator of a similar
structure).
Consider an example of collective management of an 8-parametric system, which
has a tensorcomplex type of its organization and which consists of four 2-parametric
subsystems (four robots), the status of each of which may change over time regardless of the
status of the other three subsystems.	   This management can be carried out using an (8 * 8)matrix M(t), which is an operator of the tensorcomplex type ; all its 8 components a0, a1, ...,
a7 are functions of time t (Figure 53). A state of the whole system inside its configuration
space during time can be characterized by an 8-dimensional vector [x0, x1, x2, ..., x7], which is
determined by the operator M (t).
а0(t)
а0(t)
-а0(t)
М(t) = -а0(t)
а4(t)
а4(t)
-а4(t)
-а4(t)

-a1(t)
a1(t)
a1(t)
-a1(t)
-a5(t)
a5(t)
a5(t)
-a5(t)

a2(t)
a2(t)
a2(t)
a2(t)
-a6(t)
-a6(t)
-a6(t)
-a6(t)

-a3(t)
a3(t)
-a3(t)
a3(t)
a7(t)
-a7(t)
a7(t)
-a7(t)

-а4(t)
-а4(t)
а4(t)
а4(t)
а0(t)
а0(t)
-а0(t)
-а0(t)

a5(t)
-a5(t)
-a5(t)
a5(t)
-a1(t)
a1(t)
a1(t)
-a1(t)

a6(t)
a6(t)
a6(t)
a6(t)
a2(t)
a2(t)
a2(t)
a2(t)

-a7(t)
a7(t)
-a7(t)
a7(t)
-a3(t)
a3(t)
-a3(t)
a3(t)

Fig. 53. The example of (8*8)-matrix as a general operator for movement control of 4
robots in a case when they form an 8-parametric system (explanation in text).

In this example, behavior of each of the four 2-parametric subsystems is graphically
depicted by means of movement of a point inside one of four coordinate planes (x0, x4), (x1,
x5), (x2, x6), (x3, x7) of the configuration space of the system; this behavior can determined
entirely independently from behavior of the other three subsystems.	  To specify the path and
pace of movement of each point along its individual trajectory, which is defined
parametrically, it is only necessary to set the functions an(t) of the operator M (t).
For instance, independent movements of the points in the planes (x0, x4), (x1, x5), (x2,
x6), (x3, x7) occur along known types of curves - "cardoid", "petal clover", "	   5-petal rose" and
"logarithmic spiral " (Figure 54) - in case, when the functions an(t) are the following:
a0(t)=cos(t)*(1+cos(t));	  a4(t)=sin(t)*(1+cos(t));	  
a1(t)=cos(t)+cos(t)*cos(3*t)+cos(t)*sin2(3*t);	  
a5(t)=sin(t)+sin(t)*cos(3*t)+sin(t)*sin2(3*t);	  a2(t)=2*cos(t)*sin(5/3*t);	  
a6(t)=sin(t)*sin(5/3*t);	  a3(t)=cos(t)*(13/12)t;	  a7(t)=sin(t)*(13/12)t.	  
In the plane (x0, x4), motion occurs along
a cardoid:

In the plane (x1, x5), motion occurs along
a "petal clover":

In the plane (x2, x6), motion occurs along
a "5-petal rose":

In the plane (x3, x7), motion occurs along
a logarithmic spiral:

Fig. 54. The example of motion trajectories for 4 sub-systems of the 8-parametric system
(explanation in text).
REFERENCES
Adler I., Barabe D., Jean R. V. (1997) A History of the Study of Phyllotaxis. Annals of
Botany 80: 231–244, http://aob.oxfordjournals.org/content/80/3/231.full.pdf
Ahmed N., Rao K. (1975) Orthogonal transforms for digital signal processing. N-Y,
Springer-Verlag Inc.
Arnold, V. (2007) A complexity of the finite sequences of zeros and units and geometry of
the finite functional spaces. Lecture at the session of the Moscow Mathematical Society, May
13, http://elementy.ru/lib/430178/430281.
Chapeville F., Haenni A.-L. (1974). Biosythese des proteins. Paris, Hermann.
Cook, T.A. (1914). The curves of life. London: Constable and Company Ltd, 524 p.
Davis P.J. (1964). Arithmetics. – In: “Mathematics in the modern world”, N. Y., Scientific
American, p. 29-45.
Eigen, M. (1979) The hypercycle - a principle of natural self-organization. Berlin: SpringerVerlag.

Fourier J. (1878). The analytical theory of heat. – Cambridge: Deighton, Bell and Co.
https://archive.org/details/analyticaltheory00fourrich
Halmos P.R. (1974) Finite-dimensional vector spaces. London: Springer, 212 p.
He M., Petoukhov S.V. (2011) Mathematics of bioinformatics: theory, practice, and
applications. USA: John Wiley & Sons, Inc., 295 p.
Jean, R.V. (1995) Phyllotaxis: A Systemic Study in Plant Morphogenesis. Cambridge
University Press, 1995. (Russian edition, 2005, Scientific Editor – S.Petoukhov)
Kline, M. (1980) Mathematics. The loss of certainty. New York: Oxford University Press.
Klein F. (2009). Elementary Mathematics from an Advanced Standpoint. - Cosimo, 284 p.
Konopelchenko, B. G., Rumer, Yu. B. (1975a) Classification of the codons of the genetic
code. I & II. Preprints 75-11 and 75-12 of the Institute of Nuclear Physics of the Siberian
department of the USSR Academy of Sciences. Novosibirsk: Institute of Nuclear Physics.
Konopelchenko, B. G., Rumer, Yu. B. (1975b). Classification of the codons in the genetic
code. Doklady Akademii Nauk SSSR, 223(2), 145-153 (in Russian).
Messiah A. (1999) Quantum mechanics. New York: Dover Publications, 1152 p.
Meyer C. D. (2000), Matrix Analysis and Applied Linear Algebra, Society for Industrial and
Applied Mathematics, 2000. ISBN 978-0-89871-454-8.
Petoukhov S.V. (1981). Biomechanics, bionics and symmetry. – Moscow, Nauka, 239 p. (in
Russian).
Petoukhov S.V. (2001a) Genetic codes I: binary sub-alphabets, bi-symmetric matrices and
the golden section; Genetic codes II: numeric rules of degeneracy and the chronocyclic
theory. Symmetry: Culture and Science, vol. 12, #3-4, p. 255-306.
Petoukhov S.V. (2005) The rules of degeneracy and segregations in genetic codes. The
chronocyclic conception and parallels with Mendel’s laws. - In: Advances in Bioinformatics
and its Applications, Series in Mathematical Biology and Medicine, 8, p. 512-532, World
Scientific.
Petoukhov S.V. (2006a) Bioinformatics: matrix genetics, algebras of the genetic code and
biоlogical harmony. Symmetry: Culture and Science, 17, #1-4, p. 251-290.
Petoukhov S.V. (2008a) The degeneracy of the genetic code and Hadamard matrices.
arXiv:0802.3366 [q-bio.QM].
Petoukhov S.V. (2008b) Matrix genetics, algebras of the genetic code, noise immunity. M.,
RCD, 316 p. (in Russian).
Petoukhov S.V. (2010) Matrix genetics, part 5: genetic projection operators and direct sums.
http://arxiv.org/abs/1005.5101.
Petoukhov S.V. (2011a). Matrix genetics and algebraic properties of the multi-level system
of genetic alphabets. - Neuroquantology, 2011, Vol 9, No 4, p. 60-81,
http://www.neuroquantology.com/index.php/journal/article/view/501
Petoukhov S.V. (2011b). Hypercomplex numbers and the algebraic system of genetic
alphabets. Elements of algebraic biology. – Hypercomplex numbers in geometry and physics,
v.8, No2(16), p. 118-139 (in Russian).
Petoukhov S.V. (2012a) The genetic code, 8-dimensional hypercomplex numbers and dyadic
shifts. (7th version from January, 30, 2012), http://arxiv.org/abs/1102.3596
Petoukhov S.V. (2012b) Symmetries of the genetic code, hypercomplex numbers and
genetic matrices with internal complementarities. - “Symmetries in genetic information and
algebraic biology”, special issue of journal “Symmetry: Culture and Science” (Guest editor:
S. Petoukhov), vol. 23, № 3-4, p. 275-301. http://symmetry.hu/scs_online/SCS_23_3-4.pdf
Petoukhov S.V., He M. (2009) Symmetrical Analysis Techniques for Genetic Systems and
Bioinformatics: Advanced Patterns and Applications. Hershey, USA: IGI Global. 271 p.
Poincare	  H.	  (1913).	  The	  foundations	  of	  science.	  Science	  and	  hypothesis.	  The	  value	  of	  
science.	  Science	  and	  method.	  –	  N.	  Y.,	  The	  Science	  Press	  New	  York	  and	  Garrison.	  

	  http://www.gutenberg.org/files/39713/39713-h/39713-h.htm#Page_264	  	  
Rumer	  Yu.	  B.	  (1968).	  Systematization	  of	  the	  codons	  of	  the	  genetic	  code.	  -­‐	  Doklady	  
Akademii	  	  Nauk	  SSSR,	  vol.	  183(1),	  p.	  225-­‐226	  (in	  Russian).	  
Russel B.A.W. (1956). An essay on the foundations of geometry. N-Y: Dover, 201 p.
Shults E. (1916), "The organism as creativity". - In the book "Questions of theory and
psychology of creativity", Russia, Kharkov, vol.7, p. 108-190 (in Russian, "Voprosy teorii i
psikhologii tvorchestva").
Stewart	  I.	  (1999).	  Life's	  other	  secret:	  The	  new	  mathematics	  of	  the	  living	  world.	  New-­‐
York:	  Penguin.	  
Vetter R.J., Weinstein S. (1967). The history of the phantom in congenitally absent
limbs. – Neuropsychologia, № 5, p.335-338
Vinberg E.B. (2003). A Course in Algebra. – USA: American	  Mathematical	  Society,	  511	  p.	  
Vladimirov Y.S. (2008). Foundations of Physics. – Moscow, Binom, 456 p. (in Russian)
Weinstein S., Sersen E.A. (1961). Phantoms in cases of congenital absence of limbs. –
Neurology, №11, p.905-911.
Wittmann H.G. (1961) Ansatze zur Entschlusselung des genetishen Codes. – Die
Naturwissenschaften, B.48, 24, S. 55

