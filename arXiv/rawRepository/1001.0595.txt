arXiv:1001.0595v4 [q-bio.PE] 27 Sep 2011

FINDING THE PROBABILITY OF INFECTION IN AN SIR
NETWORK IS NP-HARD
MICHAEL SHAPIRO AND EDGAR DELGADO-ECKERT
Abstract. A common approach in epidemiology is to study the transmission
of a disease in a population where each individual is initially susceptible (S),
may become infective (I) and then removed or recovered (R) and plays no
further epidemiological role. Much of the recent work gives explicit consideration to the network of social interactions or disease-transmitting contacts
and attendant probability of transmission for each interacting pair. The state
of such a network is an assignment of the values {S, I, R} to its members.
Given such a network, an initial state and a particular susceptible individual,
we would like to compute their probability of becoming infected in the course
of an epidemic. It turns out that this and related problems are NP-hard. In
particular, it belongs in a class of problems for which no efficient algorithms
for their solution are known. Moreover, finding an efficient algorithm for the
solution of any problem in this class would entail a major breakthrough in
theoretical computer science.

1. Introduction
Mathematical modelling of epidemics is often traced to the celebrated SIR model
of Kermack and McKendrick [1]. This model posits a population of constant size
whose members fall into one of three classes: susceptible (S), infective (I) and
removed (R). Approximating these as continuous and assuming well-mixing, i.e.,
each individual is in equal contact with and equally likely to infect each other
individual, allows for an approximate description of the infection dynamics using
ordinary differential equations (ODE).
Clearly, as it has been argued by many in theoretical [2, 3, 4] as well as experimental studies [5], the well-mixing assumption is not an accurate representation
of real contact patterns. Thus, much recent work has focused on the role of the
network of disease-transmitting contacts. (Reviewed in [6]. See also, [7, 8]. For a
comparison of well-mixed and network-based models, see [9].) Indeed, Kermack’s
and McKendrick’s ODE model arises as the limiting case of a simplistic network
model in which each individual has an equal chance of infecting every other. However, real-world social contact networks exhibit complex patterns of interconnection
between individuals. Further, the probability of transmitting disease from one individual to another depends on the nature, frequency and duration of the contact as
well as the immune competence of the target individual. This leads to a modelling
formalism of social networks as a probabilistic graph G = (G, Pr). Here G is the
graph G = (V, E), each vertex u ∈ V is an individual, each edge e = (u, v) ∈ E
records the fact that u might infect v and Pr : E → [0, 1] gives the probability that
Key words and phrases. epidemics, SIR networks, contact network, network reliability, NPhard.
The first author wishes to acknowledge support from NIH Grant K25 AI079404-02.
1

2

MICHAEL SHAPIRO AND EDGAR DELGADO-ECKERT

u infects v if u becomes infective while v is susceptible. In this formalism, G is a
fixed graph G with labelling Pr.
This relatively new modelling paradigm has triggered an enormous amount of research in theoretical epidemiology. The field has greatly benefited from approaches
that range from applications of bond percolation theory and other techniques from
statistical physics [10, 11, 3, 12, 13, 14, 15, 16, 17, 18] to large scale simulation endeavours [4, 19, 20, 21, 22]. Given that this mathematical formalism seems accurate
and powerful to describe the spread of infectious diseases, the natural question arises
as to whether calculations performed within this formalism can be used in practical
situations to make useful predictions. Such calculations are based on potentially
measurable parameters such as network topology and transmission probabilities
[23]. For instance, one could attempt to calculate the probability that, given a
social contact network G, an epidemic starting with a set P of infectives results in
the infection of an initially susceptible individual u. Are there any computational
limitations when trying to calculate such magnitudes? If yes, how limiting are they?
Fortunately, to address the computational issues associated with this and similar
calculations, we don’t need to start from scratch, given that network engineers have
already studied since the 1970s problems that are essentially the same.
In the era of electronically digitalized information and digital computers, communications networks have become the biggest and count among the most important
networks. The size of these networks is exponentially increasing. For instance, the
size of the Internet shows exponential growth since its creation in the early nineties
(http://www.isc.org/). As the components of such networks are subject to failure,
engineers face the problem of designing, constructing and operating networks that
meet the required standards of reliability. Of particular interest is the estimation of
how reliable a given network is in performing its function, provided some knowledge
about the reliability of its components is available. In many cases, the functionality of the network can be expressed as the ability of its topology to support the
network’s operation. In other words, the network is functional if and only if certain
connectivity properties are fulfilled. Consider a network of computers which use
this network to transmit messages. Let us suppose that each of these computers is
reliable, but that each communication link has some chance of failure when called
upon to transmit a message. We then encounter the same formalism explained
above for social networks. A communications network is given by G = (G, Pr)
where each vertex u ∈ V is a computer, each edge e = (u, v) ∈ E is a communication link and Pr : E → [0, 1] is the reliability of the communication link from u to
v. One might ask, given a communications network G, a set of computers P and
a computer u ∈
/ P , if the computers in P all send a message, what is the chance
it will reach u? We will see that this is the same problem we stated above in the
context of epidemics on social contact networks.
It has long been known in the communications network literature that this problem is computationally intractable. A standard benchmark of computational complexity is the class of NP-complete problems. This class has the following properties:
• At present, no algorithm for an NP-complete problem is known to have a
running time which is bounded by a polynomial. Indeed, many algorithms
for NP-complete problems have exponential running time. It is unknown

PROBABILITY OF INFECTION IN AN SIR NETWORK IS NP-HARD

3

whether any NP-complete problem can be solved by an algorithm with
polynomial running time.
• If any problem in this class can be solved by an algorithm whose running
time is bounded by a polynomial, then every problem in this class can be
solved by an algorithm whose running time is bounded by a polynomial.
In view of the second, it is considered unlikely that any NP -complete problem
has a polynomial time solution. The communication among computers problem
(and hence the epidemiology problem) listed above is known to be as hard as any
NP-complete problem. Such problems are termed NP-hard. This is not the first
problem in network epidemiology known to be NP-hard. Previously known examples include the following: Given a social contact network and limited resources
• What is the optimal strategy for vaccinating a limited number of individuals?
• What is the optimal strategy for quarantining a limited number of individuals?
• What is the optimal strategy for placement of a limited number of sensors
for monitoring the course of an epidemic?
(See [24, 25, 26, 27].) These problems involve the search for an optimum among
subsets of the vertices or edges of the given social contact network. It might be
hoped that finding the probability of infection of a single individual would be computationally less demanding. As the engineers have taught us, this is not so. While
this result has been recently reported in the physics and operations research community [28], it seems almost unknown among epidemiologists.
This article is organized as follows: In Section 2 we give a very brief overview
of the relevant concepts and methods in computational complexity. This provides
the unacquainted reader with the basic tools for understanding the main message
of this paper. Section 3 provides the elementary formal mathematical framework
for studying SIR epidemics on networks, including the connection with percolation
theory. In Section 4 we present a series of problems that have been studied in
network engineering and demonstrate their structural isomorphism with certain
problems concerning SIR epidemics on networks. Section 5 is devoted to studying
the computational complexity of extended/generalized epidemiological problems.
We finish in Section 6 with some concluding remarks.
2. Computational complexity
In this section we give a brief account of the class NP-complete. This class is a
common benchmark for describing problems which are algorithmically soluble but
computationally intractable. For those wishing a fuller account we recommend [29].
In describing the class NP-complete, it is useful to describe the class P, and
necessary to describe the class NP. These classes of problems are defined in terms
of computational complexity.
The computational complexity of a problem Π is measured in terms of the running time necessary for an algorithm which solves Π. Defining these terms requires
some preliminaries. First, note that a problem Π consists of a collection of instances,
DΠ . Thus, “Determine whether 18 is composite” is an instance of the problem, “For
any integer n, determine whether n is composite.” This is an example of a decision
problem, that is, for each instance, the answer is either “yes” or “no”. A decision
problem Π can be formalized as the pair (DΠ , YΠ ), where YΠ ⊂ DΠ consists of

4

MICHAEL SHAPIRO AND EDGAR DELGADO-ECKERT

the yes instances. In this example, DΠ is the set of integers and YΠ is the set of
composite integers. We will refer to this problem as Πcomposite .
Notice that each instance π ∈ Π has a size, ℓ(π) and that the computational cost
of solving the problem grows with the size of the problem. In this example, the size
ℓ(n) of the instance n is the number of digits in n. If we then have an algorithm
M which solves Π, we can consider the running time rM (π) required by M when
applied to the instance π. This could be measured in elapsed time or in terms of
the number of steps carried out by M in this computation. We can then define the
running time of M to be

0



 if {π | ℓ(π) = n} = ∅
rM (n) =

max{rM (π) | ℓ(π) = n}



otherwise

The class P consists of those decision problems which can be solved with a polynomial running time. Stated formally, a decision problem Π belongs to the class
P if there is an algorithm M which solves Π and a polynomial p(n) such that
rM (n) ≤ p(n). An example of a problem in the class P is Πmult . An instance of
Πmult is three integers, a, b and c. The size of an instance is the total number of
digits in a, b and c. These constitute a yes instance if a × b = c.
The class NP consists of non-deterministic polynomial time problems. That is,
a decision problem is NP if a machine which is allowed to guess can verify a yes
instance in polynomial time. Πcomposite provides and example of a problem which
is NP. Given an instance of Πcomposite , i.e., an integer c, if c is, in fact, composite, a
correct guess as to its factors a and b, can be verified in polynomial time by calling
Πmult . One can define this class in terms of the operation of non-deterministic
Turing machines. See, for example, [30]. Clearly P ⊆ NP. In view of the perceived
complexity of many problems in NP, it is generally believed that P 6= NP.
The class NP-complete consists of the hardest problems in NP. The problems
in NP-complete have the following property: Suppose that Π1 is NP-complete.
Suppose that Π2 is NP. Then there is an algorithm M which translates any instance
π2 of Π2 into an instance π1 of Π1 such that π1 is a yes instance of Π1 if and only
if π2 is a yes instance of Π2 . Further, both the computational cost of translating
π2 into π1 and the size ℓ(π1 ) are bounded by a polynomial in ℓ(π2 ). It follows
that if any NP-complete problem can be solved (deterministically) in polynomial
time, then every NP problem can be solved in polynomial time. Put another way,
if any NP-complete problem can be solved in polynomial time, we will then have
P = NP.
Hundreds of problems are known to be NP-complete [29]. These come from fields
such as graph theory, number theory, scheduling, code optimization and many others. They are widely believed to be intrinsically intractable, but this remains an
open question. Other problems which are not necessarily NP-complete (e.g., because they are not decision problems) are known to be at least as hard. This is
because for such a problem, say Γ, there is an NP-complete problem Π that can be
reduced to Γ, where the computational cost of this reduction is bounded by a polynomial in the length of the instance problem considered. Thus, Γ can be used to
solve Π. These problems are called NP-hard. Since NP-complete problems transform to each other, all NP-complete problems can be solved by a reduction to an

PROBABILITY OF INFECTION IN AN SIR NETWORK IS NP-HARD

5

NP-hard problem. NP-hard problems are found in fields as diverse as epidemiology
and origami [31].
3. SIR epidemics on networks
We start by describing a network SIR model in which both the population and
the individual transmission probabilities are constant with respect to time.
A state of this system is the assignment of each individual to one of the classes
S, I or R. The transmission probabilities determine who can infect whom and consequently which states can follow a given state. Indeed, they also determine the
probability that any one of these states follows the given state. An epidemic is a
sequence of states each of which is a possible successor of the previous state. Consequently, given an initial state, we can speak of the probability that an epidemic
evolves through a given sequence of states and the probability that it arrives at a
particular state. Let us formalize this.
As above, a social contact network is a pair G = (G, Pr) where G is the graph
with vertex set V and edge set E. Each edge has the form (u, v) with u, v ∈ V and
u 6= v. The function Pr assigns a probability to each edge, that is Pr : E → [0, 1].
The states of G are given by1
St(G) = {ϕ | ϕ : V → {S, I, R}}.
Given states ϕ1 and ϕ2 , the state ϕ2 is a possible successor of ϕ1 if it satisfies
the following conditions:
(1) If ϕ1 (u) = R, then ϕ2 (u) = R. (Recovered individuals stay recovered.)
(2) If ϕ1 (u) = I, then ϕ2 (u) = R. (Infected individuals recover in one step.)
(3) If ϕ1 (u) = S, then ϕ2 (u) ∈ {S, I}. (Susceptible individuals either stay
susceptible or become infected.)
(4) If ϕ2 (u) = I, then ϕ1 (u) = S and there is a vertex q ∈ V \{u} and an
edge (q, u) with ϕ1 (q) = I. (Infected individuals were susceptible and were
infected by a neighbour.)
The requirement that individuals recover in exactly on time-step might appear
to be a drastic oversimplification. However, the formalism is rich enough to accommodate patterns of latency and extended periods of infectivity. This can be
done by replacing the individual represented by vertex u by a sequence of vertices
u1 , u2 , . . . representing u on day 1, u on day 2, etc. See, e.g., [32].
An epidemic Φ is a sequence of states ϕ1 , . . . , ϕk where ϕi+1 is a possible successor of ϕi for i = 1, . . . , k − 1. The length of this epidemic is ℓ(Φ) = k. Since
individuals recover after one step, infection must be transmitted or die out. As a
consequence, no epidemic can be longer than the longest self-avoiding path in G, for
otherwise, it must infect some vertex twice. If we assume that each edge transmits
or fails to transmit independently, then it is not hard to compute the probability
that a susceptible individual is infected by its infected neighbours. This, in turn,
allows one to compute the probability that a state ϕ1 is followed by a particular
successor state ϕ2 . Let us denote this probability by Pr(ϕ2 | ϕ1 ). This system enjoys the Markov property, that is, the probability of a given state depends only on
1In particular, a state ϕ can be seen as a subset of the Cartesian product V × {S, I, R}, and
therefore, it is meaningful to speak of the probability of a state or of a collection of states.

6

MICHAEL SHAPIRO AND EDGAR DELGADO-ECKERT

the previous state. Thus given an initial state ϕ1 , the probability of the epidemic
Φ = ϕ1 , . . . , ϕn , is
n
Y
Pr(ϕi | ϕi−1 ).
Pr(Φ | ϕ1 ) =
i=2

The probability that u becomes infected at the nth step in the course of an epidemic
starting with ϕ1 is
Pr(ϕn (u) = I | ϕ1 ) =

X

Pr(ϕ1 , . . . , ϕn | ϕ1 ).

{ϕ1 ,...,ϕn |
ϕn (u)=I}

Abusing notation, we denote the probability that u becomes infected in the course
of some epidemic starting with ϕ1 by
n
X
Pr(ϕj (u) = I | ϕ1 ).
Pr(u | ϕ1 ) =
j=1

Note that since an infected individual becomes recovered at the next stage, no
epidemic appearing in this sum is an initial sub-epidemic of another. Accordingly,
these are disjoint cases.
We will be interested in initial states ϕ1 consisting only of infectives and susceptibles. In this case, we can identify ϕ1 with the set of infectives P = ϕ−1
1 (I). This
gives the notation Pr(u | P ).
Let us formalize the problem Πepidemic of finding Pr(u | P ). An instance π of
this problem consists of
• A graph G = (V, E).
• A labelling2 Pr : E → [0, 1] ∩ Q.
• An initial infective set P ⊂ V .
• An individual u ∈ V \ P .
A solution to π is the value Pr(u | P ).
We take ℓ(Π) = |V |.
The epidemiological viewpoint we have just described follows the evolution of
probabilities over time. If we ignore the order of events, we come to the simpler
viewpoint of percolation. Percolation methods have been used in epidemiology.
(See, for example, [34, 35, 32, 3, 36, 37]. The latter two contain extensive references.) Since an individual is only infected for one time step in the course of any
epidemic, an edge can transmit at most once in the course of an epidemic. This allows us to consider a random variable that takes as values subgraphs of G. Given G,
we take G to be the random variable which takes values in {G′ = (V, E ′ ) | E ′ ⊆ E}.
The probability that G takes the value G′ is given by
!
!
Y
Y
′
Pr(G ) =
Pr(e)
(1 − Pr(e)) .
e∈E ′

e∈E
/ ′

′

We may think of E as determining whether e = (u, v) transmits in the course of
an epidemic if that epidemic has a state ϕ with ϕ(u) = I and ϕ(q) = S. Given a
2There are technical issues here concerning the values of these probabilities. To avoid these
issues they are usually assumed to be rational numbers and bounds are placed on the sizes of their
denominators. For details, see [33]. Since Q is dense in R, this is not a limitation on the possible
probability values relevant in real applications.

PROBABILITY OF INFECTION IN AN SIR NETWORK IS NP-HARD

7

path τ in G, we will abuse notation by writing τ ⊂ G and e ∈ τ for the edges of τ .
Given a path τ , the probability that it appears in G′ = (V, E ′ ) is
Y
(1)
Pr ({G′ | τ ⊂ G′ }) =
Pr(e).
e∈τ

For a proof of the following theorem, see, e.g., [32].
Theorem 1. Suppose G is social contact network. Then
Pr(u | P ) = Pr ({G′ | G′ contains a path from P to u}) .
In particular, Pr(u | P ) is a finite sum of terms of the form (1). Accordingly, it is
a polynomial in the values Pr(e) with integer coefficients and degree |E| .
This theorem provides the link between epidemiology and communications networks.
4. NP-hard problems on communications networks: Consequences for
epidemiological calculations
We assume that a communications network consists of a set of computers, each
of which is reliable and a set of communication links each of which has a known
likelihood of failure and that the communication links function or fail independently.
There is no loss of generality in regarding each node as infallible, since a fallible
computer can be modelled as a pair of nodes with a fallible link connecting its
input to its output. Once again, we can formalize this as G = (G, Pr), where
G(V, E) represents installed capacity (V being the set of computers and E the
set of communication links), Pr : E → [0, 1] the reliability of each link and G
is the random variable assuming values in {G′ = (V, E ′ ) | E ′ ⊆ E}. Each G′ =
(V, E ′ ) is the subnetwork of functioning links left after the failure of the edges
e ∈ E\E ′ . Successful transmission of a message on this network depends on the
connectivity of the subgraph realized by G. Network engineers focus on several
kinds of connectivity. We first examine two of the simplest.
The two-terminal reliability problem is defined as the calculation of the probability that there is at least one correctly functioning path in the network connecting a
predefined source node to a predefined target node. An instance π of Π two terminal
consists of the following:
•
•
•
•

A
A
A
A

graph G = (V, E).
labelling Pr : E → [0, 1] ∩ Q.
source terminal u ⊂ V .
target terminal v ∈ V \ {u}.

A solution to π is the value Pr(v | u).
By Theorem 1, this value is an integer polynomial in the values Pr(E). Thus, if
we restrict to the case where Pr(E) takes a single value, this becomes an integer
polynomial in one variable called the reliability polynomial. Thus a related problem
is the following:
An instance π of Πrel poly is
• A graph G = (V, E).
• A source terminal u ⊂ V .
• A target terminal v ∈ V \ {u}.

8

MICHAEL SHAPIRO AND EDGAR DELGADO-ECKERT

A solution to π is the coefficients of the reliability polynomial. A number of
additional network reliability problems have been studied (see [33], an excellent
introduction to this field). These include
• k terminal reliability. This requires that k chosen terminals are mutually
pair wise connected.
• Broadcasting, also known as all terminal reliability: This requires that all
terminals are pair wise connected.
Naturally, in addition to the network reliability problems presented above, many
other reasonable problems can be defined or could arise from practical applications. Formally, once a model G = (G, Pr) of the network has been chosen, a
general mechanism to define a reliability problem is the following: A network operation is specified by defining a set Op(G) ⊆ {G′ = (V, E ′ ) | E ′ ⊆ E} of states
considered to be functional. The set Op(G) is sometimes called a stochastic binary
system; the elements of Op(G) are termed pathsets. Specifying the pathsets for G
determines the whole stochastic binary system, and therefore defines the network
operation. The reliability problem consists of finding the probability Pr(Op(G))
that the probabilistic graph G assumes values in the set Op(G).
A first naive algorithm to solve a network reliability problem formulated in this
general manner is to enumerate all states of G (i.e., the cardinality of the set {G′ =
(V, E ′ ) | E ′ ⊆ E}), determine whether a given state is a pathset or not using some
predesigned recognition procedure3, and sum the occurrence probabilities of each
pathset. Due to the statistical independence assumed, the probability of occurrence
of a pathset is simply the product of the operation probabilities of the edges in
the pathset and the failure probabilities of the edges not present in the pathset.
Complete state enumeration requires the generation of all 2|E| states of G, implying
that the running time of this algorithm would exponentially depend on the number
of links in the network.
A substantial amount of effort has been put into finding more efficient algorithms
for exact calculation of network reliability problems (see [33]). However, efficient
exact solutions seem unlikely:
Theorem 2. The problems Πtwo

terminal

and Πrel

poly

are NP-hard.

For a proof of this result, see, for instance, Theorem 1 in [38]. These problems belong to the class #P-complete [39, 40, 41, 42, 43, 33]. #P is the set of
the counting problems associated with the decision problems in the set NP. Thus,
while a decision problem might ask whether something exists (e.g., an assignment of
truth values to a set of variables which satisfies a given formula), the corresponding
enumeration problem asks how many of these there are. Solving the enumeration
problem solves the corresponding decision problem since knowing whether the number of these things is positive tells us whether one exists. In particular, the counting
version of any problem is always at least as hard as the corresponding existence
problem. In analogy to NP-completeness, a problem is #P-complete if and only if
it is in #P, and every problem in #P can be reduced to it by a polynomial-time
counting reduction (see [29] for more details).
Corollary 1. The problem Πepidemic is NP-hard.
3Such recognition procedures generally boil down to path-finding or spanning tree methods,
which are efficient (i.e., of polynomial running time) and well-know procedures in algorithmic
graph theory and computer science.

PROBABILITY OF INFECTION IN AN SIR NETWORK IS NP-HARD

9

To see this, notice that every instance of Πtwo terminal is an instance of Πepidemic,
namely, an instance in which P consists of a single vertex.
More generally, despite dedicated efforts, no algorithm of polynomial running
time has been found that allows for the exact calculation of the probability Pr(Op(G))
of a given set of pathsets Op(G), unless very specific assumptions are made on the
topology of the underlying probabilistic network ([33, 44]). We consider it an open
question as to which (if any) of these more general network reliability problems (defined through the choice of a suitable stochastic binary system Op(G)) correspond
to epidemiological problems.
5. NP-hardness of extended problems in epidemiology
Epidemic on networks with time-varying transmission probabilities. As
we have seen in the previous section, the seemingly simple problem of finding an
individual’s chances of infection is NP-hard. This is even so in the case where the
set of initial infectives is a single individual.
We can generalize Πepidemic by allowing transmission probabilities to vary over
time. We have seen that the length of any epidemic is at most the length of the
longest self-avoiding path in G. Consequently, time-varying transmission probabilities can be encoded as
Pr : E × {1, . . . , |E|} → [0, 1].
In this case, percolation methods no longer apply. However, every instance of
Πepidemic can be mapped into an instance of this extended problem. Thus, the
time-varying version of this problem is NP-hard.
Epidemic on networks with disease latency. One might also generalize Πepidemic
to allow patterns of latency and extended periods of infectivity4. We will take I
to be a sequence of distinct states, {I1 , I2 , . . . , IN }. We assume that for each stage
Ii there is an infectivity µi and a probability of recovery ρi . We take ρN = 1. We
now consider a social contact network G and infectivity pattern I. We refer to this
as an {S, I, R} network. The states of this network are
{ϕ | ϕ : V → {S} ∪ I ∪ {R}}.
We modify the definition of possible successor states so that the allowable transitions are from S to I1 , from Ii to Ii+1 for i = 1, . . . , N − 1 and from Ii to R for
i = 1, . . . , N . If ϕ(u) = Ii , u transitions to state R with probability ρi and to state
Ii+1 with probability 1 − ρi . If e = (u, v) ∈ E and ϕ(u) = Ii , and ϕ(v) = S, then u
infects v with probability PrI (e, i) = µi Pr(e). We assume that I is non-trivial in
the sense that there is i with µi 6= 0 and ρj 6= 1. This ensures that an infected individual has a positive probability of reaching an infective state. As before, under
the assumption that transmissions and recoveries happen independently, we can
develop an expression for PrI (u | P ).
Fix I. An instance of ΠI is an instance of Π epidemic.
A solution to ΠI is the value PrI (u | P )
Theorem 3. Given an non-trivial infectivity pattern I, ΠI is NP-hard.
Lemma 1. Given G = (G, Pr) and I, there is G ′ = (G, Pr′ ) so that for each P ⊂ V
and u ∈
/ P , PrI (u | P ) = Pr′ (u | P ).
4For a more general version of this see [32].

10

MICHAEL SHAPIRO AND EDGAR DELGADO-ECKERT

Proof. Consider an edge e = (u, v). Suppose that ϕ1 (u) = Ii and ϕ1 (v) = S.
What are the chances that v remains uninfected by u? (We assume for the moment
that v is not infected by some other neighbour during the next N steps.) We take
µ = Pr(e). Let us denote by νi the probability that u remains infected for i steps,
but not i + 1 steps. We then have
νi = ρi

i
Y

(1 − ρj ).

j=1

The probability that v remains uninfected by u is
τI (µ) =

N
X

νj

i=1

We now define G ′ = (G, Pr′ ) by taking

i
Y

(1 − µj µ)

j=1

Pr′ (e) = 1 − τI (Pr(e)).
This does what is required.



Proof of Theorem 3. We will show that Πrel poly is polynomially reducible to ΠI .
Fix I to be a non-trivial pattern of infectivity. Suppose we are given an instance
π of Πrel poly . This consists of a graph G and source and target vertices u and v.
Suppose also that we have a polynomial time algorithm for solving ΠI . We choose
N + 1 arbitrary probabilities p0 , . . . , pN +1 . These give us N + 1 instances of ΠI
by taking Gi = (G, Pri ), where Pri takes the constant value pi . By the previous
lemma, solving these N + 1 instances of ΠI solves N + 1 distinct instances of
Πepidemic which consist of the graph G and differing constant functions Pr′i . These
N + 1 values give us N + 1 independent linear equations whose unknowns are the
coefficients of the reliability polynomial. Solving for these is a polynomial time
problem.

Expected number of total infections. One might hope that while computing
an individual’s probability of infection is NP-hard, there might be a way to compute
the expected number of infections. This, too, is NP-hard. Let us formalize this.
An instance π of Πexpected is
• A graph G = (V, E).
• A labelling Pr : E → [0, 1] ∩ Q.
• An initial infective set P ⊂ V .
A solution to π is the expected number of infections,
X
Pr(u | P ).
u∈V

The following theorem was proved in [28]. For the sake of completeness, we provide
a proof here.
Theorem 4. Πexpected is NP-hard.
Proof. We will show that Πepidemic can be polynomially reduced to Πexpected. Suppose we are given an instance π of Πepidemic . Let π
e be the instance of Πepidemic
which is formed from π by appending a single edge from u to v ∈
/ V and assigning
Pr(u, v) = 1. It is clear that the expected number of infections in π
e differs from
the number of expected infections in π by exactly Pr(u | P ). Thus, if we had a

PROBABILITY OF INFECTION IN AN SIR NETWORK IS NP-HARD

11

polynomial time algorithm for finding the expected number of infections, we could
find the probability of any individual becoming infected.

The fact that Πrel poly is NP-hard suggests that the difficulty lies not in the
probabilities Pr but in the topology of G. One problem which we have not addressed
here is the question of calculating the probability of infection in an {S, I, R} network
where G = Gt changes over time due to stochastic births and deaths. It seems likely
that this will also provide a source of NP -hard problems. However, this requires
a reformulation of the underlying problem.
6. Discussion and conclusions
It has been the purpose of this paper to draw the attention of network epidemiologists to results in communications network reliability which shed light on questions
regarding the computational aspects of epidemiology of {S, I, R} networks.
Theorem 1 and Theorem 4 tell us that generally, in the absence of a major
break-through in computer science we cannot expect to be able to compute exact
probabilities of infection or expected number of infection in large social contact
networks. As [29] points out, problems do not go away simply because we have
deemed them NP-hard.
Since the network engineers have been here before us, it is tempting to ask
whether their solutions will work for epidemiologists. While we consider the case
open, the prospects seem mixed. Network engineers are often in the position of
being able to choose the class of networks under consideration. As opposed to scalefree [8, 45] and small-world network structures [46, 47, 8], which frequently arise
from a self-organization process during the spontaneous growth of a network, engineered or purposefully designed networks show rather different structures. Some of
the classes that allow efficient calculations (exact or approximate) include trees, full
graphs, series-parallel graphs [33], and channel graphs [44]. Unfortunately, these
classes of networks seem unrealistic as models of social contact networks.
Network engineers have turned to Monte Carlo simulation for the calculation of
estimates of network reliability. We would like to give pointers into their literature
[48, 49, 50, 51, 52, 53, 54, 28]. This approach has received increased attention in the
last decade due to the power of modern computers and computing clusters. While
Monte Carlo simulation only calculates an unbiased point estimator for reliability
probabilities, increasing the number of simulated samples causes these estimates to
converge to the actual value.
The fact that efficient and precise algorithms for computing infection probabilities are out of reach (see Theorems 1, 3 and 4) has real-world consequences.
Designing a response to an emerging epidemic can depend on determining the kind
of epidemiological probabilities we have been discussing [55]. The effectiveness of
interventions during an emerging epidemic often crucially depends on timely implementation. Our results and those of [24] and [25] place an emphasis on the
search for efficient and quick methods that give good approximations when applied
to real-world social networks.
References
[1] Kermack WO, McKendrick AG. A contribution to the mathematical theory of epidemics.
Proc Roy Soc Lond A. 1927;115:700–721.

12

MICHAEL SHAPIRO AND EDGAR DELGADO-ECKERT

[2] Bansal,
Shweta,
Grenfell,
T B, Meyers,
Ancel L. When individual behaviour matters:
homogeneous and network models in epidemiology. Journal
of
The
Royal
Society
Interface.
2007;4(16):879–891.
Available
from:
http://rsif.royalsocietypublishing.org/content/4/16/879.abstract.
[3] Newman MEJ. Spread of epidemic disease on networks. Phys Rev E. 2002 Jul;66(1):016128.
[4] Eubank S, Guclu H, Kumar VSA, Marathe MV, Srinivasan A, Toroczkai Z, et al. Modelling disease outbreaks in realistic urban social networks. Nature. 2004;429(6988):180–184.
Available from: http://www.ncbi.nlm.nih.gov/pubmed/15141212 .
[5] Cauchemez S, Bhattarai A, Marchbanks TL, Fagan RP, Ostroff S, Ferguson NM, et al. Role of
social networks in shaping disease transmission during a community outbreak of 2009 H1N1
pandemic influenza. Proceedings of the National Academy of Sciences. 2011;108(7):2825–2830.
Available from: http://www.pnas.org/content/108/7/2825.abstract.
[6] Keeling
MJ,
Eames
KTD.
Networks
and
epidemic
models.
Journal
of
The
Royal
Society
Interface.
2005;2(4):295–307.
Available
from:
http://rsif.royalsocietypublishing.org/content/2/4/295.abstract .
[7] Newman MEJ. The Structure and Function of Complex Networks. SIAM Review.
2003;45:167–256.
[8] Eubank S. Network based models of infectious disease spread. Jpn J Infect Dis. 2005;58(6):S9–
13.
[9] Keeling M. The implications of network structure for epidemic dynamics.
Theoretical
Population
Biology.
2005;67(1):1
–
8.
Available
from:
http://www.sciencedirect.com/science/article/B6WXD-4F4NYDN-1/2/58290fd5aa19b724c74dda6a1aa296d2.
[10] Allard A, Noël PA, Dubé LJ, Pourbohloul B. Heterogeneous bond percolation on multitype
networks with an application to epidemic dynamics. Phys Rev E. 2009 Mar;79(3):036113.
[11] Miller JC. Percolation and epidemics in random clustered networks. Phys Rev E. 2009
Aug;80(2):020901.
[12] Y Moreno, R Pastor-Satorras, A Vespignani. Epidemic outbreaks in complex
heterogeneous networks. Eur Phys J B. 2002;26(4):521–529. Available from:
http://dx.doi.org/10.1140/epjb/e20020122.
[13] Meyers LA, Newman MEJ, Pourbohloul B. Predicting epidemics on directed contact networks. Journal of Theoretical Biology. 2006;240(3):400 – 418. Available from:
http://www.sciencedirect.com/science/article/pii/S0022519305004418.
[14] Volz E. SIR dynamics in random networks with heterogeneous connectivity. Journal
of Mathematical Biology. 2008;56:293–310. 10.1007/s00285-007-0116-4. Available from:
http://dx.doi.org/10.1007/s00285-007-0116-4.
[15] Volz
E,
Meyers
LA.
Susceptibleâe“infectedâe“recovered
epidemics
in
dynamic
contact
networks.
Proceedings
of
the
Royal
Society
B:
Biological
Sciences.
2007;274(1628):2925–2934.
Available
from:
http://rspb.royalsocietypublishing.org/content/274/1628/2925.abstract.
[16] Pastor-Satorras R, Vespignani A. Epidemic Spreading in Scale-Free Networks. Phys Rev Lett.
2001 Apr;86(14):3200–3203.
[17] House T, Keeling MJ. Insights from unifying modern approximations to infections on
networks. Journal of The Royal Society Interface. 2011;8(54):67–73. Available from:
http://rsif.royalsocietypublishing.org/content/8/54/67.abstract .
[18] Boguñá M, Pastor-Satorras R, Vespignani A. Absence of Epidemic Threshold in Scale-Free
Networks with Degree Correlations. Phys Rev Lett. 2003 Jan;90(2):028701.
[19] Stroud P, Del Valle S, Sydoriak S, Riese J, Mniszewski S. Spatial Dynamics of Pandemic
Influenza in a Massive Artificial Society. Journal of Artificial Societies and Social Simulation.
2007;10(4):9. Available from: http://jasss.soc.surrey.ac.uk/10/4/9.html .
[20] Mniszewski SM, Del Valle SY, Stroud PD, Riese JM, Sydoriak SJ. EpiSimS simulation of a multi-component strategy for pandemic influenza. In: Proceedings of
the 2008 Spring simulation multiconference. SpringSim ’08. San Diego, CA, USA:
Society for Computer Simulation International; 2008. p. 556–563. Available from:
http://portal.acm.org/citation.cfm?id=1400549.1400636 .
[21] SY Del Valle, D Kubicek, SM Mniszewski, JM Riese, PR Romero, JP Smith, et al. EpiSimS
Los Angeles Case Study. Los Alamos National Laboratory; 2006. LAUR-06-0666.
[22] Mniszewski SM, Del Valle SY, Stroud PD, Riese JM, Sydoriak SJ. Pandemic simulation of antivirals + school closures: buying time until strain-specific vaccine is

PROBABILITY OF INFECTION IN AN SIR NETWORK IS NP-HARD

[23]

[24]
[25]

[26]

[27]

[28]

[29]
[30]
[31]
[32]

[33]
[34]
[35]
[36]
[37]
[38]
[39]

[40]
[41]
[42]
[43]
[44]
[45]
[46]

13

available. Comput Math Organ Theory. 2008 September;14:209–221. Available from:
http://portal.acm.org/citation.cfm?id=1394977.1394987 .
Wallinga J, Teunis P, Kretzschmar M. Using Data on Social Contacts to Estimate Age-specific Transmission Parameters for Respiratory-spread Infectious
Agents. American Journal of Epidemiology. 2006;164(10):936–944. Available from:
http://aje.oxfordjournals.org/content/164/10/936.abstract.
Wang N. Modeling and analysis of massive social networks [Ph.D Thesis]. University of Maryland. College Park, MD, USA; 2005. Adviser: Srinivasan, Aravind.
Eubank S, Kumar VSA, Marathe MV, Srinivasan A, Wang N. Structural and algorithmic
aspects of massive social networks. In: SODA ’04: Proceedings of the fifteenth annual ACMSIAM symposium on Discrete algorithms. Philadelphia, PA, USA: Society for Industrial and
Applied Mathematics; 2004. p. 718–727.
Aspnes J, Chang K, Yampolskiy A. Inoculation strategies for victims of viruses and the
sum-of-squares partition problem. In: SODA ’05: Proceedings of the sixteenth annual ACMSIAM symposium on Discrete algorithms. Philadelphia, PA, USA: Society for Industrial and
Applied Mathematics; 2005. p. 43–52.
Hayrapetyan A, Kempe D, Pál M, Svitkina Z. Unbalanced Graph Cuts. In:
Algorithms - ESA 2005. Springer-Verlag;
2005. p. 191–202. Available from:
http://dx.doi.org/10.1007/11561071_19.
Laumanns M, Zenklusen R. Computational complexity of impact size estimation for spreading
processes on networks. European Physical Journal B. 2009;71(4):481–487. Available from:
http://www.springerlink.com/index/10.1140/epjb/e2009-00344-7.
Garey MR, Johnson DS. Computers and Intractability; A Guide to the Theory of NPCompleteness. New York, NY, USA: W. H. Freeman & Co.; 1990.
Hopcroft JE, Ullman JD. Introduction To Automata Theory, Languages, And Computation.
Boston, MA, USA: Addison-Wesley Longman Publishing Co., Inc.; 1990.
Bern M, Hayes B. The complexity of flat origami. In: Proceedings of the 7th Annual ACMSIAM Symposium on Discrete Mathematics; 1996. p. 175–183.
Floyd W, Kay L, Shapiro M. Some elementary properties of SIR networks or, can I get
sick because you got vaccinated? Bull Math Biol. 2008 Apr;70(3):713–727. Available from:
http://www.ncbi.nlm.nih.gov/pubmed/18060461.
Colbourn CJ. The Combinatorics of Network Reliability. New York, NY, USA: Oxford University Press, Inc.; 1987.
Grassberger P. Critical behavior of the general epidemic process and dynamical percolation.
Math Biosci. 1983;63:205–213.
Sander LM, Warren CP, Sokolov IM, Simon C, Koopman J. Percolation on heterogeneous
networks as a model for epidemics. Math Biosci. 2002;180:293–205.
Kenah E, Robbins JM. Second look at the spread of epidemics on networks. Phys Rev E.
2007;76:036113. Available from: doi:10.1103/PhysRevE.76.036113 .
Meyers LA. Contact network epidemiology: bond percolation applied to infectious disease
prediction and control. Bull Amer Math Soc. 2007;44:63–86.
Ball MO. Complexity of network reliability computations. Networks. 1980;10:153–165.
Buzacott JA. A Recursive Algorithm for Finding the Probability that a Graph is Disconnected. Department of Industrial Engineering, University of Toronto; 1976. Working Paper
No. 76-0 16.
Ball MO. Network Reliability Analysis: Algorithms and Complexity [Ph.D. Thesis]. Cornell
University; 1977.
Rosenthal A. Computing the Reliability of Complex Networks. SIAM J Appl Math.
1977;32:384–393.
Ball MO. Computing network reliability. Oper Res. 1979;27:823–838.
Agrawal A, Barlow RE. A survey of network reliability and domination theory. Oper Res.
1984;32:478–492.
Harms DD, Kraetzl M, Colbourn CJ, Devitt JS. Network Reliability: Experiments with a
Symbolic Algebra Environment. Boca Raton, FL, USA: CRC Press, Inc.; 1995.
May RM, Lloyd AL. Infection dynamics on scale-free networks. Phys Rev E. 2001
Nov;64(6):066112.
Watts DJ, Strogatz SH. Collective dynamics of ’small-world’ networds. Nature.
1998;393(4):440–443.

14

MICHAEL SHAPIRO AND EDGAR DELGADO-ECKERT

[47] Newman MEJ, Watts DJ. Scaling and percolation in the small-world network model. Phys
Rev E. 1999;60:7332–7342.
[48] Barlow RE, Proschan F. Statistical theory of reliability and life testing. Rinehart and Winston, Inc., New York: Holt; 1975. Probability models, International Series in Decision Processes, Series in Quantitative Methods for Decision Making.
[49] Gertsbakh IB, Shpungin Y. Models of Network Reliability: Analysis, Combinatorics and
Monte Carlo. Boca Raton, FL, USA: CRC Press, Inc.; 2010.
[50] Fishman GS. A Monte Carlo sampling plan for estimating network reliability. Oper Res.
1986;34(4):581–594. Available from: http://dx.doi.org/10.1287/opre.34.4.581 .
[51] Lomonosov
M,
Shpungin
Y.
Combinatorics
of
reliability
Monte
Carlo.
Random
Structures
Algorithms.
1999;14(4):329–343.
Available
from:
http://dx.doi.org/10.1002/(SICI)1098-2418(199907)14:4<329::AID-RSA3>3.0.CO;2-X .
[52] Cancela H, El Khadiri M. A recursive variance-reduction algorithm for estimating
communication-network reliability. Reliability, IEEE Transactions on. 1995 dec;44(4):595 –
602.
[53] Hui KP, Bean N, Kraetzl M, Kroese D. The tree cut and merge algorithm for estimation of network reliability. Probab Engrg Inform Sci. 2003;17(1):23–45. Available from:
http://dx.doi.org/10.1017/S0269964803171021.
[54] Hui KP, Bean N, Kraetzl M, Kroese DP. The cross-entropy method for network reliability estimation. Ann Oper Res. 2005;134:101–118. Available from:
http://dx.doi.org/10.1007/s10479-005-5726-x.
[55] Wallinga J, van Boven M, Lipsitch M. Optimizing infectious disease interventions during an
emerging epidemic. PNAS. 2010;107(2):923–928.
Department of Pathology, Tufts University, Boston, MA 02111
E-mail address: michael.shapiro@tufts.edu
Department of Biosystems Science and Engineering, Swiss Federal Institute of Technology Zurich (ETH Zürich), Basel, Switzerland and Swiss Institute of Bioinformatics.

